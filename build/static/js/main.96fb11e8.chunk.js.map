{"version":3,"sources":["constants/routes.tsx","components/Firebase/context.tsx","components/Firebase/firebase.tsx","components/Session/useSession.tsx","components/Home/Home.tsx","components/Profile/ProfilePage.tsx","components/Signup/SignupPage.tsx","components/Login/LoginPage.tsx","components/Post/Post.tsx","components/Question/Question.tsx","components/App/index.tsx","serviceWorker.ts","index.tsx","components/Question/Question.module.css","components/Profile/Profile.module.css","components/Home/Home.module.css","components/Signup/Signup.module.css","components/Login/Login.module.css","components/Post/Post.module.css"],"names":["ROUTES","FirebaseContext","createContext","useFirebase","useContext","config","apiKey","process","authDomain","databaseURL","projectId","messagingSenderId","SessionContext","auth","initializing","useSession","HomePage","firebase","session","useState","allFeed","setAllFeed","homeFeed","setHomeFeed","academic","setAcademic","bulletin","setBulletin","undefined","channels","setChannels","userDoc","setUserDoc","allLoadingDone","setAllLoadingDone","homeLoadingDone","setHomeLoadingDone","acadLoadingDone","setAcadLoadingDone","bulLoadingDone","setBulLoadingDone","nowSeconds","setNowSeconds","lastAll","setLastAll","lastHome","setLastHome","lastAcad","setLastAcad","lastBul","setLastBul","allSort","setAllSort","homeSort","setHomeSort","acadSort","setAcadSort","bulSort","setBulSort","upvoted","setUpvoted","downvoted","setDownvoted","changed","setChanged","reportMessage","setReportMessage","reportAuthorName","setReportAuthorName","reportID","setReportID","reportHandling","setReportHandling","reportDone","setReportDone","reportModalShow","setReportModalShow","getChannels","a","db","collection","doc","uid","get","user","console","log","data","userData","channelList","actives","Object","keys","filter","key","getPosts","sort","category","categoryFeed","lastCategory","setLastCategory","setCategoryFeed","setLoading","subjects","update","docList","query","orderBy","posts","lastTime","timestamp","seconds","upvotes","startAfter","limit","size","length","where","empty","forEach","id","lastPost","i","numComments","loadPosts","useEffect","Date","getTime","feedLoadingView","style","paddingTop","Card","marginBottom","Body","Title","Text","Spinner","animation","feedView","feedList","map","object","time","message","Math","floor","curTime","channelView","subjectObjects","d","indexOf","Row","marginLeft","handleVote","upvoteTrue","upvoteList","downvoteList","upvoteIndex","downvoteIndex","splice","href","title","Subtitle","Col","xs","md","textAlign","bg","bounty","className","styles","fontLess","desc","Button","disabled","active","includes","variant","onClick","authorName","feedCard","sortButton","feedSort","setLastFeed","setFeedLoading","setFeedSort","handleSort","sortType","DropdownButton","Dropdown","Item","Navbar","Brand","Nav","username","window","location","marginRight","doSignOut","reload","Modal","show","onHide","Header","closeButton","Footer","InputGroup","Form","Control","as","placeholder","rows","onChange","event","target","value","role","aria-hidden","functions","httpsCallable","post","submittedBy","firestore","Timestamp","now","then","Container","paddingLeft","paddingBottom","Tabs","defaultActiveKey","Tab","eventKey","marginTop","ProfilePage","useParams","setUser","userid","setUserid","userLoading","setUserLoading","userSelf","setUserSelf","userSelfDoc","setUserSelfDoc","editSubjects","setEditSubjects","lang","setLang","sci","setSci","ss","setSS","history","setHistory","historyDone","setHistoryDone","setLastPost","setSort","setActives","userID","last","lastDoc","results","docs","userResults","getUser","self","getSelf","subjectEdit","subject","activesEdit","name","credits","paddingRight","entries","keyName","subjectsView","sm","SignupPage","validated","setValidated","setName","setUsername","email","setEmail","password","setPassword","err","setErr","usernameErr","setUsernameErr","passCheck","setPassCheck","handling","setHandling","handleSubmit","preventDefault","currentTarget","checkValidity","stopPropagation","checkUsername","createUserWithEmailAndPassword","catch","e","newUser","set","onSubmit","Group","controlId","Label","required","type","Feedback","match","Check","label","LoginPage","doSignInWithEmailAndPassword","PostPage","setChannelList","allChannels","setTitle","description","setDescription","setBounty","bountyCheck","setBountyCheck","bountyErr","setBountyErr","input","setInput","selectBul","setSelectBul","newPost","author","Number","awarded","ButtonGroup","array","index","selectedView","strKeyword","replace","substr","toLowerCase","push","onBlur","postToView","QuestionPage","props","postid","setSelf","setPost","postSelf","setPostSelf","answer","setAnswer","comments","setComments","setNumComments","activeAnswer","setActiveAnswer","loadingDone","setLoadingDone","commentsDone","setCommentsDone","timeMessage","setTimeMessage","reply","setReply","replyText","setReplyText","replyHandling","setReplyHandling","awardModalShow","setAwardModalShow","award","setAward","awardCheck","setAwardCheck","awardHandling","setAwardHandling","commentAuthorName","setCommentAuthorName","commentAuthor","setCommentAuthor","commentID","setCommentID","getComments","commentsList","replies","collect","allComments","setAllComments","selfDoc","postDoc","commentsTest","getPost","handleReplyChange","handleReplySubmit","newReply","comment","parent","thread","selected","newComment","borderLeft","fontSize","MainApp","exact","path","AppWithAuth","currentUser","authObject","setAuthObject","unsubscribe","onAuthStateChanged","prevState","Provider","AppWithTwitter","getTwitterResult","useCallback","getRedirectResult","result","additionalUserInfo","credential","code","Boolean","hostname","ReactDOM","render","StrictMode","provider","doTwitterSignIn","signInWithRedirect","doCreateUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","app","apps","initializeApp","this","TwitterAuthProvider","App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","module","exports"],"mappings":"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","file":"static/js/main.96fb11e8.chunk.js","sourcesContent":["const ROUTES = {\n    ROOT: \"/\",\n    SIGNUP: \"/signup\",\n    LOGIN: \"/login\",\n    POST: \"/new\",\n    USERNAME: \"/user/:username\",\n    COMMENTS: \"/post/:postid\"\n}\n\nexport { ROUTES }","import { createContext, useContext } from 'react'\nimport { Firebase } from './firebase'\n\n\nconst FirebaseContext = createContext<Firebase>({} as Firebase)\n\nconst useFirebase = () => {\n    const firebase = useContext(FirebaseContext)\n\n    return firebase\n}\nexport { FirebaseContext, useFirebase }\n","import app from 'firebase/app'\nimport 'firebase/auth'\nimport 'firebase/firestore'\nimport 'firebase/functions'\n\nconst config = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n}\n\nclass Firebase {\n    auth: firebase.auth.Auth\n    db: firebase.firestore.Firestore\n    functions: firebase.functions.Functions\n    provider: firebase.auth.AuthProvider\n\n    constructor() {\n        if (!app.apps.length) {\n            app.initializeApp(config)\n        }\n        this.auth = app.auth()\n        // For ease of access. Note that db normally refers to Firebase Realtime Database.\n        this.db = app.firestore()\n        this.functions = app.functions()\n        this.provider = new app.auth.TwitterAuthProvider()\n    }\n\n    // *** Auth API ***\n\n    // twitter signin handler\n    doTwitterSignIn = async () => {\n        this.auth.signInWithRedirect(this.provider)\n    }\n\n    // email and password signin handlers\n    doCreateUserWithEmailAndPassword = (email: string, password: string) =>\n        this.auth.createUserWithEmailAndPassword(email, password)\n\n    doSignInWithEmailAndPassword = (email: string, password: string) =>\n        this.auth.signInWithEmailAndPassword(email, password)\n\n    doSignOut = () => this.auth.signOut()\n\n}\n\nexport { Firebase }\n","import { createContext, useContext } from 'react'\nimport firebase from 'firebase'\n\ninterface SessionObject {\n    initializing: boolean,\n    auth: firebase.User | null,\n}\n\nconst SessionContext = createContext<SessionObject>({\n    auth: {} as firebase.User,\n    initializing: true\n})\n\nconst useSession = () => {\n    const session = useContext(SessionContext)\n    return session\n}\n\nexport { SessionContext, useSession }\n\n","import React, { useState, useCallback, useEffect } from 'react'\nimport { useFirebase, Firebase } from '../Firebase'\nimport { functions, auth, firestore } from 'firebase'\nimport { Navbar, Nav, Button, ButtonGroup, Container, Row, Col, Spinner, Jumbotron, Image, ProgressBar, OverlayTrigger, Popover, Carousel, Card, Tabs, Tab, DropdownButton, Dropdown, Modal, InputGroup, Form } from 'react-bootstrap'\nimport { useSession } from '../Session'\nimport styles from './Home.module.css'\n\nconst HomePage: React.FC = () => {\n    const firebase = useFirebase()\n    const session = useSession()\n\n    const [allFeed, setAllFeed] = useState<any[]>([])\n    const [homeFeed, setHomeFeed] = useState<any[]>([])\n    const [academic, setAcademic] = useState<any[]>([])\n    const [bulletin, setBulletin] = useState<any[]>([])\n    const [channels, setChannels] = useState<string[] | undefined>(undefined)\n\n    const [userDoc, setUserDoc] = useState<any>(null)\n\n    const [allLoadingDone, setAllLoadingDone] = useState<boolean>(false);\n    const [homeLoadingDone, setHomeLoadingDone] = useState<boolean>(false);\n    const [acadLoadingDone, setAcadLoadingDone] = useState<boolean>(false);\n    const [bulLoadingDone, setBulLoadingDone] = useState<boolean>(false);\n\n    const [nowSeconds, setNowSeconds] = useState<number>(0);\n\n    const [lastAll, setLastAll] = useState<any>(null);\n    const [lastHome, setLastHome] = useState<any>(null);\n    const [lastAcad, setLastAcad] = useState<any>(null);\n    const [lastBul, setLastBul] = useState<any>(null);\n\n    const [allSort, setAllSort] = useState<string>('timestamp.seconds')\n    const [homeSort, setHomeSort] = useState<string>('timestamp.seconds')\n    const [acadSort, setAcadSort] = useState<string>('timestamp.seconds')\n    const [bulSort, setBulSort] = useState<string>('timestamp.seconds')\n\n    const [upvoted, setUpvoted] = useState<string[]>([])\n    const [downvoted, setDownvoted] = useState<string[]>([])\n    const [changed, setChanged] = useState<boolean>(false);\n\n    const [reportMessage, setReportMessage] = useState<string>('')\n    const [reportAuthorName, setReportAuthorName] = useState<string>('')\n    const [reportID, setReportID] = useState<string>('')\n    const [reportHandling, setReportHandling] = useState<boolean>(false)\n    const [reportDone, setReportDone] = useState<boolean>(false);\n\n    const [reportModalShow, setReportModalShow] = useState<boolean>(false)\n\n    const getChannels = async () => {\n        try {\n            const user = await firebase.db.collection('users').doc(session.auth?.uid).get()\n            console.log('user = ', user.data())\n            const userData = user.data()\n            setUserDoc(userData)\n            if (userData?.upvoted) {\n                setUpvoted(userData?.upvoted)\n            }\n            if (userData?.downvoted) {\n                setDownvoted(userData?.downvoted)\n            }\n            const channelList = user.data()?.actives\n            console.log('channelList = ', channelList)\n            console.log('object.keys() = ', Object.keys(channelList).filter((key) => {\n                return channelList[key] == true;\n            }))\n            return Object.keys(channelList).filter((key) => {\n                return channelList[key] == true;\n            })\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n    const getPosts = async (sort: string, category: string, categoryFeed: any[], lastCategory: any, setLastCategory: any, setCategoryFeed: any, setLoading: any, subjects: string[] | undefined, update: boolean) => {\n        console.log('lastCategory START = ', lastCategory)\n        try {\n            var docList: any[] = []\n            var query = firebase.db.collection('posts').orderBy(sort, 'desc')\n\n            let posts = null;\n            console.log('subjects =', subjects)\n            if (category === 'all') {\n                console.log('lastCategory')\n                if (lastCategory) {\n                    console.log('lastCategory = ', lastCategory)\n                    const lastTime = sort == 'timestamp.seconds' ? lastCategory.data.timestamp.seconds : lastCategory.data.upvotes\n\n                    console.log('lastTime = ', lastTime)\n                    posts = await query.startAfter(lastTime).limit(10).get()\n                } else {\n                    posts = await query.limit(10).get()\n                    console.log('tHIS POSTS = ', posts.size)\n                }\n\n\n            } else {\n                if (category == 'academic') {\n                    if (subjects == undefined || subjects?.length == 0) {\n                        posts = null\n                        setLoading(true)\n                        return\n                    }\n                    query = query.where('bulletin', '==', false)\n                }\n                if (lastCategory) {\n                    console.log('lastCategory 2 = ', lastCategory)\n                    const lastTime = sort == 'timestamp.seconds' ? lastCategory.data.timestamp.seconds : lastCategory.data.upvotes\n                    console.log('lastTime = ', lastTime)\n                    if (category == 'bulletin') {\n                        posts = await query.startAfter(lastTime).where('bulletin', '==', true).limit(10).get()\n                    } else {\n                        posts = await query.startAfter(lastTime).where('channels', 'array-contains-any', subjects).limit(10).get()\n                    }\n                } else {\n                    if (category == 'bulletin') {\n                        posts = await query.where('bulletin', '==', true).limit(10).get()\n                    } else {\n                        posts = await query.where('channels', 'array-contains-any', subjects).limit(10).get()\n                    }\n                }\n            }\n\n\n            if (posts?.empty || posts == null) {\n                console.log('No matching documents')\n                setLoading(true)\n                return;\n            }\n\n\n            posts?.forEach(doc => {\n                docList = [...docList, { id: doc.id, data: doc.data() }];\n            });\n\n            const lastPost = docList[docList.length - 1]\n            setLastCategory(lastPost)\n\n            for (let i = 0; i < docList.length; i++) {\n                const doc = docList[i]\n                const numComments = await firebase.db.collection('comments').where('thread', '==', doc.id).get()\n                docList[i] = { id: doc.id, data: doc.data, numComments: numComments.size }\n            }\n\n            if (update) {\n                setCategoryFeed([...docList])\n\n            } else {\n                setCategoryFeed([...categoryFeed, ...docList])\n            }\n\n            setLoading(true)\n\n\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n    const loadPosts = async () => {\n        let subjects: string[] | undefined = []\n        if (session.auth) {\n            subjects = await getChannels()\n        }\n\n        setChannels(subjects)\n\n        getPosts('timestamp.seconds', 'all', allFeed, lastAll, setLastAll, setAllFeed, setAllLoadingDone, subjects, false)\n        getPosts('timestamp.seconds', 'home', homeFeed, lastHome, setLastHome, setHomeFeed, setHomeLoadingDone, subjects, false)\n        getPosts('timestamp.seconds', 'academic', academic, lastAcad, setLastAcad, setAcademic, setAcadLoadingDone, subjects, false)\n        getPosts('timestamp.seconds', 'bulletin', bulletin, lastBul, setLastBul, setBulletin, setBulLoadingDone, subjects, false)\n\n        console.log('subjects = ', subjects)\n    }\n\n    useEffect(() => {\n        var now = new Date();\n        var seconds = ((now.getTime()) * .001) >> 0;\n        setNowSeconds(seconds);\n\n        console.log(seconds)\n        //retrieves the most recent 10 posts\n\n\n\n        loadPosts()\n    }, [session, firebase])\n\n    const handleReportChange = (event: any) => {\n        setReportMessage(event.target.value);\n    }\n\n\n    //a feed object\n    const feedCard = (object: { id: string; data: { title: string; desc: string; timestamp: { seconds: number, nanoseconds: number }; author: string; channels: Array<string>; authorName: string; upvotes: number; bounty: number; bulletin: boolean }; numComments: number }) => {\n\n        var time = nowSeconds - object.data.timestamp.seconds;\n        var message = ''\n        if (time < 120) {\n            message = 'about a minute ago'\n        } else if (time < 3600) {\n            message = `${Math.floor(time / 60)} minutes ago`\n        } else if (time < 86400) {\n            let curTime = Math.floor(time / 3600)\n            if (curTime == 1) {\n                message = 'about an hour ago'\n            } else {\n                message = `${curTime} hours ago`\n            }\n        } else {\n            let curTime = Math.floor(time / 86400)\n            if (curTime == 1) {\n                message = 'yesterday'\n            } else {\n                message = `${curTime} days ago`\n            }\n        }\n\n        const channelView = () => {\n            const subjectObjects = object.data.channels?.map((d) => <p key={d}>{(object.data.channels.indexOf(d) == 0) ? `#${d}` : `, #${d}`}</p>)\n            return (\n                <div>\n                    <Row style={{ marginLeft: 1 }}>{subjectObjects}</Row>\n\n                </div>\n            )\n        }\n\n        const handleVote = (upvoteTrue: boolean) => {\n            var upvoteList: string[] = []\n            var downvoteList: string[] = []\n            var upvoteIndex = -1\n            var downvoteIndex = -1\n            console.log('userDoc = ', userDoc)\n            if (userDoc.upvoted) {\n                upvoteList = upvoted\n                upvoteIndex = upvoteList.indexOf(object.id)\n            }\n            if (userDoc.downvoted) {\n                downvoteList = downvoted\n                downvoteIndex = downvoteList.indexOf(object.id)\n            }\n\n            console.log('upvoteIndex = ', upvoteIndex)\n\n            console.log('upvoteList = ', upvoteList)\n\n            console.log('downvoteIndex = ', downvoteIndex)\n\n            console.log('downvoteList = ', downvoteList)\n\n            var upvotes: number;\n            if (object.data.upvotes) {\n                upvotes = object.data.upvotes\n            } else {\n                upvotes = 0\n            }\n\n            if (upvoteTrue) {\n\n                if (upvoteIndex == -1) {\n                    if (downvoteIndex != -1) {\n                        downvoteList.splice(downvoteIndex, 1)\n                        firebase.db.collection('users').doc(session.auth?.uid).update({ downvoted: downvoteList })\n                        upvotes = upvotes + 1\n                    }\n                    upvoteList = [...upvoteList, object.id]\n                    console.log('upvoteList after adding = ', upvoteList)\n                    upvotes = upvotes + 1\n\n                } else {\n                    upvoteList.splice(upvoteIndex, 1)\n                    console.log('upvoteList after splice = ', upvoteList)\n                    upvotes = upvotes - 1\n                }\n                firebase.db.collection('users').doc(session.auth?.uid).update({ upvoted: upvoteList })\n\n                firebase.db.collection('posts').doc(object.id).update({ upvotes: upvotes })\n                object.data.upvotes = upvotes;\n            } else {\n                if (downvoteIndex == -1) {\n                    if (upvoteIndex != -1) {\n                        upvoteList.splice(upvoteIndex, 1)\n                        firebase.db.collection('users').doc(session.auth?.uid).update({ upvoted: upvoteList })\n                        upvotes = upvotes - 1\n                    }\n                    downvoteList = [...downvoteList, object.id]\n                    console.log('downvoteList after adding = ', downvoteList)\n                    upvotes = upvotes - 1\n                } else {\n                    downvoteList.splice(downvoteIndex, 1)\n                    console.log('downvoteList after splice = ', downvoteList)\n                    upvotes = upvotes + 1\n                }\n\n\n                firebase.db.collection('users').doc(session.auth?.uid).update({ downvoted: downvoteList })\n                firebase.db.collection('posts').doc(object.id).update({ upvotes: upvotes })\n                object.data.upvotes = upvotes;\n            }\n\n\n            if (upvoteList) {\n                setUpvoted(upvoteList)\n            }\n            if (downvoteList) {\n                setDownvoted(downvoteList)\n            }\n        }\n\n        return (\n\n            <Card style={{ marginBottom: 20 }}>\n                <Card.Body>\n\n                    {object.data.bulletin ?\n                        <div>\n                            <a href={`/post/${object.id}`}>\n                                <Card.Title>{object.data.title}</Card.Title>\n                            </a>\n                            <Card.Subtitle>{channelView()}</Card.Subtitle>\n                        </div>\n                        :\n                        <Row>\n                            <Col>\n                                <a href={`/post/${object.id}`}>\n                                    <Card.Title>{object.data.title}</Card.Title>\n                                </a>\n                                <Card.Subtitle>{channelView()}</Card.Subtitle>\n\n                            </Col>\n                            <Col xs={3} md={2} style={{ textAlign: 'center' }}>\n                                <Card bg=\"light\" >\n                                    {object.data.bounty <= 0 ?\n                                        <Card.Title style={{ paddingTop: 10 }}>Claimed</Card.Title>\n                                        :\n                                        <Card.Title style={{ paddingTop: 10 }}>{object.data.bounty} cr.</Card.Title>\n                                    }\n\n                                </Card>\n\n                            </Col>\n                        </Row>\n                    }\n\n                    <Card.Text className={styles.fontLess}> {object.data.desc}</Card.Text>\n\n\n                    <Card.Text className={styles.fontLess} style={{ paddingTop: 10 }}>\n                        <Button disabled={!session.auth} size=\"sm\" active={upvoted.includes(object.id)} variant=\"outline-primary\" onClick={() => {\n                            handleVote(true)\n                            setChanged(!changed)\n                        }}>\n                            ▲\n                            </Button>\n                        {' '}\n                        &nbsp;\n                        {object.data.upvotes ?\n                            object.data.upvotes\n                            :\n                            0\n                        }\n                        {' '}\n                        &nbsp;\n                        <Button disabled={!session.auth} size=\"sm\" active={downvoted.includes(object.id)} variant=\"outline-danger\" onClick={() => {\n                            handleVote(false)\n                            setChanged(!changed)\n                        }}>▼</Button>\n                        {' '}\n                        &nbsp;\n                        {object.numComments == 1 ?\n                            <a href={`/post/${object.id}`}>{object.numComments} comment</a>\n                            :\n                            <a href={`/post/${object.id}`}>{object.numComments} comments</a>\n                        }\n\n                        {' '} - posted by <a href={`/user/${object.data.authorName}`}>{`@${object.data.authorName}`}</a> - {message}\n                        {' - '}\n                        &nbsp;\n                        <Button disabled={!session.auth} size=\"sm\" variant='outline-danger' onClick={() => {\n                            setReportAuthorName(object.data.authorName)\n                            setReportID(object.id)\n                            setReportModalShow(true)\n                        }}>\n                            ⚐\n                        </Button>\n                    </Card.Text>\n                </Card.Body>\n            </Card >\n            //\n        )\n    }\n\n    //loading animation while retrieving feed\n    const feedLoadingView = () => {\n        return (\n            <div style={{ paddingTop: 15 }}>\n\n                <Card style={{ marginBottom: 20 }}>\n                    <Card.Body>\n                        <Card.Title></Card.Title>\n                        <Card.Text></Card.Text>\n                        <Spinner animation=\"border\" />\n                    </Card.Body>\n                </Card>\n                <Card style={{ marginBottom: 20 }}>\n                    <Card.Body>\n                        <Card.Title></Card.Title>\n                        <Card.Text></Card.Text>\n                        <Spinner animation=\"border\" />\n                    </Card.Body>\n                </Card>\n                <Card style={{ marginBottom: 20 }}>\n                    <Card.Body>\n                        <Card.Title></Card.Title>\n                        <Card.Text></Card.Text>\n                        <Spinner animation=\"border\" />\n                    </Card.Body>\n                </Card>\n                <Card style={{ marginBottom: 20 }}>\n                    <Card.Body>\n                        <Card.Title></Card.Title>\n                        <Card.Text></Card.Text>\n                        <Spinner animation=\"border\" />\n                    </Card.Body>\n                </Card>\n                <Card style={{ marginBottom: 20 }}>\n                    <Card.Body>\n                        <Card.Title></Card.Title>\n                        <Card.Text></Card.Text>\n                        <Spinner animation=\"border\" />\n                    </Card.Body>\n                </Card>\n            </div>\n\n        )\n    }\n\n    //list of feed objects\n    const feedView = (feedList: { id: string; data: { title: string; desc: string; timestamp: { seconds: number; nanoseconds: number }; author: string; channels: string[]; authorName: string; upvotes: number; bounty: number; bulletin: boolean }; numComments: number }[]) => {\n        const feedItems = feedList.map((object: { id: string; data: { title: string; desc: string; timestamp: { seconds: number, nanoseconds: number }; author: string; channels: Array<string>; authorName: string; upvotes: number; bounty: number; bulletin: boolean }; numComments: number }) => <div key={object.id} style={{ paddingTop: 15 }}>{feedCard(object)}</div>\n        )\n        return feedItems\n    }\n\n    const sortButton = (category: string, categoryFeed: any[], feedSort: string, setLastFeed: any, setCategoryFeed: any, setFeedLoading: any, setFeedSort: any) => {\n        const handleSort = async (sortType: string) => {\n            setLastFeed(null)\n            setCategoryFeed([])\n            setFeedLoading(false)\n            await getPosts(sortType, category, categoryFeed, null, setLastFeed, setCategoryFeed, setFeedLoading, channels, true)\n            await setFeedSort(sortType)\n        }\n\n        return (\n            <DropdownButton id=\"sort\" title={feedSort == 'bounty' ? 'Highest Bounty' : 'timestamp.seconds' ? 'Most Recent' : 'Top Rated'} variant='light' style={{ paddingTop: 15 }}>\n                <Dropdown.Item active={feedSort == 'timestamp.seconds'}\n                    onClick={async () => {\n                        if (feedSort == 'timestamp.seconds') {\n                            return\n                        } else {\n                            handleSort('timestamp.seconds')\n                        }\n                    }}\n                >\n                    Most Recent\n                                        </Dropdown.Item>\n\n                <Dropdown.Item active={feedSort == 'bounty'}\n                    onClick={async () => {\n                        if (feedSort == 'bounty') {\n                            return\n                        } else {\n                            handleSort('bounty')\n                        }\n                    }}\n                >\n                    Highest Bounty\n                                        </Dropdown.Item>\n\n                <Dropdown.Item active={feedSort == 'upvotes'}\n                    onClick={() => {\n                        if (feedSort == 'upvotes') {\n                            return\n                        } else {\n                            handleSort('upvotes')\n                        }\n                    }}\n                >\n                    Top Rated\n                                        </Dropdown.Item>\n            </DropdownButton>\n        )\n    }\n\n    return (\n        <div>\n            <Navbar bg=\"light\" variant=\"light\">\n                <Navbar.Brand href=\"/\">\n                    {' '}\n                            ioyou\n                    </Navbar.Brand>\n                <Nav className=\"ml-auto\">\n                    {session.auth ?\n                        <div>\n                            <Button variant=\"light\" onClick={async () => {\n                                const user = await firebase.db.collection('users').doc(session?.auth?.uid).get()\n                                const username = user?.data()?.username\n                                window.location.href = `/user/${username}`\n                            }} style={{ marginRight: 10 }}>\n                                Profile\n                            </Button>\n                            <Button href=\"/new\" variant=\"outline-dark\" style={{ marginRight: 10 }}>Post</Button>\n                            <Button variant=\"light\" onClick={() => {\n                                firebase.doSignOut()\n                                window.location.reload()\n                            }}>\n                                Sign Out\n                            </Button>\n                        </div>\n\n                        :\n                        <div>\n                            <Button variant=\"outline-dark\" href=\"/login\" style={{ marginRight: 10 }}>\n                                log in\n                                </Button>\n\n                            <Button variant=\"light\" href=\"/signup\">\n                                sign up\n                                </Button>\n                        </div>\n                    }\n\n                </Nav>\n            </Navbar>\n            <Modal show={reportModalShow} onHide={() => {\n                setReportModalShow(false)\n                setReportDone(false)\n                setReportMessage('')\n            }}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Report @{reportAuthorName}</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    Let us know if this user is violating community agreements as outlined in our terms of service. Thanks!\n                    </Modal.Body>\n                <Modal.Footer>\n                    <InputGroup>\n                        <Form.Control as=\"textarea\" placeholder=\"What's the reason for reporting this user?\" rows={3} onChange={handleReportChange} value={reportMessage} />\n                    </InputGroup>\n                    {reportHandling ?\n                        <Button disabled variant='danger'>\n                            <Spinner\n                                as=\"span\"\n                                animation=\"border\"\n                                size=\"sm\"\n                                role=\"status\"\n                                aria-hidden=\"true\"\n                            />\n                        </Button>\n                        :\n                        reportDone ?\n                            <Button disabled variant='danger'>Thanks! You can close this window.</Button>\n\n                            :\n                            <Button variant='danger' onClick={async () => {\n                                setReportHandling(true);\n                                await functions().httpsCallable('createReport')({ post: reportID, reportMessage: reportMessage, submittedBy: session.auth?.uid, timestamp: firestore.Timestamp.now() }).then(() => {\n                                    setReportHandling(false);\n                                    setReportDone(true);\n                                })\n                            }}>Report\n                        </Button>\n                    }\n\n                </Modal.Footer>\n            </Modal>\n            <Container className={styles.paddingTop}>\n                <Row>\n                    <Col>\n                        <h1 style={{ paddingLeft: 22, paddingBottom: 15 }}>Feed</h1>\n                    </Col>\n                    <Col>\n\n                    </Col>\n                </Row>\n                <Tabs defaultActiveKey={session.auth ? 'Home' : 'All'} id=\"feed-nav\">\n                    <Tab eventKey=\"All\" title=\"All\">\n                        {sortButton('all', allFeed, allSort, setLastAll, setAllFeed, setAllLoadingDone, setAllSort)}\n                        {\n\n                            allFeed[0] ?\n                                <div>\n                                    {feedView(allFeed)}\n                                    {allLoadingDone ?\n                                        <Button variant='light' onClick={() => {\n                                            setAllLoadingDone(false)\n                                            getPosts(allSort, 'all', allFeed, lastAll, setLastAll, setAllFeed, setAllLoadingDone, [], false)\n                                        }}>Load more</Button>\n                                        :\n                                        <Button disabled variant=\"light\">\n                                            <Spinner\n                                                as=\"span\"\n                                                animation=\"border\"\n                                                size=\"sm\"\n                                                role=\"status\"\n                                                aria-hidden=\"true\"\n                                            />\n                                        </Button>\n                                    }\n\n                                </div>\n\n                                :\n                                allLoadingDone ?\n                                    <Card style={{ marginTop: 15 }}>\n                                        <Card.Body>\n                                            <Card.Text>No new posts.</Card.Text>\n                                        </Card.Body>\n                                    </Card>\n                                    :\n                                    feedLoadingView()\n                        }\n\n                    </Tab>\n                    <Tab eventKey=\"Home\" title=\"Home\">\n                        {sortButton('home', homeFeed, homeSort, setLastHome, setHomeFeed, setHomeLoadingDone, setHomeSort)}\n                        {\n                            homeFeed[0] ?\n                                <div>\n                                    {feedView(homeFeed)}\n                                    {homeLoadingDone ?\n                                        <Button variant='light' onClick={() => {\n                                            setHomeLoadingDone(false)\n                                            getPosts(homeSort, 'home', homeFeed, lastHome, setLastHome, setHomeFeed, setHomeLoadingDone, channels, false)\n                                        }}>Load more</Button>\n                                        :\n                                        <Button disabled variant='light'>\n                                            <Spinner\n                                                as=\"span\"\n                                                animation=\"border\"\n                                                size=\"sm\"\n                                                role=\"status\"\n                                                aria-hidden=\"true\"\n                                            />\n                                        </Button>}\n\n                                </div>\n\n                                :\n                                homeLoadingDone ?\n                                    session.auth ?\n                                        <Card style={{ marginTop: 15 }}>\n                                            <Card.Body>\n                                                <Card.Text>No new posts. Subscribe to more channels in your Profile page!</Card.Text>\n                                            </Card.Body>\n                                        </Card>\n                                        :\n                                        <Card style={{ marginTop: 15 }}>\n                                            <Card.Body>\n                                                <Card.Text>Create an account to subscribe to specific channels.</Card.Text>\n                                            </Card.Body>\n                                        </Card>\n                                    :\n                                    feedLoadingView()\n                        }\n\n                    </Tab>\n                    <Tab eventKey=\"Academic\" title=\"Academic\">\n                        {sortButton('academic', academic, acadSort, setLastAcad, setAcademic, setAcadLoadingDone, setAcadSort)}\n                        {\n                            academic[0] ?\n                                <div>\n                                    {feedView(academic)}\n                                    {acadLoadingDone ?\n                                        <Button variant='light' onClick={() => {\n                                            setAcadLoadingDone(false)\n                                            getPosts(acadSort, 'academic', academic, lastAcad, setLastAcad, setAcademic, setAcadLoadingDone, channels, false)\n                                        }}>Load more</Button>\n                                        :\n                                        <Button disabled variant='light'>\n                                            <Spinner\n                                                as=\"span\"\n                                                animation=\"border\"\n                                                size=\"sm\"\n                                                role=\"status\"\n                                                aria-hidden=\"true\"\n                                            />\n                                        </Button>}\n\n                                </div>\n\n                                :\n                                acadLoadingDone ?\n                                    session.auth ?\n                                        <Card style={{ marginTop: 15 }}>\n                                            <Card.Body>\n                                                <Card.Text>Subscribe to channels in your Profile page.</Card.Text>\n                                            </Card.Body>\n                                        </Card>\n                                        :\n                                        <Card style={{ marginTop: 15 }}>\n                                            <Card.Body>\n                                                <Card.Text>Create an account to subscribe to specific channels.</Card.Text>\n                                            </Card.Body>\n                                        </Card>\n                                    :\n                                    feedLoadingView()\n                        }\n\n                    </Tab>\n                    <Tab eventKey=\"Bulletin\" title=\"Bulletin\">\n                        {sortButton('bulletin', bulletin, bulSort, setLastBul, setBulletin, setBulLoadingDone, setBulSort)}\n                        {\n                            bulletin[0] ?\n                                <div>\n                                    {feedView(bulletin)}\n                                    {bulLoadingDone ?\n                                        <Button variant='light' onClick={() => {\n                                            setBulLoadingDone(false)\n                                            getPosts(bulSort, 'bulletin', bulletin, lastBul, setLastBul, setBulletin, setBulLoadingDone, channels, false)\n                                        }}>Load more</Button>\n                                        :\n                                        <Button disabled variant='light'>\n                                            <Spinner\n                                                as=\"span\"\n                                                animation=\"border\"\n                                                size=\"sm\"\n                                                role=\"status\"\n                                                aria-hidden=\"true\"\n                                            />\n                                        </Button>\n                                    }\n\n                                </div>\n\n                                :\n                                bulLoadingDone ?\n                                    <Card style={{ marginTop: 15 }}>\n                                        <Card.Body>\n                                            <Card.Text>No new posts.</Card.Text>\n                                        </Card.Body>\n                                    </Card>\n                                    :\n                                    feedLoadingView()\n                        }\n\n                    </Tab>\n                </Tabs>\n            </Container>\n        </div>\n    )\n}\n\nexport { HomePage }\n","import React, { useState, useCallback, useEffect } from 'react'\nimport { useParams } from 'react-router-dom';\nimport { useFirebase, Firebase } from '../Firebase'\nimport { firestore } from 'firebase'\nimport { Navbar, Nav, Button, DropdownButton, Dropdown, Container, Row, Col, Spinner, Jumbotron, Image, ProgressBar, OverlayTrigger, Popover, Carousel, Card } from 'react-bootstrap'\nimport { useSession } from '../Session'\nimport styles from './Profile.module.css'\nimport { StringLocale } from 'yup';\n\nconst ProfilePage: React.FC = () => {\n    const { username } = useParams()\n    const firebase = useFirebase()\n    const session = useSession()\n\n    const [user, setUser] = useState<any>(null);\n    const [userid, setUserid] = useState<string>('')\n    const [userLoading, setUserLoading] = useState<boolean>(true);\n\n    const [userSelf, setUserSelf] = useState<boolean>(false);\n    const [userSelfDoc, setUserSelfDoc] = useState<any>(null);\n    const [upvoted, setUpvoted] = useState<string[]>([])\n    const [downvoted, setDownvoted] = useState<string[]>([])\n    const [editSubjects, setEditSubjects] = useState<boolean>(false);\n\n    const [changed, setChanged] = useState<boolean>(false);\n    const [lang, setLang] = useState<boolean>(false)\n    const [sci, setSci] = useState<boolean>(false)\n    const [ss, setSS] = useState<boolean>(false);\n\n    const [history, setHistory] = useState<any[] | null>(null);\n\n    const [historyDone, setHistoryDone] = useState<boolean>(false);\n\n    const [nowSeconds, setNowSeconds] = useState<number>(0);\n\n    const [lastPost, setLastPost] = useState<any>(null)\n\n    const [sort, setSort] = useState<string>('timestamp.seconds')\n\n\n    //list of subjects\n    const [actives, setActives] = useState<any>({});\n\n    const sortButton = (sort: string) => {\n        const handleSort = async (sort: string) => {\n            setLastPost(null)\n            setHistory(null)\n            setHistoryDone(false)\n            await getPosts(sort, userid, null, null)\n            setSort(sort)\n        }\n\n        return (\n            <DropdownButton id=\"sort\" title={sort == 'timestamp.seconds' ? 'Most Recent' : 'Top Rated'} variant='light' style={{ paddingBottom: 15 }}>\n                <Dropdown.Item active={sort == 'timestamp.seconds'}\n                    onClick={async () => {\n                        if (sort == 'timestamp.seconds') {\n                            return\n                        } else {\n                            handleSort('timestamp.seconds')\n                            setChanged(!changed)\n                        }\n                    }}\n                >\n                    Most Recent\n                                        </Dropdown.Item>\n                <Dropdown.Item active={sort == 'upvotes'}\n                    onClick={async () => {\n                        if (sort == 'upvotes') {\n                            return\n                        } else {\n                            handleSort('upvotes')\n                            setChanged(!changed)\n                        }\n                    }}\n                >\n                    Top of All Time\n                                        </Dropdown.Item>\n            </DropdownButton>\n        )\n    }\n\n    const getPosts = async (sort: string, userID: string, last: any | null, history: any[] | null) => {\n        try {\n            var docList: any[] = []\n            var query = firebase.db.collection('posts').where('author', '==', userID).orderBy(sort, \"desc\");\n\n            if (last) {\n                console.log('lastPost = ', last)\n                const lastTime = sort == 'timestamp.seconds' ? last.data.timestamp.seconds : last.data.upvotes\n\n                console.log('lastTime = ', lastTime)\n                query = query.startAfter(lastTime)\n            }\n\n            const posts = await query.limit(10).get()\n\n\n            if (posts.empty || posts == null) {\n                console.log('No matching documents')\n                setHistoryDone(true);\n                return;\n            }\n            posts.forEach(doc => {\n                docList = [...docList, { id: doc.id, data: doc.data() }];\n            });\n\n            for (let i = 0; i < docList.length; i++) {\n                const doc = docList[i]\n                const numComments = await firebase.db.collection('comments').where('thread', '==', doc.id).get()\n                docList[i] = { id: doc.id, data: doc.data, numComments: numComments.size }\n            }\n\n            const lastDoc = docList[docList.length - 1]\n            setLastPost(lastDoc)\n\n            if (history) {\n                await setHistory([...history, ...docList])\n            } else {\n                await setHistory(docList)\n            }\n\n            console.log('docList = ', docList)\n            setHistoryDone(true)\n        } catch (e) {\n            console.log(e)\n            setHistoryDone(true)\n        }\n    }\n\n    useEffect(() => {\n        var now = new Date();\n        var seconds = ((now.getTime()) * .001) >> 0;\n        setNowSeconds(seconds);\n\n        const getUser = async () => {\n            const results = await firestore().collection('users').where('username', '==', username).limit(1).get();\n            if (results.empty) {\n                console.log('empty');\n                setUserLoading(false);\n            } else {\n\n                const userID = await results.docs[0].id\n                setUserid(userID)\n                const userResults = await results.docs[0].data()\n                setUser(userResults)\n                setActives(userResults.actives)\n\n                if (userResults.actives) {\n                    if (userResults.actives['French'] || userResults.actives['Mandarin'] || userResults.actives['Spanish'] || userResults.actives['Languages (General)']) {\n                        setLang(true)\n                    }\n\n                    if (userResults.actives['Biology'] || userResults.actives['Chemistry'] || userResults.actives['Physics'] || userResults.actives['Sciences (General)']) {\n                        setSci(true)\n                    }\n\n                    if (userResults.actives['Psychology'] || userResults.actives['Sociology'] || userResults.actives['Social Sciences (General)']) {\n                        setSS(true)\n                    }\n                }\n\n\n                getPosts('timestamp.seconds', userID, lastPost, history);\n                setUserLoading(false);\n            }\n        }\n\n        getUser();\n\n        if (session.auth) {\n            const getSelf = async () => {\n                const self = await firestore().collection('users').doc(session?.auth?.uid).get()\n                if (self?.data()?.username == username) {\n                    setUserSelf(true);\n                }\n                setUserSelfDoc(self.data());\n                setUpvoted(self.data()?.upvoted)\n                setDownvoted(self.data()?.downvoted)\n            }\n\n\n            getSelf();\n        }\n\n    }, [session, firebase])\n\n    const subjectsView = () => {\n\n        const subjectObjects = Object.entries(actives).map(([keyName, keyIndex]) =>\n            // use keyName to get current key's name\n            // and a[keyName] to get its value\n            actives[keyName] ?\n                keyName == 'bulletin' ?\n                    <div key={keyName}></div>\n                    :\n                    <Button key={keyName} active variant='outline-dark' style={{ marginRight: 15, marginBottom: 15 }}>{keyName}</Button>\n                :\n                <div key={keyName}></div>\n\n        )\n\n        return (\n            <Row style={{ paddingTop: 15, paddingLeft: 15 }}>\n                {subjectObjects}\n            </Row>\n        )\n    }\n\n    const subjectEdit = (subject: string) => {\n        let activesEdit = actives;\n        if (actives[subject] == true) {\n            activesEdit[subject] = false;\n            setActives(activesEdit)\n        } else {\n            activesEdit[subject] = true;\n            setActives(activesEdit);\n        }\n    }\n\n\n    const editSubjectsView = () => {\n\n        return (\n            <Row style={{ paddingTop: 15, paddingLeft: 15 }}>\n                <Button active={actives['Arts']} variant='outline-dark' style={{ marginRight: 15, marginBottom: 15 }}\n                    onClick={() => {\n                        subjectEdit('Arts')\n                        setChanged(!changed);\n                    }}\n                >\n                    Arts\n                </Button>\n                <Button active={actives['Business']} variant='outline-dark' style={{ marginRight: 15, marginBottom: 15 }}\n                    onClick={() => {\n                        subjectEdit('Business')\n                        setChanged(!changed);\n                    }}\n                >\n                    Business</Button>\n                <Button variant='outline-dark' active={actives['Computer Science']} style={{ marginRight: 15, marginBottom: 15 }}\n                    onClick={() => {\n                        subjectEdit('Computer Science')\n                        setChanged(!changed);\n                    }}\n                >\n                    Computer Science\n                </Button>\n                <Button variant='outline-dark' active={actives['Economics']} style={{ marginRight: 15, marginBottom: 15 }}\n                    onClick={() => {\n                        subjectEdit('Economics')\n                        setChanged(!changed);\n                    }}\n                >\n                    Economics</Button>\n                <Button variant='outline-dark' active={actives['Finance']} style={{ marginRight: 15, marginBottom: 15 }}\n                    onClick={() => {\n                        subjectEdit('Finance')\n                        setChanged(!changed);\n                    }}\n                >\n                    Finance</Button>\n                <Button variant='outline-dark' active={actives['History']} style={{ marginRight: 15, marginBottom: 15 }}\n                    onClick={() => {\n                        subjectEdit('History')\n                        setChanged(!changed);\n                    }}\n                >\n                    History</Button>\n                <Button variant='outline-dark' active={actives['Humanities']} style={{ marginRight: 15, marginBottom: 15 }}\n                    onClick={() => {\n                        subjectEdit('Humanities')\n                        setChanged(!changed);\n                    }}\n                >\n                    Humanities</Button>\n                <DropdownButton id=\"lang\" title=\"Languages\" variant={lang ? 'dark' : 'outline-dark'} style={{ marginRight: 15, marginBottom: 15 }}>\n                    <Dropdown.Item active={actives['French']} onClick={() => {\n                        subjectEdit('French')\n                        setChanged(!changed);\n                        if (actives['French'] || actives['Mandarin'] || actives['Spanish'] || actives['Languages (General)']) {\n                            setLang(true)\n                        } else {\n                            setLang(false)\n                        }\n                    }}>\n                        French\n                    </Dropdown.Item>\n                    <Dropdown.Item active={actives['Mandarin']} onClick={() => {\n                        subjectEdit('Mandarin')\n                        setChanged(!changed);\n                        if (actives['French'] || actives['Mandarin'] || actives['Spanish'] || actives['Languages (General)']) {\n                            setLang(true)\n                        } else {\n                            setLang(false)\n                        }\n                    }}>\n                        Mandarin\n                    </Dropdown.Item >\n                    <Dropdown.Item active={actives['Spanish']} onClick={() => {\n                        subjectEdit('Spanish')\n                        setChanged(!changed);\n                        if (actives['French'] || actives['Mandarin'] || actives['Spanish'] || actives['Languages (General)']) {\n                            setLang(true)\n                        } else {\n                            setLang(false)\n                        }\n                    }}>\n                        Spanish\n                    </Dropdown.Item>\n                    <Dropdown.Item active={actives['Languages (General)']} onClick={() => {\n                        subjectEdit('Languages (General)')\n                        setChanged(!changed);\n                        if (actives['French'] || actives['Mandarin'] || actives['Spanish'] || actives['Languages (General)']) {\n                            setLang(true)\n                        } else {\n                            setLang(false)\n                        }\n                    }}>\n                        General\n                    </Dropdown.Item>\n                </DropdownButton>\n                <Button variant='outline-dark' style={{ marginRight: 15, marginBottom: 15 }} active={actives['Mathematics']} onClick={() => {\n                    subjectEdit('Mathematics')\n                    setChanged(!changed);\n                }}>\n                    Mathematics\n                </Button>\n                <DropdownButton id=\"sci\" title=\"Sciences\" variant={sci ? 'dark' : 'outline-dark'} style={{ marginRight: 15, marginBottom: 15 }}>\n                    <Dropdown.Item active={actives['Biology']} onClick={() => {\n                        subjectEdit('Biology')\n                        setChanged(!changed);\n                        if (actives['Biology'] || actives['Chemistry'] || actives['Physics'] || actives['Sciences (General)']) {\n                            setSci(true)\n                        } else {\n                            setSci(false)\n                        }\n                    }}>\n                        Biology\n                    </Dropdown.Item>\n                    <Dropdown.Item active={actives['Chemistry']} onClick={() => {\n                        subjectEdit('Chemistry')\n                        setChanged(!changed);\n                        if (actives['Biology'] || actives['Chemistry'] || actives['Physics'] || actives['Sciences (General)']) {\n                            setSci(true)\n                        } else {\n                            setSci(false)\n                        }\n                    }}>\n                        Chemistry\n                    </Dropdown.Item>\n                    <Dropdown.Item active={actives['Physics']} onClick={() => {\n                        subjectEdit('Physics')\n                        setChanged(!changed);\n                        if (actives['Biology'] || actives['Chemistry'] || actives['Physics'] || actives['Sciences (General)']) {\n                            setSci(true)\n                        } else {\n                            setSci(false)\n                        }\n                    }}>\n                        Physics\n                    </Dropdown.Item>\n                    <Dropdown.Item active={actives['Sciences (General)']} onClick={() => {\n                        subjectEdit('Sciences (General)')\n                        setChanged(!changed);\n                        if (actives['Biology'] || actives['Chemistry'] || actives['Physics'] || actives['Sciences (General)']) {\n                            setSci(true)\n                        } else {\n                            setSci(false)\n                        }\n                    }}>\n                        General\n                    </Dropdown.Item>\n                </DropdownButton>\n                <DropdownButton id=\"lang\" title=\"Social Sciences\" variant={ss ? 'dark' : 'outline-dark'} style={{ marginRight: 15, marginBottom: 15 }} >\n                    <Dropdown.Item active={actives['Psychology']} onClick={() => {\n                        subjectEdit('Psychology')\n                        setChanged(!changed);\n                        if (actives['Psychology'] || actives['Sociology'] || actives['Social Sciences (General)']) {\n                            setSS(true)\n                        } else {\n                            setSS(false)\n                        }\n                    }}>\n                        Psychology\n                    </Dropdown.Item>\n                    <Dropdown.Item active={actives['Sociology']} onClick={() => {\n                        subjectEdit('Sociology')\n                        setChanged(!changed);\n                        if (actives['Psychology'] || actives['Sociology'] || actives['Social Sciences (General)']) {\n                            setSS(true)\n                        } else {\n                            setSS(false)\n                        }\n                    }}>\n                        Sociology\n                    </Dropdown.Item>\n                    <Dropdown.Item active={actives['Social Sciences (General)']} onClick={() => {\n                        subjectEdit('Social Sciences (General)')\n                        setChanged(!changed);\n                        if (actives['Psychology'] || actives['Sociology'] || actives['Social Sciences (General)']) {\n                            setSS(true)\n                        } else {\n                            setSS(false)\n                        }\n                    }}>\n                        General\n                    </Dropdown.Item>\n                </DropdownButton>\n                <Button variant='outline-dark' style={{ marginRight: 15, marginBottom: 15 }} active={actives['General']} onClick={() => {\n                    subjectEdit('General')\n                    setChanged(!changed);\n                }}>General</Button>\n            </Row>\n        )\n    }\n\n    const handleVote = (upvoteTrue: boolean, object: any) => {\n        var collect = 'posts'\n        var upvoteList: string[] = []\n        var downvoteList: string[] = []\n        var upvoteIndex = -1\n        var downvoteIndex = -1\n\n        if (userSelfDoc.upvoted) {\n            upvoteList = upvoted\n            upvoteIndex = upvoteList.indexOf(object.id)\n        }\n        if (userSelfDoc.downvoted) {\n            downvoteList = downvoted\n            downvoteIndex = downvoteList.indexOf(object.id)\n        }\n\n\n        var upvotes: number;\n        if (object.data.upvotes) {\n            upvotes = object.data.upvotes\n        } else {\n            upvotes = 0\n        }\n\n        if (upvoteTrue) {\n\n            if (upvoteIndex == -1) {\n                if (downvoteIndex != -1) {\n                    downvoteList.splice(downvoteIndex, 1)\n                    firebase.db.collection('users').doc(session.auth?.uid).update({ downvoted: downvoteList })\n                    upvotes = upvotes + 1\n                }\n                upvoteList = [...upvoteList, object.id]\n                console.log('upvoteList after adding = ', upvoteList)\n                upvotes = upvotes + 1\n\n            } else {\n                upvoteList.splice(upvoteIndex, 1)\n                console.log('upvoteList after splice = ', upvoteList)\n                upvotes = upvotes - 1\n            }\n            firebase.db.collection('users').doc(session.auth?.uid).update({ upvoted: upvoteList })\n\n            firebase.db.collection(collect).doc(object.id).update({ upvotes: upvotes })\n            object.data.upvotes = upvotes;\n        } else {\n            if (downvoteIndex == -1) {\n                if (upvoteIndex != -1) {\n                    upvoteList.splice(upvoteIndex, 1)\n                    firebase.db.collection('users').doc(session.auth?.uid).update({ upvoted: upvoteList })\n                    upvotes = upvotes - 1\n                }\n                downvoteList = [...downvoteList, object.id]\n                console.log('downvoteList after adding = ', downvoteList)\n                upvotes = upvotes - 1\n            } else {\n                downvoteList.splice(downvoteIndex, 1)\n                console.log('downvoteList after splice = ', downvoteList)\n                upvotes = upvotes + 1\n            }\n\n\n            firebase.db.collection('users').doc(session.auth?.uid).update({ downvoted: downvoteList })\n            firebase.db.collection(collect).doc(object.id).update({ upvotes: upvotes })\n            object.data.upvotes = upvotes;\n        }\n\n\n        if (upvoteList) {\n            setUpvoted(upvoteList)\n        }\n        if (downvoteList) {\n            setDownvoted(downvoteList)\n        }\n    }\n\n    //a feed object\n    const feedCard = (object: { id: string; data: { title: string; desc: string; timestamp: { seconds: number, nanoseconds: number }; author: string; channels: Array<string>; authorName: string, upvotes: number }; numComments: number }) => {\n\n        var time = nowSeconds - object.data.timestamp.seconds;\n        var message = ''\n        if (time < 120) {\n            message = 'about a minute ago'\n        } else if (time < 3600) {\n            message = `${Math.floor(time / 60)} minutes ago`\n        } else if (time < 86400) {\n            let curTime = Math.floor(time / 3600)\n            if (curTime == 1) {\n                message = 'about an hour ago'\n            } else {\n                message = `${curTime} hours ago`\n            }\n        } else {\n            let curTime = Math.floor(time / 86400)\n            if (curTime == 1) {\n                message = 'yesterday'\n            } else {\n                message = `${curTime} days ago`\n            }\n        }\n\n        const channelView = () => {\n            const subjectObjects = object.data.channels?.map((d) => <p key={d}>{(object.data.channels.indexOf(d) == 0) ? `#${d}` : `, #${d}`}</p>)\n            return (\n                <div>\n                    <Row style={{ marginLeft: 1 }}>{subjectObjects}</Row>\n\n                </div>\n            )\n        }\n\n        return (\n\n            <Card style={{ marginBottom: 20 }}>\n                <Card.Body>\n                    <Row>\n                        <Col>\n                            <a href={`/post/${object.id}`}>\n                                <Card.Title>{object.data.title}</Card.Title>\n                            </a>\n                            <Card.Subtitle>{channelView()}</Card.Subtitle>\n                            <Card.Text className={styles.fontLess}> {object.data.desc}</Card.Text>\n                        </Col>\n                        <Col xs={3} sm={2} style={{ textAlign: 'center' }}>\n                            <Button disabled={!session.auth} size=\"sm\" active={upvoted.includes(object.id)} variant=\"outline-primary\" onClick={() => {\n                                handleVote(true, object)\n                                setChanged(!changed)\n                            }}>\n                                ▲\n                            </Button>\n                            <p>{object.data.upvotes ?\n                                object.data.upvotes\n                                :\n                                0\n                            }\n                            </p>\n                            <Button disabled={!session.auth} size=\"sm\" active={downvoted.includes(object.id)} variant=\"outline-danger\" onClick={() => {\n                                handleVote(false, object)\n                                setChanged(!changed)\n                            }}>▼</Button>\n                        </Col>\n                    </Row>\n                    <Card.Text className={styles.fontLess}>{object.numComments == 1 ?\n                        <a href={`/post/${object.id}`}>{object.numComments} comment</a>\n                        :\n                        <a href={`/post/${object.id}`}>{object.numComments} comments</a>\n                    }\n\n                        {' '} - posted by <a href={`/user/${object.data.authorName}`}>{`@${object.data.authorName}`}</a> - {message}</Card.Text>\n                </Card.Body>\n            </Card>\n\n            //\n        )\n    }\n\n    //list of feed objects\n    const feedView = (feedList: { id: string; data: { title: string; desc: string; timestamp: { seconds: number; nanoseconds: number }; author: string; channels: string[]; authorName: string, upvotes: number }; numComments: number }[]) => {\n        const feedItems = feedList.map((object: { id: string; data: { title: string; desc: string; timestamp: { seconds: number, nanoseconds: number }; author: string; channels: Array<string>; authorName: string, upvotes: number }; numComments: number }) => <div key={object.id} >{feedCard(object)}</div>\n        )\n        return feedItems\n    }\n\n\n    return (\n        <div>\n            <Navbar bg=\"light\" variant=\"light\">\n                <Navbar.Brand href=\"/\">\n                    {' '}\n                            ioyou\n                    </Navbar.Brand>\n                <Nav className=\"ml-auto\">\n                    {session.auth ?\n                        <div>\n                            <Button variant=\"light\" onClick={async () => {\n                                const user = await firebase.db.collection('users').doc(session?.auth?.uid).get()\n                                const username = user?.data()?.username\n                                window.location.href = `/user/${username}`\n                            }} style={{ marginRight: 10 }}>\n                                Profile\n                            </Button>\n                            <Button href=\"/new\" variant=\"outline-dark\" style={{ marginRight: 10 }}>Post</Button>\n                            <Button variant=\"light\" onClick={() => {\n                                setUserSelf(false);\n                                firebase.doSignOut()\n                            }}>\n                                Sign Out\n                            </Button>\n                        </div>\n\n                        :\n                        <div>\n                            <Button variant=\"outline-dark\" href=\"/login\" style={{ marginRight: 10 }}>\n                                log in\n                                </Button>\n\n                            <Button variant=\"light\" href=\"/signup\">\n                                sign up\n                                </Button>\n                        </div>\n                    }\n\n                </Nav>\n            </Navbar>\n            {userLoading ?\n                <Container className={styles.paddingTop}>\n                    <Spinner style={{ marginTop: 30, marginLeft: 30 }} animation=\"border\" />\n                </Container>\n                :\n                user ?\n                    <Container className={styles.paddingTop}>\n                        <Card>\n                            <Card.Body>\n                                <Row>\n                                    <Col>\n                                        <h2>@{username}</h2>\n                                        <h2>{user.name}</h2>\n                                    </Col>\n                                    <Col>\n                                        {user.credits == 1 ?\n                                            <h3>1 credit</h3>\n                                            :\n                                            <h3>{user.credits} credits</h3>\n                                        }\n\n                                    </Col>\n                                </Row>\n\n\n                                <hr></hr>\n\n                                <Row style={{ paddingLeft: 15 }}>\n                                    <h3 style={{ paddingRight: 15 }}>Channels</h3>\n                                    {userSelf ?\n                                        editSubjects ?\n                                            <Button variant=\"primary\" onClick={async () => {\n                                                setEditSubjects(false)\n                                                await firestore().collection('users').doc(session.auth?.uid).update({ actives: actives })\n\n                                            }}>Save</Button>\n                                            :\n                                            <Button variant=\"outline-dark\" onClick={() => { setEditSubjects(true) }}>Edit</Button>\n                                        :\n                                        <div></div>\n                                    }\n                                </Row>\n                                {\n                                    editSubjects ?\n                                        editSubjectsView()\n                                        :\n                                        actives ?\n                                            subjectsView()\n                                            :\n                                            <div></div>\n                                }\n                            </Card.Body>\n\n                        </Card>\n\n                        <h2 style={{ paddingTop: 50, paddingLeft: 22, paddingBottom: 15 }}>Post History</h2>\n\n                        {sortButton(sort)}\n\n                        {history\n                            ?\n                            <div>\n\n                                {feedView(history)}\n                                <Button variant='light' onClick={() => { getPosts(sort, userid, lastPost, history) }}>Load more</Button>\n                            </div>\n                            :\n                            historyDone ?\n                                <h3 style={{ paddingTop: 15 }}>No posts.</h3>\n                                :\n                                <div style={{ marginTop: 15 }}>\n                                    <Spinner style={{ marginTop: 30, marginLeft: 30 }} animation=\"border\" />\n                                </div>\n\n                        }\n\n                    </Container>\n                    :\n                    <Container className={styles.paddingTop}>\n                        <h1>User does not exist.</h1>\n                    </Container>\n            }\n\n\n\n        </div>\n    )\n}\n\nexport { ProfilePage }\n","import React, { useState, useEffect } from 'react';\nimport { Navbar, Nav, Button, ButtonGroup, Container, Row, Col, Form, OverlayTrigger, Spinner } from 'react-bootstrap'\nimport styles from './Signup.module.css'\nimport { auth, firestore } from 'firebase'\nimport { useFirebase, Firebase } from '../Firebase'\nimport { useSession } from '../Session'\nimport { AnyCnameRecord } from 'dns';\n\nconst SignupPage: React.FC = () => {\n    const firebase = useFirebase()\n    const session = useSession()\n\n    const [validated, setValidated] = useState<boolean>(false);\n    const [name, setName] = useState<string>('')\n    const [username, setUsername] = useState<string>('')\n    const [email, setEmail] = useState<string>('')\n    const [password, setPassword] = useState<string>('')\n    const [err, setErr] = useState<string>('')\n    const [usernameErr, setUsernameErr] = useState<string>('')\n    const [passCheck, setPassCheck] = useState<boolean>(false);\n\n    const [handling, setHandling] = useState<boolean>(false);\n\n\n    useEffect(() => {\n        if (session.auth && (handling == false)) {\n            window.location.href = \"/\"\n        }\n    }, [session, firebase])\n\n    const handleSubmit = async (event: any) => {\n        event.preventDefault();\n        setHandling(true)\n        console.log('name = ', name)\n        console.log('username = ', username)\n        console.log('email = ', email)\n        console.log('password = ', password)\n        console.log(event.currentTarget)\n        if (event.currentTarget.checkValidity() === false || passCheck === false || usernameErr.length > 0) {\n            console.log(validated);\n            event.preventDefault();\n            event.stopPropagation();\n        } else {\n            const results = await checkUsername(username);\n            if (results > 0) {\n                setUsernameErr('Already taken.')\n            } else {\n                try {\n                    console.log('this is triggered')\n                    const newUser = await auth().createUserWithEmailAndPassword(email, password).catch(e => { console.log(e) })\n                    if (newUser) {\n                        console.log('this is triggered 2')\n                        const uid = newUser?.user?.uid\n                        await firestore().collection('users').doc(uid).set({ name: name, username: username, actives: { 'Arts': false, 'Biology': false, 'Business': false, 'Computer Science': false, 'Economics': false, 'Finance': false, 'French': false, 'General': true, 'Humanities': false, 'Languages (General)': false, 'Mandarin': false, 'Psychology': false, 'Spanish': false, 'bulletin': true }, upvoted: [], downvoted: [], credits: 25 }).then(() => {\n                            window.location.href = `/user/${username}`\n                        })\n                    }\n                    setValidated(true);\n                } catch (e) {\n                    console.log(e);\n                    setErr(e.message);\n                }\n            }\n        }\n        setHandling(false);\n    }\n\n    const checkUsername = async (username: string) => {\n        const results = await firestore().collection('users').where('username', '==', username).limit(1).get();\n        return results.size;\n    }\n\n    const handleChangeName = (event: any) => {\n        setName(event.target.value)\n    }\n\n    const handleChangeUsername = (event: any) => {\n        setUsername(event.target.value)\n        if (event.target.value.length > 15) {\n            setUsernameErr('Too long. Usernames should be < 15 characters.')\n        } else {\n            setUsernameErr('')\n        }\n    }\n\n    const handleChangeEmail = (event: any) => {\n        setEmail(event.target.value)\n    }\n\n    const handleChangePassword = (event: any) => {\n        var check = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?!.*\\s).{8,30}$/;\n        setPassword(event.target.value);\n        if (event.target.value.match(check)) {\n            setPassCheck(true);\n            console.log('passCheck')\n        } else {\n            setPassCheck(false);\n            console.log('failCheck')\n        }\n    }\n\n    return (\n        <div>\n            <Navbar bg=\"light\" variant=\"light\">\n                <Navbar.Brand href=\"/\">\n                    {' '}\n                            ioyou\n                    </Navbar.Brand>\n                <Nav className='ml-auto'></Nav>\n                <Button variant=\"outline-dark\">\n                    log in\n                        </Button>\n            </Navbar>\n            <Container className={styles.paddingTop} style={{ paddingBottom: 10 }}>\n                <Form validated={validated} onSubmit={handleSubmit}>\n\n                    <Form.Group controlId=\"formBasicName\">\n                        <Form.Label>Name</Form.Label>\n                        <Form.Control required type=\"text\" placeholder=\"Jane Doe\" onChange={handleChangeName} value={name} />\n                        <Form.Control.Feedback type=\"invalid\">\n                            Please provide a name.\n                        </Form.Control.Feedback>\n                    </Form.Group>\n\n                    <Form.Group controlId=\"formBasicName\">\n                        <Form.Label>Username</Form.Label>\n                        <Form.Control required type=\"text\" placeholder=\"username\" onChange={handleChangeUsername} value={username} />\n                        <Form.Text className=\"text-danger\">\n                            {usernameErr}\n                        </Form.Text>\n                    </Form.Group>\n\n                    <Form.Group controlId=\"formBasicEmail\">\n                        <Form.Label>Email address</Form.Label>\n                        <Form.Control required type=\"email\" placeholder=\"jdoe@email.com\" onChange={handleChangeEmail} value={email} />\n                        <Form.Control.Feedback type=\"invalid\">\n                            Please provide an email.\n                        </Form.Control.Feedback>\n                    </Form.Group>\n\n                    <Form.Group controlId=\"formBasicPassword\">\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control required type=\"password\" placeholder=\"Password\" onChange={handleChangePassword} value={password} />\n                        {passCheck ?\n                            <Form.Text className=\"text-success\">\n                                Looks good!\n                            </Form.Text>\n                            :\n                            <Form.Text className=\"text-danger\">\n                                At least 8 characters and contain an uppercase letter, lowercase letter, number, and special character.\n                            </Form.Text>\n                        }\n                    </Form.Group>\n                    <Form.Group controlId=\"formBasicCheckbox\">\n                        <Form.Check required type=\"checkbox\" label=\"I agree to the terms and conditions.\" />\n                    </Form.Group>\n\n                    {handling ?\n                        <Button variant=\"primary\" disabled>\n                            <Spinner\n                                as=\"span\"\n                                animation=\"border\"\n                                size=\"sm\"\n                                role=\"status\"\n                                aria-hidden=\"true\"\n                            />\n                        </Button>\n                        :\n                        <Button variant=\"primary\" type=\"submit\">\n                            Submit\n                    </Button>\n                    }\n\n                </Form>\n                <p className=\"text-danger\">{err}</p>\n            </Container>\n        </div>\n    )\n}\n\nexport { SignupPage }","import React, { useState, useEffect } from 'react';\nimport { Navbar, Nav, Button, ButtonGroup, Container, Row, Col, Form, Spinner, FormControl } from 'react-bootstrap'\nimport { useFirebase, Firebase } from '../Firebase'\nimport { useSession } from '../Session'\nimport styles from './Login.module.css'\n\nconst LoginPage: React.FC = () => {\n    const firebase = useFirebase()\n    const session = useSession()\n\n    const [validated, setValidated] = useState<boolean>(false);\n    const [email, setEmail] = useState<string>('')\n    const [password, setPassword] = useState<string>('')\n    const [err, setErr] = useState<string>('')\n\n    const [handling, setHandling] = useState<boolean>(false)\n\n    useEffect(() => {\n        if (session.auth && validated) {\n            window.location.href = '/'\n        }\n    }, [session, firebase])\n\n    const handleSubmit = async (event: any) => {\n        event.preventDefault();\n        setHandling(true);\n        console.log('email = ', email)\n        console.log('password = ', password)\n        console.log(event.currentTarget)\n        if (event.currentTarget.checkValidity() === false) {\n            console.log(validated);\n            event.preventDefault();\n            event.stopPropagation();\n        } else {\n            try {\n                await firebase.doSignInWithEmailAndPassword(email, password)\n                setValidated(true);\n                window.location.href = \"/\"\n            } catch (e) {\n                console.log(e);\n                setErr(e.message);\n                setHandling(false);\n            }\n        }\n        console.log(validated);\n    }\n\n    const handleChangeEmail = (event: any) => {\n        setEmail(event.target.value)\n    }\n\n    const handleChangePassword = (event: any) => {\n        setPassword(event.target.value)\n    }\n\n    return (\n        <div>\n            <Navbar bg=\"light\" variant=\"light\">\n                <Navbar.Brand href=\"/\">\n                    {' '}\n                            ioyou\n                    </Navbar.Brand>\n                <Nav className='ml-auto'>\n                    <Button variant=\"outline-dark\" href=\"/signup\">\n                        sign up\n                    </Button>\n                </Nav>\n\n            </Navbar>\n            <Container className={styles.paddingTop}>\n                <Form validated={validated} onSubmit={handleSubmit}>\n                    <Form.Group controlId=\"formBasicEmail\">\n                        <Form.Label>Email address</Form.Label>\n                        <Form.Control required type=\"email\" placeholder=\"Enter email\" onChange={handleChangeEmail} value={email} />\n                    </Form.Group>\n                    <Form.Group controlId=\"formBasicPassword\">\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control required type=\"password\" placeholder=\"Password\" onChange={handleChangePassword} value={password} />\n                    </Form.Group>\n                    {handling ?\n                        <Button variant=\"primary\" disabled>\n                            <Spinner\n                                as=\"span\"\n                                animation=\"border\"\n                                size=\"sm\"\n                                role=\"status\"\n                                aria-hidden=\"true\"\n                            />\n                        </Button>\n                        :\n                        <Button variant=\"primary\" type=\"submit\" style={{ marginTop: 10 }}>\n                            Log in\n                        </Button>\n                    }\n\n                </Form>\n                <p className=\"text-danger\">{err}</p>\n            </Container>\n        </div>\n    )\n}\n\nexport { LoginPage }","import React, { useState, useEffect } from 'react'\nimport { useFirebase, Firebase } from '../Firebase'\nimport { functions, auth, firestore } from 'firebase'\nimport { Navbar, Nav, Button, ButtonGroup, Container, Row, Col, Spinner, Jumbotron, Image, ProgressBar, OverlayTrigger, Popover, Carousel, Card, Form } from 'react-bootstrap'\nimport { useSession } from '../Session'\nimport styles from './Post.module.css'\n\nconst PostPage: React.FC = () => {\n    const firebase = useFirebase()\n    const session = useSession()\n\n    const [channels, setChannels] = useState<Array<string>>([])\n    const [channelList, setChannelList] = useState<Array<string>>([])\n    const [allChannels, setAllChannels] = useState<Array<string>>(['Arts', 'Business', 'Computer Science', 'Economics', 'Finance', 'History', 'Humanities', 'French', 'Mandarin', 'Spanish', 'Languages (General)', 'Mathematics', 'Biology', 'Chemistry', 'Physics', 'Sciences (General)', 'Psychology', 'Sociology', 'Social Sciences (General)', 'General'])\n    const [title, setTitle] = useState<string>(\"\")\n    const [description, setDescription] = useState<string>(\"\")\n    const [bounty, setBounty] = useState<number>(0);\n    const [bountyCheck, setBountyCheck] = useState<boolean>(false);\n\n    const [err, setErr] = useState<string>(\"\")\n    const [bountyErr, setBountyErr] = useState<string>(\"\")\n\n    const [handling, setHandling] = useState<boolean>(false)\n\n    const [input, setInput] = useState<string>(\"\")\n\n    const [name, setName] = useState<string>(\"\")\n    const [userDoc, setUserDoc] = useState<any>(null);\n\n    const [selectBul, setSelectBul] = useState<boolean>(false)\n\n    useEffect(() => {\n        if (!session.auth) {\n            window.location.href = \"/\"\n        } else {\n            const getUser = async () => {\n                const user = await firestore().collection('users').doc(session.auth?.uid).get()\n                setName(user.data()?.username)\n                setUserDoc(user.data())\n            }\n            getUser()\n        }\n    }, [session, firebase])\n\n    const handleChannelChange = (event: any) => {\n        setInput(event.target.value)\n        if (event.target.value.length > 0) {\n            let strKeyword = event.target.value\n            let subjects = []\n            for (let i = 0; i < allChannels.length; i++) {\n                if (allChannels[i].replace(/[^a-zA-Z0-9]/g, \"\").substr(0, strKeyword.length).toLowerCase() == strKeyword.toLowerCase()) {\n                    subjects.push(allChannels[i])\n                }\n            }\n            setChannelList(subjects)\n        } else {\n            setChannelList([])\n        }\n    }\n\n    const subjectsView = () => {\n        const subjectObjects = channelList.map((d) => <Button variant=\"outline-dark\" key={d} style={{ marginRight: 15, marginBottom: 15 }} onClick={() => {\n            if (channels.length > 9) {\n                setErr('Maximum 10 channels')\n            } else {\n                setErr('')\n                setInput('')\n                setChannelList([])\n                if (channels.indexOf(d) != -1) {\n                    return\n                } else {\n                    setChannels([...channels, d])\n                }\n\n            }\n        }}>{d}</Button>)\n        return (\n            <div>\n                {subjectObjects}\n            </div>\n        )\n    }\n\n    const selectedView = () => {\n        const subjectObjects = channels.map((d) => <Button variant=\"dark\" key={d} style={{ marginRight: 15, marginBottom: 15 }} onClick={() => {\n            var array = [...channels]; // make a separate copy of the array\n            var index = array.indexOf(d)\n            if (index !== -1) {\n                array.splice(index, 1);\n                setChannels(array);\n            }\n            if (channels.length < 11) {\n                setErr('')\n            }\n        }}>{d}</Button>)\n        return (\n            <div>\n                {subjectObjects}\n            </div>\n        )\n    }\n\n    const postToView = () => {\n        const subjectObjects = channels.map((d) => <p key={d}>{(channels.indexOf(d) == 0) ? `to ${d}` : `, ${d}`}</p>)\n        return (\n            <Row style={{ marginTop: 15, marginLeft: 15 }}>\n                {subjectObjects}\n            </Row>\n        )\n    }\n\n    const handleTitleChange = (event: any) => {\n        setTitle(event.target.value)\n    }\n\n    const handleDescriptionChange = (event: any) => {\n        setDescription(event.target.value)\n    }\n\n    const handleBountyChange = (event: any) => {\n        const check = /^[0-9\\b]+$/;\n        setBounty(event.target.value);\n        if (event.target.value.match(check)) {\n            setBountyCheck(true);\n            console.log('passCheck')\n        } else {\n            setBountyCheck(false);\n            console.log('failCheck')\n        }\n    }\n\n    const handleSubmit = async (event: any) => {\n        setHandling(true);\n        event.preventDefault()\n        console.log(title)\n        console.log(description)\n        let newPost = null;\n        if (selectBul) {\n            newPost = { title: title, desc: description, timestamp: firestore.Timestamp.now(), author: session?.auth?.uid, channels: [], authorName: name, bulletin: selectBul, upvotes: 0, bounty: Number(bounty), awarded: true }\n        } else {\n            if (bounty == 0 || bountyCheck == false || bounty > userDoc.credits) {\n                event.preventDefault()\n                event.stopPropagation()\n                setHandling(false)\n                if (bounty > userDoc.credits) {\n                    setBountyErr(`You have ${userDoc.credits} credit(s) left.`)\n                }\n                return\n            } else {\n                if (channels.length == 0) {\n                    newPost = { title: title, desc: description, timestamp: firestore.Timestamp.now(), author: session?.auth?.uid, channels: ['General'], authorName: name, bulletin: false, upvotes: 0, bounty: Number(bounty), awarded: false }\n                } else {\n                    newPost = { title: title, desc: description, timestamp: firestore.Timestamp.now(), author: session?.auth?.uid, channels: channels, authorName: name, upvotes: 0, bulletin: false, bounty: Number(bounty), awarded: false }\n                }\n            }\n        }\n\n        await functions().httpsCallable('createPost')(newPost)\n        await firebase.db.collection('users').doc(session?.auth?.uid).update({ credits: userDoc.credits - bounty })\n        window.location.href = \"/\"\n    }\n\n\n    return (\n        <div>\n            <Navbar bg=\"light\" variant=\"light\">\n                <Navbar.Brand href=\"/\">\n                    {' '}\n                            ioyou\n                    </Navbar.Brand>\n                <Nav className=\"ml-auto\">\n                    <Button variant=\"light\" onClick={async () => {\n                        const user = await firebase.db.collection('users').doc(session?.auth?.uid).get()\n                        const username = user?.data()?.username\n                        window.location.href = `/user/${username}`\n                    }} style={{ marginRight: 10 }}>\n                        Profile\n                    </Button>\n                    <Button variant=\"light\" onClick={() => {\n                        window.location.reload()\n                        firebase.doSignOut()\n                    }}>\n                        Sign Out\n                    </Button>\n                </Nav>\n            </Navbar>\n            <Container className={styles.paddingTop}>\n                <div>\n                    <h1 style={{ paddingBottom: 15 }}>Create a new post</h1>\n                    <Form onSubmit={handleSubmit}>\n                        <ButtonGroup style={{ paddingBottom: 15 }}>\n                            <Button variant='outline-primary' active={!selectBul} onClick={() => { setSelectBul(false) }}>Academic</Button>\n                            <Button variant='outline-primary' active={selectBul} onClick={() => {\n                                setSelectBul(true)\n                            }}>Bulletin</Button>\n                        </ButtonGroup>\n                        {selectBul ?\n                            <div></div>\n                            :\n                            <Form.Group controlId=\"channels\">\n                                <Form.Label>Channels</Form.Label>\n                                <Row style={{ marginLeft: 10 }}>\n                                    {selectedView()}\n                                    {subjectsView()}\n                                </Row>\n                                <Form.Control type=\"text\" placeholder={channels.length > 0 ? \"Add additional subjects if necessary.\" : \"What subjects?\"} onChange={handleChannelChange} onBlur={() => {\n                                    if (channelList.length == 1) {\n                                        setChannels([...channels, ...channelList])\n                                        setInput('')\n                                        setChannelList([])\n                                    }\n                                }} value={input} />\n                                <Form.Text className=\"text-danger\">\n                                    {err}\n                                </Form.Text>\n                            </Form.Group>\n                        }\n\n                        <Form.Group controlId=\"title\">\n                            <Form.Label>Title</Form.Label>\n                            <Form.Control required type=\"text\" placeholder=\"What's up?\" onChange={handleTitleChange} />\n                        </Form.Group>\n\n                        <Form.Group controlId=\"description\">\n                            <Form.Label>Description</Form.Label>\n                            <Form.Control as=\"textarea\" rows={3} placeholder=\"Add more details if necessary.\" onChange={handleDescriptionChange} />\n                        </Form.Group>\n\n                        {selectBul ?\n                            <div></div>\n                            :\n                            <Form.Group controlId=\"bounty\">\n                                <Form.Label>Bounty</Form.Label>\n                                <Form.Control required as=\"input\" placeholder=\"Credits\" onChange={handleBountyChange} value={bounty} />\n                                {bounty > 0 && bountyCheck == true ?\n                                    bounty > userDoc.credits ?\n                                        <Form.Text className='text-danger'>\n                                            {bountyErr}\n                                        </Form.Text>\n                                        :\n                                        <Form.Text className=\"text-success\">\n                                            Looks good!\n                                </Form.Text>\n                                    :\n                                    <Form.Text className=\"text-danger\">\n                                        At least 1 credit must be posted.\n                                </Form.Text>\n                                }\n\n                            </Form.Group>\n                        }\n\n                        {handling ?\n                            <Button variant=\"primary\" disabled style={{ marginTop: 15 }}>\n                                <Spinner\n                                    as=\"span\"\n                                    animation=\"border\"\n                                    size=\"sm\"\n                                    role=\"status\"\n                                    aria-hidden=\"true\"\n                                />\n                            </Button>\n\n                            :\n                            <Button variant=\"primary\" type=\"submit\" style={{ marginTop: 15 }}>\n                                Post\n                        </Button>\n\n                        }\n\n\n                        {postToView()}\n\n                    </Form>\n                </div>\n            </Container>\n        </div>\n    )\n}\n\n\nexport { PostPage }\n","import React, { useState, useEffect } from 'react'\nimport { useParams } from 'react-router-dom';\nimport { useFirebase, Firebase } from '../Firebase'\nimport { functions, auth, firestore } from 'firebase'\nimport { Navbar, Nav, Button, ButtonGroup, Container, Row, Col, Spinner, Jumbotron, Image, ProgressBar, OverlayTrigger, Popover, Carousel, Card, Form, Modal, InputGroup, FormControl } from 'react-bootstrap'\nimport { useSession } from '../Session'\nimport styles from './Question.module.css'\n\nconst QuestionPage: React.FC = (props) => {\n    const firebase = useFirebase()\n    const session = useSession()\n\n    const { postid } = useParams()\n\n    const [self, setSelf] = useState<any>(null);\n    const [post, setPost] = useState<any>(null);\n    const [postSelf, setPostSelf] = useState<boolean>(false);\n\n    const [answer, setAnswer] = useState<string>(\"\")\n    const [comments, setComments] = useState<any[] | undefined>(undefined)\n    const [numComments, setNumComments] = useState<number>(0);\n\n    const [activeAnswer, setActiveAnswer] = useState<boolean>(false);\n\n    const [loadingDone, setLoadingDone] = useState<boolean>(false);\n    const [commentsDone, setCommentsDone] = useState<boolean>(false);\n\n    const [handling, setHandling] = useState<boolean>(false);\n\n    const [nowSeconds, setNowSeconds] = useState<number>(0);\n\n    const [timeMessage, setTimeMessage] = useState<string>('')\n\n    const [reply, setReply] = useState<string>('')\n    const [replyText, setReplyText] = useState<string>('')\n    const [replyHandling, setReplyHandling] = useState<boolean>(false);\n\n    const [changed, setChanged] = useState<boolean>(false);\n\n    const [upvoted, setUpvoted] = useState<string[]>([])\n    const [downvoted, setDownvoted] = useState<string[]>([])\n\n    const [awardModalShow, setAwardModalShow] = useState<boolean>(false)\n    const [award, setAward] = useState<number>(0)\n    const [awardCheck, setAwardCheck] = useState<boolean>(false)\n    const [awardHandling, setAwardHandling] = useState<boolean>(false)\n    const [err, setErr] = useState<string>('')\n\n    const [reportMessage, setReportMessage] = useState<string>('')\n    const [reportAuthorName, setReportAuthorName] = useState<string>('')\n    const [reportID, setReportID] = useState<string>('')\n    const [reportHandling, setReportHandling] = useState<boolean>(false)\n    const [reportDone, setReportDone] = useState<boolean>(false);\n\n    const [reportModalShow, setReportModalShow] = useState<boolean>(false)\n\n    const [commentAuthorName, setCommentAuthorName] = useState<string>('')\n    const [commentAuthor, setCommentAuthor] = useState<string>('')\n    const [commentID, setCommentID] = useState<string>('')\n\n    const getComments = async (id: string) => {\n        try {\n            var docList: any[] = []\n            const commentsList = await firebase.db.collection('comments').where('parent', '==', id).orderBy('upvotes', 'desc').limit(10).get()\n\n            console.log('commentsList = ', commentsList)\n            if (commentsList.empty || commentsList == null) {\n                console.log('No matching documents')\n                setCommentsDone(true)\n                return;\n            }\n\n            commentsList.forEach(doc => {\n                docList = [...docList, { id: doc.id, data: doc.data() }];\n            });\n\n            for (let i = 0; i < docList.length; i++) {\n                const doc = docList[i]\n                const replies = await getComments(doc.id)\n                docList[i] = { id: doc.id, data: doc.data, replies: replies }\n            }\n\n            return (docList)\n\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n    const handleAwardChange = (event: any) => {\n        const check = /^[0-9\\b]+$/;\n        setAward(event.target.value);\n        if (event.target.value.match(check)) {\n            setAwardCheck(true);\n            console.log('passCheck')\n        } else {\n            setAwardCheck(false);\n            console.log('failCheck')\n        }\n    }\n\n    const handleVote = (upvoteTrue: boolean, object: any) => {\n        var collect = 'comments'\n        if (object == post) {\n            const newObject = { data: post, id: postid }\n            object = newObject\n            collect = 'posts'\n        }\n        var upvoteList: string[] = []\n        var downvoteList: string[] = []\n        var upvoteIndex = -1\n        var downvoteIndex = -1\n        console.log('userDoc = ', self)\n        if (self.upvoted) {\n            upvoteList = upvoted\n            upvoteIndex = upvoteList.indexOf(object.id)\n        }\n        if (self.downvoted) {\n            downvoteList = downvoted\n            downvoteIndex = downvoteList.indexOf(object.id)\n        }\n\n        console.log('upvoteIndex = ', upvoteIndex)\n\n        console.log('upvoteList = ', upvoteList)\n\n        console.log('downvoteIndex = ', downvoteIndex)\n\n        console.log('downvoteList = ', downvoteList)\n\n        var upvotes: number;\n        if (object.data.upvotes) {\n            upvotes = object.data.upvotes\n        } else {\n            upvotes = 0\n        }\n\n        if (upvoteTrue) {\n\n            if (upvoteIndex == -1) {\n                if (downvoteIndex != -1) {\n                    downvoteList.splice(downvoteIndex, 1)\n                    firebase.db.collection('users').doc(session.auth?.uid).update({ downvoted: downvoteList })\n                    upvotes = upvotes + 1\n                }\n                upvoteList = [...upvoteList, object.id]\n                console.log('upvoteList after adding = ', upvoteList)\n                upvotes = upvotes + 1\n\n            } else {\n                upvoteList.splice(upvoteIndex, 1)\n                console.log('upvoteList after splice = ', upvoteList)\n                upvotes = upvotes - 1\n            }\n            firebase.db.collection('users').doc(session.auth?.uid).update({ upvoted: upvoteList })\n\n            firebase.db.collection(collect).doc(object.id).update({ upvotes: upvotes })\n            object.data.upvotes = upvotes;\n        } else {\n            if (downvoteIndex == -1) {\n                if (upvoteIndex != -1) {\n                    upvoteList.splice(upvoteIndex, 1)\n                    firebase.db.collection('users').doc(session.auth?.uid).update({ upvoted: upvoteList })\n                    upvotes = upvotes - 1\n                }\n                downvoteList = [...downvoteList, object.id]\n                console.log('downvoteList after adding = ', downvoteList)\n                upvotes = upvotes - 1\n            } else {\n                downvoteList.splice(downvoteIndex, 1)\n                console.log('downvoteList after splice = ', downvoteList)\n                upvotes = upvotes + 1\n            }\n\n\n            firebase.db.collection('users').doc(session.auth?.uid).update({ downvoted: downvoteList })\n            firebase.db.collection(collect).doc(object.id).update({ upvotes: upvotes })\n            object.data.upvotes = upvotes;\n        }\n\n\n        if (upvoteList) {\n            setUpvoted(upvoteList)\n        }\n        if (downvoteList) {\n            setDownvoted(downvoteList)\n        }\n    }\n\n    useEffect(() => {\n\n        const setAllComments = async () => {\n            const allComments = await firebase.db.collection('comments').where('thread', '==', postid).get()\n            setNumComments(allComments.size)\n        }\n\n        setAllComments()\n\n        var now = new Date();\n        var seconds = ((now.getTime()) * .001) >> 0;\n        setNowSeconds(seconds);\n\n        if (session.auth) {\n            const getSelf = async () => {\n                const selfDoc = await (await firestore().collection('users').doc(session.auth?.uid).get()).data()\n                setSelf(selfDoc)\n                if (selfDoc?.upvoted) {\n                    setUpvoted(selfDoc?.upvoted)\n                }\n                if (selfDoc?.downvoted) {\n                    setDownvoted(selfDoc?.downvoted)\n                }\n            }\n            getSelf();\n        }\n\n\n        const getPost = async () => {\n            try {\n                const postDoc = await (await firestore().collection('posts').doc(postid).get()).data()\n                console.log('postDoc = ', postDoc)\n\n                if (postDoc) {\n                    var time = seconds - postDoc?.timestamp.seconds;\n                    console.log('time = ', time)\n                    var message = ''\n                    if (time < 120) {\n                        message = 'about a minute ago'\n                    } else if (time < 3600) {\n                        message = `${Math.floor(time / 60)} minutes ago`\n                    } else if (time < 86400) {\n                        let curTime = Math.floor(time / 3600)\n                        if (curTime == 1) {\n                            message = 'about an hour ago'\n                        } else {\n                            message = `${curTime} hours ago`\n                        }\n                    } else {\n                        let curTime = Math.floor(time / 86400)\n                        if (curTime == 1) {\n                            message = 'yesterday'\n                        } else {\n                            message = `${curTime} days ago`\n                        }\n                    }\n\n                    setTimeMessage(message)\n                }\n\n                setPost(postDoc)\n                if (postDoc?.author == session?.auth?.uid) {\n                    setPostSelf(true)\n                }\n                const commentsTest = await getComments(postid);\n                console.log(commentsTest)\n                setComments(commentsTest)\n                setCommentsDone(true);\n                setLoadingDone(true)\n            } catch (e) {\n                console.log(e)\n                setLoadingDone(true)\n            }\n\n        }\n\n        getPost();\n    }, [session, firebase])\n\n\n    const handleAnswerChange = (event: any) => {\n        setAnswer(event.target.value)\n    }\n\n    const handleReplyChange = (event: any) => {\n        setReplyText(event.target.value)\n    }\n\n    const handleReplySubmit = async (event: any) => {\n        event.preventDefault()\n        setReplyHandling(true);\n        console.log(replyText)\n        const newReply = { comment: replyText, parent: reply, thread: postid, timestamp: firestore.Timestamp.now(), author: session?.auth?.uid, authorName: self.username, upvotes: 0, selected: 0 }\n        await functions().httpsCallable('createComment')(newReply).then(async () => {\n            setComments(await getComments(postid))\n            setNumComments(numComments + 1)\n            setCommentsDone(true);\n            setReplyHandling(false);\n            setReply('');\n        })\n    }\n\n    const handleSubmit = async (event: any) => {\n        event.preventDefault()\n        setHandling(true);\n        console.log(answer)\n        const newComment = { comment: answer, parent: postid, thread: postid, timestamp: firestore.Timestamp.now(), author: session?.auth?.uid, authorName: self.username, upvotes: 0, selected: 0 }\n        await functions().httpsCallable('createComment')(newComment).then(async () => {\n            setComments(await getComments(postid))\n            setNumComments(numComments + 1)\n            setCommentsDone(true);\n            setHandling(false);\n            setActiveAnswer(false);\n        })\n    }\n\n    const handleReportChange = (event: any) => {\n        setReportMessage(event.target.value);\n    }\n\n    /*\n    <Button variant=\"primary\" size=\"sm\" onClick={() => { functions().httpsCallable('chooseAwardCredits')({ author: object.data.author, bounty: post.bounty, post: postid, comment: object.id }) }}>Award</Button>\n    */\n    //a feed object\n    const feedCard = (object: { id: string; data: { comment: string; timestamp: { seconds: number, nanoseconds: number }; author: string; authorName: string; parent: string; thread: string; upvotes: number; selected: number }; replies: any[] }) => {\n        var time = nowSeconds - object.data.timestamp.seconds;\n        var message = ''\n        if (time < 120) {\n            message = 'about a minute ago'\n        } else if (time < 3600) {\n            message = `${Math.floor(time / 60)} minutes ago`\n        } else if (time < 86400) {\n            let curTime = Math.floor(time / 3600)\n            if (curTime == 1) {\n                message = 'about an hour ago'\n            } else {\n                message = `${curTime} hours ago`\n            }\n        } else {\n            let curTime = Math.floor(time / 86400)\n            if (curTime == 1) {\n                message = 'yesterday'\n            } else {\n                message = `${curTime} days ago`\n            }\n        }\n\n\n        return (\n\n            <div className={styles.borderLeft} style={{ marginBottom: 10, paddingLeft: 10, paddingTop: 10 }}>\n                \n                {object.data.selected > 0 ?\n                    <Row>\n                        <Col>\n                            <p style={{ fontSize: 20 }}>{`@${object.data.authorName}`}</p>\n                            <p className={styles.fontLess}> {object.data.comment}</p>\n                        </Col>\n                        <Col xs={3} md={2}>\n                            <Button variant=\"success\" size=\"sm\">{object.data.selected} cr.</Button>\n                        </Col>\n                    </Row>\n                    :\n                    postSelf ?\n                        <Row>\n                            <Col>\n                                <p style={{ fontSize: 20 }}>{`@${object.data.authorName}`}</p>\n                                <p className={styles.fontLess}> {object.data.comment}</p>\n                            </Col>\n                            <Col xs={3} md={2}>\n                                <Button variant=\"primary\" size=\"sm\" onClick={() => { \n                                    setCommentAuthorName(object.data.authorName)\n                                    setCommentAuthor(object.data.author)\n                                    setCommentID(object.id)\n                                    setAwardModalShow(true) }}>Award</Button>\n                            </Col>\n                        </Row>\n                        :\n                        <div>\n                            <p style={{ fontSize: 20 }}>{`@${object.data.authorName}`}</p>\n                            <p className={styles.fontLess}> {object.data.comment}</p>\n                        </div>\n\n                }\n\n\n\n                <p className={styles.fontLess}>\n                    <Button disabled={!session.auth} active={upvoted.includes(object.id)} size=\"sm\" variant=\"outline-dark\" onClick={() => {\n                        handleVote(true, object)\n                        setChanged(!changed)\n                    }}>\n                        ▲\n                    </Button>\n                    {' '}\n                    &nbsp;\n                    {object?.data?.upvotes ?\n                        object.data.upvotes\n                        :\n                        0\n                    }\n                    {' '}\n                    &nbsp;\n                    <Button disabled={!session.auth} active={downvoted.includes(object.id)} size=\"sm\" variant=\"outline-dark\" onClick={() => {\n                        handleVote(false, object)\n                        setChanged(!changed)\n                    }}>▼</Button>\n                    {' - '}\n                    <Button variant=\"light\" size=\"sm\" onClick={() => { setReply(object.id) }}>Reply</Button>\n                    {' '} - {message}\n                    {' - '}\n                    &nbsp;\n                    <Button disabled={!session.auth} size=\"sm\" variant='outline-danger' onClick={() => {\n                        setReportAuthorName(object.data.authorName)\n                        setReportID(object.id)\n                        setReportModalShow(true)\n                    }}>\n                        ⚐\n                    </Button>\n                </p>\n\n\n\n                {reply == object.id ?\n                    <Card>\n                        <Card.Body>\n                            <Form onSubmit={handleReplySubmit}>\n\n                                <Form.Group controlId=\"description\">\n                                    <Form.Control required as=\"textarea\" rows={3} placeholder={`Replying to @${object.data.authorName}...`} onChange={handleReplyChange} />\n                                </Form.Group>\n\n                                {replyHandling ?\n                                    <Button variant=\"primary\" style={{ marginTop: 15 }}>\n                                        <Spinner\n                                            as=\"span\"\n                                            animation=\"border\"\n                                            size=\"sm\"\n                                            role=\"status\"\n                                            aria-hidden=\"true\"\n                                        />\n                                    </Button>\n                                    :\n                                    <Button variant=\"primary\" type=\"submit\" style={{ marginTop: 15 }}>\n                                        Reply\n                                        </Button>\n                                }\n\n                            </Form>\n                        </Card.Body>\n                    </Card>\n                    :\n                    <div></div>\n                }\n                {object.replies && object.replies.length > 0 ?\n                    feedView(object.replies)\n                    :\n                    <div></div>}\n\n            </div>\n\n            //\n        )\n    }\n\n    //list of feed objects\n    const feedView = (feedList: { id: string; data: { comment: string; timestamp: { seconds: number; nanoseconds: number }; author: string; authorName: string; parent: string; thread: string; upvotes: number; selected: number }; replies: any[] }[]) => {\n        const feedItems = feedList.map((object: { id: string; data: { comment: string; timestamp: { seconds: number, nanoseconds: number }; author: string; authorName: string; parent: string; thread: string; upvotes: number; selected: number }; replies: any[] }) => <div key={object.id} style={{ paddingTop: 15 }}>{feedCard(object)}</div>\n        )\n        return feedItems\n    }\n\n    const channelView = (post: any) => {\n        const subjectObjects = post.channels?.map((d: string) => <p key={d}>{(post.channels.indexOf(d) == 0) ? `#${d}` : `, #${d}`}</p>)\n        return (\n            <div>\n                <Row style={{ marginLeft: 1 }}>{subjectObjects}</Row>\n\n            </div>\n        )\n    }\n\n    //console.log(\"Object.values(item) = \", Object.values(comments))\n\n    return (\n        <div>\n            <Navbar bg=\"light\" variant=\"light\">\n                <Navbar.Brand href=\"/\">\n                    {' '}\n                            ioyou\n                    </Navbar.Brand>\n                <Nav className=\"ml-auto\">\n                    {session.auth ?\n                        <div>\n                            <Button variant=\"light\" onClick={async () => {\n                                const user = await firebase.db.collection('users').doc(session?.auth?.uid).get()\n                                const username = user?.data()?.username\n                                window.location.href = `/user/${username}`\n                            }} style={{ marginRight: 10 }}>\n                                Profile\n                            </Button>\n                            <Button href=\"/new\" variant=\"outline-dark\" style={{ marginRight: 10 }}>Post</Button>\n                            <Button variant=\"outline-dark\" onClick={() => {\n                                window.location.reload()\n                                firebase.doSignOut()\n                            }}>\n                                Sign Out\n                            </Button>\n                        </div>\n\n                        :\n                        <div>\n                            <Button variant=\"outline-dark\" href=\"/login\" style={{ marginRight: 10 }}>\n                                log in\n                                </Button>\n\n                            <Button variant=\"light\" href=\"/signup\">\n                                sign up\n                                </Button>\n                        </div>}\n                </Nav>\n            </Navbar>\n                <Modal show={awardModalShow} onHide={() => { setAwardModalShow(false) }}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Award @{commentAuthorName}!</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        Awards cannot be taken back once submitted.\n                        \n                    </Modal.Body>\n                    <Modal.Footer>\n                        <InputGroup>\n                            <Form.Control placeholder=\"How many credits?\" onChange={handleAwardChange} value={award} />\n                            <Form.Text>{err}</Form.Text>\n                        </InputGroup>\n                        {awardHandling ? \n                            <Button disabled>\n                                <Spinner\n                                as=\"span\"\n                                animation=\"border\"\n                                size=\"sm\"\n                                role=\"status\"\n                                aria-hidden=\"true\"\n                            />\n                            </Button>\n                            :\n                            <Button onClick={() => {\n                                console.log('award = ', award)\n                                if (award > Number(post.bounty) + Number(self.credits)) {\n                                    setErr(`You have ${Number(post.bounty) + Number(self.credits)} credits to give.`)\n                                } else if (awardCheck == false || award < 1) {\n                                    setErr(`Input at least 1 credit.`)\n                                } else {\n                                    setAwardHandling(true)\n                                    functions().httpsCallable('chooseAwardCredits')({ author: commentAuthor, bounty: Number(post.bounty), post: postid, comment: commentID, award: Number(award) }).then(() => {\n                                        setAwardModalShow(false)\n                                        window.location.reload()\n                                    })\n                                }\n                            }}>Award</Button>\n                            }\n                        \n                    </Modal.Footer>\n                </Modal>\n\n            <Modal show={reportModalShow} onHide={() => {\n                setReportModalShow(false)\n                setReportDone(false)\n                setReportMessage('')\n            }}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Report @{reportAuthorName}</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    Let us know if this user is violating community agreements as outlined in our terms of service. Thanks!\n                    </Modal.Body>\n                <Modal.Footer>\n                    <InputGroup>\n                        <Form.Control as=\"textarea\" placeholder=\"What's the reason for reporting this user?\" rows={3} onChange={handleReportChange} value={reportMessage} />\n                    </InputGroup>\n                    {reportHandling ?\n                        <Button disabled variant='danger'>\n                            <Spinner\n                                as=\"span\"\n                                animation=\"border\"\n                                size=\"sm\"\n                                role=\"status\"\n                                aria-hidden=\"true\"\n                            />\n                        </Button>\n                        :\n                        reportDone ?\n                            <Button disabled variant='danger'>Thanks! You can close this window.</Button>\n\n                            :\n                            <Button variant='danger' onClick={async () => {\n                                setReportHandling(true);\n                                await functions().httpsCallable('createReport')({ post: reportID, reportMessage: reportMessage, submittedBy: session.auth?.uid, timestamp: firestore.Timestamp.now() }).then(() => {\n                                    setReportHandling(false);\n                                    setReportDone(true);\n                                })\n                            }}>Report\n                        </Button>\n                    }\n\n                </Modal.Footer>\n            </Modal>\n            {post ?\n                <Container className={styles.paddingTop}>\n                    <Card style={{ marginBottom: 30 }}>\n                        <Card.Body>\n                            <Row>\n                                <Col>\n                                    <Card.Title>{post?.title}</Card.Title>\n                                    <Card.Subtitle>{channelView(post)}</Card.Subtitle>\n                                    <Card.Text>{post?.desc}</Card.Text>\n                                </Col>\n                                <Col xs={3} sm={2} style={{ textAlign: 'center' }}>\n                                    <Button disabled={!session.auth} active={upvoted.includes(postid)} size=\"sm\" variant=\"outline-primary\" onClick={() => {\n                                        handleVote(true, post)\n                                        setChanged(!changed)\n                                    }}>\n                                        ▲\n                                    </Button>\n                                    <p>{post?.upvotes ?\n                                        post?.upvotes\n                                        :\n                                        0\n                                    }\n                                    </p>\n                                    <Button disabled={!session.auth} active={downvoted.includes(postid)} size=\"sm\" variant=\"outline-danger\" onClick={() => {\n                                        handleVote(false, post)\n                                        setChanged(!changed)\n                                    }}>▼</Button>\n\n                                    <Card bg=\"light\" style={{ marginTop: 15 }}>\n                                        {post?.bounty <= 0 ?\n                                            <Card.Title style={{ paddingTop: 10 }}>Claimed</Card.Title>\n                                            :\n                                            <Card.Title style={{ paddingTop: 10 }}>{post?.bounty} cr.</Card.Title>\n                                        }\n                                        \n                                    </Card>\n                                </Col>\n                            </Row>\n\n\n                            <Card.Text className={styles.fontLess} style={{ paddingTop: 10 }}>Posted by <a href={`/user/${post?.authorName}`}>{`@${post?.authorName}`}</a> {timeMessage}\n                            {' - '}\n                            &nbsp;\n                            <Button disabled={!session.auth} size=\"sm\" variant='outline-danger' onClick={() => {\n                                    setReportAuthorName(post.authorName)\n                                    setReportID(postid)\n                                    setReportModalShow(true)\n                                }}>\n                                    ⚐\n                            </Button>\n                            </Card.Text>\n                        </Card.Body>\n                    </Card>\n\n                    {session.auth ?\n                        activeAnswer ?\n\n                            <Form onSubmit={handleSubmit}>\n\n                                <Form.Group controlId=\"description\">\n                                    <Form.Label>Answer</Form.Label>\n                                    <Form.Control required as=\"textarea\" rows={3} placeholder=\"\" onChange={handleAnswerChange} />\n                                </Form.Group>\n\n                                {handling ?\n                                    <Button variant=\"primary\" style={{ marginTop: 15 }}>\n                                        <Spinner\n                                            as=\"span\"\n                                            animation=\"border\"\n                                            size=\"sm\"\n                                            role=\"status\"\n                                            aria-hidden=\"true\"\n                                        />\n                                    </Button>\n                                    :\n                                    <Button variant=\"primary\" type=\"submit\" style={{ marginTop: 15 }}>\n                                        Comment\n                                </Button>\n                                }\n\n                            </Form>\n                            :\n                            <Button variant=\"primary\" onClick={() => { setActiveAnswer(true) }}>Comment</Button>\n                        :\n                        <div></div>\n                    }\n\n\n                    <hr></hr>\n\n\n\n                    {comments ?\n                        <div>\n                            {numComments == 1 ?\n                                <h3 style={{ paddingTop: 30, paddingLeft: 22, paddingBottom: 15 }}>{numComments} comment</h3>\n                                :\n                                <h3 style={{ paddingTop: 30, paddingLeft: 22, paddingBottom: 15 }}>{numComments} comments</h3>\n                            }\n\n                            {feedView(comments)}\n                        </div>\n                        :\n                        commentsDone ?\n                            <div>\n                                <h3 style={{ paddingTop: 30, paddingLeft: 22, paddingBottom: 15 }}>{numComments} comments</h3>\n                            </div>\n                            :\n                            <Spinner style={{ marginTop: 30, marginLeft: 30 }} animation=\"border\" />\n                    }\n\n                </Container>\n                :\n                loadingDone ?\n                    <Container className={styles.paddingTop}>\n                        <h1>No post found.</h1>\n                    </Container>\n                    :\n                    <Container className={styles.paddingTop}>\n                        <Spinner style={{ marginTop: 30, marginLeft: 30 }} animation=\"border\" />\n                    </Container>\n            }\n\n        </div>\n    )\n}\n\n\nexport { QuestionPage }\n","import React, { useState, useEffect, useContext, useCallback } from 'react'\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n} from \"react-router-dom\"\n\nimport { ROUTES } from '../../constants'\nimport { HomePage } from '../Home'\nimport { ProfilePage } from '../Profile'\nimport { SignupPage } from '../Signup'\nimport { LoginPage } from '../Login'\nimport { PostPage } from '../Post'\nimport { useFirebase } from '../Firebase'\nimport { useSession, SessionContext } from '../Session/'\nimport { QuestionPage } from '../Question'\n\nconst MainApp: React.FC = () => {\n    const session = useSession()\n\n    if (session.initializing) {\n        return (<div></div>)\n    }\n    return (\n        <Router>\n            <Switch>\n                <Route exact path={ROUTES.ROOT}>\n                    <HomePage />\n                </Route>\n                <Route path={ROUTES.SIGNUP}>\n                    <SignupPage />\n                </Route>\n                <Route path={ROUTES.LOGIN}>\n                    <LoginPage />\n                </Route>\n                <Route path={ROUTES.POST}>\n                    <PostPage />\n                </Route>\n                <Route path={ROUTES.USERNAME}>\n                    <ProfilePage />\n                </Route>\n                <Route path={ROUTES.COMMENTS}>\n                    <QuestionPage />\n                </Route>\n            </Switch>\n        </Router>\n    )\n}\n\n\nconst AppWithAuth: React.FC = () => {\n    const firebase = useFirebase()\n    const [authObject, setAuthObject] = useState(() => {\n        const currentUser = firebase.auth.currentUser\n        if (!currentUser) {\n            return {\n                initializing: true,\n                auth: null,\n            }\n        } else {\n            return {\n                initializing: false,\n                auth: currentUser,\n            }\n        }\n\n    })\n\n    useEffect(() => {\n        function onChange(newUser: any) {\n            console.log('New user detected in auth onChange: ', newUser)\n            if (newUser === null) {\n                // Not authenticated\n                console.log('Not authenticated')\n                setAuthObject({ initializing: false, auth: null })\n            } else {\n                // New authentication occurred\n                setAuthObject(prevState => {\n                    if (prevState.auth === null) {\n                        // Went from unauthenticated to authenticated\n                        console.log('Authenticated')\n                        return { initializing: false, auth: newUser }\n                    } else {\n                        // Bug: Went from authenticated to another authentication\n                        console.log('Bug: reauthenticated')\n                        return prevState\n                    }\n                })\n            }\n        }\n\n        // listen for auth state changes\n        const unsubscribe = firebase.auth.onAuthStateChanged(onChange)\n        // unsubscribe to the listener when unmounting\n\n        return () => {\n            unsubscribe()\n            // We loaded a prof and were listening to it\n        }\n    }, [firebase.auth])\n\n    return (\n        <SessionContext.Provider value={authObject}>\n            <MainApp />\n        </SessionContext.Provider>\n    )\n}\n\nconst AppWithTwitter: React.FC = () => {\n    const firebase = useFirebase()\n\n    const getTwitterResult = useCallback(\n        async () => {\n            // If already logged in, no need to check\n            if (firebase.auth.currentUser) {\n                return\n            }\n            try {\n                const result = await firebase.auth.getRedirectResult()\n                console.log('Received Redirect result: ', result)\n                const { user, additionalUserInfo, credential } = result\n                if (!user) {\n                    console.log('No Twitter Redirect Result!')\n                    return\n                }\n                console.log('Current user after redirect: ', firebase.auth.currentUser)\n                // Register user for first time\n            }\n            catch (error) {\n                var errorCode = error.code;\n                var errorMessage = error.message;\n                // The email of the user's account used.\n                var email = error.email;\n                // The firebase.auth.AuthCredential type that was used.\n                var credential = error.credential;\n                console.log(error)\n            }\n\n        }, [firebase.auth])\n\n    useEffect(() => {\n        console.log('Current user in Twitter Checking Component: ', firebase.auth.currentUser)\n        getTwitterResult()\n    }, [getTwitterResult, firebase.auth])\n\n    return (\n        <AppWithAuth />\n    )\n}\n\n\n\nexport default AppWithTwitter ","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { FirebaseContext, Firebase } from './components/Firebase';\n\nconst config = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <FirebaseContext.Provider value={new Firebase()}>\n      <App />\n    </FirebaseContext.Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paddingTop\":\"Question_paddingTop__3SnTv\",\"centerItems\":\"Question_centerItems__2niqs\",\"fontLess\":\"Question_fontLess__1iLQC\",\"opaqueLess\":\"Question_opaqueLess__2kYLQ\",\"refresh\":\"Question_refresh__vU4gl\",\"borderLeft\":\"Question_borderLeft__2Cpjz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paddingTop\":\"Profile_paddingTop__3kNOc\",\"centerItems\":\"Profile_centerItems__3xB3O\",\"fontLess\":\"Profile_fontLess__1fK0e\",\"opaqueLess\":\"Profile_opaqueLess__DR6mh\",\"refresh\":\"Profile_refresh__Vh51B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paddingTop\":\"Home_paddingTop__lwuR_\",\"centerItems\":\"Home_centerItems__11x6e\",\"fontLess\":\"Home_fontLess__3aF4X\",\"opaqueLess\":\"Home_opaqueLess__1EMYG\",\"refresh\":\"Home_refresh__2Epj3\",\"aNoStyle\":\"Home_aNoStyle__3zzT_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paddingTop\":\"Signup_paddingTop__3HXmM\",\"centerItems\":\"Signup_centerItems__k192t\",\"fontLess\":\"Signup_fontLess__X2EvG\",\"opaqueLess\":\"Signup_opaqueLess__1t1Dw\",\"refresh\":\"Signup_refresh__26-ho\",\"errMessage\":\"Signup_errMessage__2DZ-o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paddingTop\":\"Login_paddingTop__217cV\",\"centerItems\":\"Login_centerItems__1sObU\",\"fontLess\":\"Login_fontLess__30mul\",\"opaqueLess\":\"Login_opaqueLess__3Bk5N\",\"refresh\":\"Login_refresh__3VAKS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paddingTop\":\"Post_paddingTop__MEynF\",\"centerItems\":\"Post_centerItems__2dmyQ\",\"fontLess\":\"Post_fontLess__hqyhX\",\"opaqueLess\":\"Post_opaqueLess__1M4G5\",\"refresh\":\"Post_refresh__1fCFf\"};"],"sourceRoot":""}