{"version":3,"sources":["constants/routes.tsx","components/Firebase/context.tsx","components/Firebase/firebase.tsx","components/Session/useSession.tsx","components/Login/LoginPage.tsx","components/Signup/SignupPage.tsx","components/Post/Post.tsx","constants/NavBar.tsx","constants/FeedView.tsx","components/Home/Home.tsx","components/Profile/ProfilePage.tsx","components/Question/Question.tsx","components/App/index.tsx","serviceWorker.ts","index.tsx","components/Question/Question.module.css","constants/FeedView.module.css","components/Profile/Profile.module.css","components/Home/Home.module.css"],"names":["ROUTES","FirebaseContext","createContext","useFirebase","useContext","config","apiKey","process","authDomain","databaseURL","projectId","messagingSenderId","SessionContext","auth","initializing","useSession","LoginPage","setLoginModalShow","firebase","useState","validated","setValidated","email","setEmail","password","setPassword","err","setErr","handling","setHandling","handleSubmit","event","a","preventDefault","console","log","currentTarget","checkValidity","stopPropagation","doSignInWithEmailAndPassword","message","Container","Form","onSubmit","Group","controlId","Label","Control","required","type","placeholder","onChange","target","value","Button","variant","disabled","Spinner","as","animation","size","role","aria-hidden","style","marginTop","className","SignupPage","session","name","setName","username","setUsername","usernameErr","setUsernameErr","passCheck","setPassCheck","useEffect","window","location","href","length","checkUsername","createUserWithEmailAndPassword","catch","e","newUser","uid","user","firestore","collection","doc","set","actives","upvoted","downvoted","credits","then","where","limit","get","results","paddingBottom","Feedback","Text","match","Check","label","PostPage","setPostModalShow","channels","setChannels","channelList","setChannelList","allChannels","title","setTitle","description","setDescription","bounty","setBounty","bountyCheck","setBountyCheck","bountyErr","setBountyErr","input","setInput","userDoc","setUserDoc","selectBul","setSelectBul","data","getUser","newPost","desc","timestamp","Timestamp","now","author","authorName","bulletin","upvotes","Number","awarded","functions","httpsCallable","db","update","ButtonGroup","active","onClick","Row","marginLeft","subjectObjects","map","d","key","marginRight","marginBottom","array","index","indexOf","splice","selectedView","subjectsView","strKeyword","subjects","i","replace","substr","toLowerCase","push","onBlur","rows","postToView","NavBar","loginModalShow","signupModalShow","setSignupModalShow","postModalShow","Navbar","bg","Brand","Modal","show","onHide","Header","Body","closeButton","Nav","doSignOut","reload","FeedView","feedList","nowSeconds","setUpvoted","setDownvoted","setChanged","changed","commentCard","reportMessage","setReportMessage","reportAuthorName","setReportAuthorName","reportID","setReportID","reportHandling","setReportHandling","reportDone","setReportDone","reportModalShow","setReportModalShow","commentsExpand","setCommentsExpand","commentsDone","setCommentsDone","comments","setComments","postTitle","setPostTitle","postDesc","setPostDesc","postid","setPostid","feedItems","object","id","paddingTop","feedCard","time","seconds","Math","floor","curTime","getComments","docList","orderBy","commentsList","empty","forEach","commentItems","channelView","handleVote","upvoteTrue","upvoteList","downvoteList","upvoteIndex","downvoteIndex","styles","borderLeft","paddingLeft","selected","Col","fontSize","fontLess","comment","xs","md","includes","Card","Title","Subtitle","textAlign","numComments","Footer","InputGroup","post","submittedBy","HomePage","allFeed","setAllFeed","homeFeed","setHomeFeed","academic","setAcademic","setBulletin","undefined","allLoadingDone","setAllLoadingDone","homeLoadingDone","setHomeLoadingDone","acadLoadingDone","setAcadLoadingDone","bulLoadingDone","setBulLoadingDone","setNowSeconds","lastAll","setLastAll","lastHome","setLastHome","lastAcad","setLastAcad","lastBul","setLastBul","allSort","setAllSort","homeSort","setHomeSort","acadSort","setAcadSort","bulSort","setBulSort","getChannels","userData","Object","keys","filter","getPosts","sort","category","categoryFeed","lastCategory","setLastCategory","setCategoryFeed","setLoading","query","posts","lastTime","startAfter","lastPost","loadPosts","Date","getTime","feedLoadingView","sortButton","feedSort","setLastFeed","setFeedLoading","setFeedSort","handleSort","sortType","DropdownButton","Dropdown","Item","Tabs","defaultActiveKey","Tab","eventKey","ProfilePage","useParams","setUser","userid","setUserid","userLoading","setUserLoading","userSelf","setUserSelf","userSelfDoc","setUserSelfDoc","editSubjects","setEditSubjects","lang","setLang","sci","setSci","ss","setSS","history","setHistory","historyDone","setHistoryDone","setLastPost","setSort","setActives","userID","last","lastDoc","docs","userResults","self","getSelf","subjectEdit","subject","activesEdit","paddingRight","entries","keyName","QuestionPage","props","setSelf","setPost","postSelf","setPostSelf","answer","setAnswer","setNumComments","activeAnswer","setActiveAnswer","loadingDone","setLoadingDone","timeMessage","setTimeMessage","reply","setReply","replyText","setReplyText","replyHandling","setReplyHandling","awardModalShow","setAwardModalShow","award","setAward","awardCheck","setAwardCheck","awardHandling","setAwardHandling","deleteModalShow","setDeleteModalShow","commentAuthorName","setCommentAuthorName","commentAuthor","setCommentAuthor","commentID","setCommentID","deleteCollection","setDeleteCollection","deleteID","setDeleteID","numReplies","setNumReplies","deleteSelected","setDeleteSelected","deleteHandling","setDeleteHandling","editCollection","setEditCollection","editID","setEditID","fullEdit","setFullEdit","editText","setEditText","readOnlyText","setReadOnlyText","editHandling","setEditHandling","editModalShow","setEditModalShow","editTitle","setEditTitle","editBounty","setEditBounty","editBountyCheck","setEditBountyCheck","titleErr","setTitleErr","replies","collect","allComments","setAllComments","selfDoc","postDoc","commentsTest","getPost","handleReplyChange","handleReplySubmit","newReply","parent","thread","edit","newComment","handleBountyChange","handleEditChange","feedView","readOnly","sm","MainApp","exact","path","AppWithAuth","currentUser","authObject","setAuthObject","unsubscribe","onAuthStateChanged","prevState","Provider","AppWithTwitter","getTwitterResult","useCallback","getRedirectResult","result","additionalUserInfo","credential","code","Boolean","hostname","ReactDOM","render","StrictMode","provider","doTwitterSignIn","signInWithRedirect","doCreateUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","app","apps","initializeApp","this","TwitterAuthProvider","App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","module","exports"],"mappings":"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","file":"static/js/main.5e957d65.chunk.js","sourcesContent":["const ROUTES = {\n    ROOT: \"/\",\n    USERNAME: \"/user/:username\",\n    COMMENTS: \"/post/:postid\"\n}\n\nexport { ROUTES }","import { createContext, useContext } from 'react'\nimport { Firebase } from './firebase'\n\n\nconst FirebaseContext = createContext<Firebase>({} as Firebase)\n\nconst useFirebase = () => {\n    const firebase = useContext(FirebaseContext)\n\n    return firebase\n}\nexport { FirebaseContext, useFirebase }\n","import app from 'firebase/app'\nimport 'firebase/auth'\nimport 'firebase/firestore'\nimport 'firebase/functions'\n\nconst config = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n}\n\nclass Firebase {\n    auth: firebase.auth.Auth\n    db: firebase.firestore.Firestore\n    functions: firebase.functions.Functions\n    provider: firebase.auth.AuthProvider\n\n    constructor() {\n        if (!app.apps.length) {\n            app.initializeApp(config)\n        }\n        this.auth = app.auth()\n        // For ease of access. Note that db normally refers to Firebase Realtime Database.\n        this.db = app.firestore()\n        this.functions = app.functions()\n        this.provider = new app.auth.TwitterAuthProvider()\n    }\n\n    // *** Auth API ***\n\n    // twitter signin handler\n    doTwitterSignIn = async () => {\n        this.auth.signInWithRedirect(this.provider)\n    }\n\n    // email and password signin handlers\n    doCreateUserWithEmailAndPassword = (email: string, password: string) =>\n        this.auth.createUserWithEmailAndPassword(email, password)\n\n    doSignInWithEmailAndPassword = (email: string, password: string) =>\n        this.auth.signInWithEmailAndPassword(email, password)\n\n    doSignOut = () => this.auth.signOut()\n\n}\n\nexport { Firebase }\n","import { createContext, useContext } from 'react'\nimport firebase from 'firebase'\n\ninterface SessionObject {\n    initializing: boolean,\n    auth: firebase.User | null,\n}\n\nconst SessionContext = createContext<SessionObject>({\n    auth: {} as firebase.User,\n    initializing: true\n})\n\nconst useSession = () => {\n    const session = useContext(SessionContext)\n    return session\n}\n\nexport { SessionContext, useSession }\n\n","import React, { useState, useEffect, PropsWithChildren } from 'react';\nimport { Button, Modal, Container, Form, Spinner } from 'react-bootstrap'\nimport { useFirebase } from '../Firebase'\nimport { useSession } from '../Session'\nimport styles from './Login.module.css'\n\nconst LoginPage: React.FC<any> = ({ setLoginModalShow }) => {\n    const firebase = useFirebase()\n    const session = useSession()\n\n    const [validated, setValidated] = useState<boolean>(false);\n    const [email, setEmail] = useState<string>('')\n    const [password, setPassword] = useState<string>('')\n    const [err, setErr] = useState<string>('')\n\n    const [handling, setHandling] = useState<boolean>(false)\n\n\n    const handleSubmit = async (event: any) => {\n        event.preventDefault();\n        setHandling(true);\n        console.log('email = ', email)\n        console.log('password = ', password)\n        console.log(event.currentTarget)\n        if (event.currentTarget.checkValidity() === false) {\n            console.log(validated);\n            event.preventDefault();\n            event.stopPropagation();\n        } else {\n            try {\n                await firebase.doSignInWithEmailAndPassword(email, password)\n                setValidated(true);\n                setHandling(false);\n                setLoginModalShow(false)\n            } catch (e) {\n                console.log(e);\n                setErr(e.message);\n                setHandling(false);\n            }\n        }\n        console.log(validated);\n    }\n\n    const handleChangeEmail = (event: any) => {\n        setEmail(event.target.value)\n    }\n\n    const handleChangePassword = (event: any) => {\n        setPassword(event.target.value)\n    }\n\n    return (\n        <Container>\n            <Form validated={validated} onSubmit={handleSubmit}>\n                <Form.Group controlId=\"formBasicEmail\">\n                    <Form.Label>Email address</Form.Label>\n                    <Form.Control required type=\"email\" placeholder=\"Enter email\" onChange={handleChangeEmail} value={email} />\n                </Form.Group>\n                <Form.Group controlId=\"formBasicPassword\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control required type=\"password\" placeholder=\"Password\" onChange={handleChangePassword} value={password} />\n                </Form.Group>\n                {handling ?\n                    <Button variant=\"primary\" disabled>\n                        <Spinner\n                            as=\"span\"\n                            animation=\"border\"\n                            size=\"sm\"\n                            role=\"status\"\n                            aria-hidden=\"true\"\n                        />\n                    </Button>\n                    :\n                    <Button variant=\"primary\" type=\"submit\" style={{ marginTop: 10 }}>\n                        Log in\n                        </Button>\n                }\n\n            </Form>\n            <p className=\"text-danger\">{err}</p>\n        </Container>\n\n    )\n}\n\nexport { LoginPage }","import React, { useState, useEffect } from 'react';\nimport { Navbar, Nav, Button, ButtonGroup, Container, Row, Col, Form, OverlayTrigger, Spinner } from 'react-bootstrap'\nimport styles from './Signup.module.css'\nimport { auth, firestore } from 'firebase'\nimport { useFirebase, Firebase } from '../Firebase'\nimport { useSession } from '../Session'\nimport { AnyCnameRecord } from 'dns';\n\nconst SignupPage: React.FC = () => {\n    const firebase = useFirebase()\n    const session = useSession()\n\n    const [validated, setValidated] = useState<boolean>(false);\n    const [name, setName] = useState<string>('')\n    const [username, setUsername] = useState<string>('')\n    const [email, setEmail] = useState<string>('')\n    const [password, setPassword] = useState<string>('')\n    const [err, setErr] = useState<string>('')\n    const [usernameErr, setUsernameErr] = useState<string>('')\n    const [passCheck, setPassCheck] = useState<boolean>(false);\n\n    const [handling, setHandling] = useState<boolean>(false);\n\n\n    useEffect(() => {\n        if (session.auth && (handling == false)) {\n            window.location.href = \"/\"\n        }\n    }, [session, firebase])\n\n    const handleSubmit = async (event: any) => {\n        event.preventDefault();\n        setHandling(true)\n        console.log('name = ', name)\n        console.log('username = ', username)\n        console.log('email = ', email)\n        console.log('password = ', password)\n        console.log(event.currentTarget)\n        if (event.currentTarget.checkValidity() === false || passCheck === false || usernameErr.length > 0) {\n            console.log(validated);\n            event.preventDefault();\n            event.stopPropagation();\n        } else {\n            const results = await checkUsername(username);\n            if (results > 0) {\n                setUsernameErr('Already taken.')\n            } else {\n                try {\n                    console.log('this is triggered')\n                    const newUser = await auth().createUserWithEmailAndPassword(email, password).catch(e => { console.log(e) })\n                    if (newUser) {\n                        console.log('this is triggered 2')\n                        const uid = newUser?.user?.uid\n                        await firestore().collection('users').doc(uid).set({ name: name, username: username, actives: { 'Arts': false, 'Biology': false, 'Business': false, 'Computer Science': false, 'Economics': false, 'Finance': false, 'French': false, 'General': true, 'Humanities': false, 'Languages (General)': false, 'Mandarin': false, 'Psychology': false, 'Spanish': false, 'bulletin': true }, upvoted: [], downvoted: [], credits: 25 }).then(() => {\n                            window.location.href = `/user/${username}`\n                        })\n                    }\n                    setValidated(true);\n                } catch (e) {\n                    console.log(e);\n                    setErr(e.message);\n                }\n            }\n        }\n        setHandling(false);\n    }\n\n    const checkUsername = async (username: string) => {\n        const results = await firestore().collection('users').where('username', '==', username).limit(1).get();\n        return results.size;\n    }\n\n    const handleChangeName = (event: any) => {\n        setName(event.target.value)\n    }\n\n    const handleChangeUsername = (event: any) => {\n        setUsername(event.target.value)\n        if (event.target.value.length > 15) {\n            setUsernameErr('Too long. Usernames should be < 15 characters.')\n        } else {\n            setUsernameErr('')\n        }\n    }\n\n    const handleChangeEmail = (event: any) => {\n        setEmail(event.target.value)\n    }\n\n    const handleChangePassword = (event: any) => {\n        var check = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?!.*\\s).{8,30}$/;\n        setPassword(event.target.value);\n        if (event.target.value.match(check)) {\n            setPassCheck(true);\n            console.log('passCheck')\n        } else {\n            setPassCheck(false);\n            console.log('failCheck')\n        }\n    }\n\n    return (\n        <Container style={{ paddingBottom: 10 }}>\n            <Form validated={validated} onSubmit={handleSubmit}>\n\n                <Form.Group controlId=\"formBasicName\">\n                    <Form.Label>Name</Form.Label>\n                    <Form.Control required type=\"text\" placeholder=\"Jane Doe\" onChange={handleChangeName} value={name} />\n                    <Form.Control.Feedback type=\"invalid\">\n                        Please provide a name.\n                        </Form.Control.Feedback>\n                </Form.Group>\n\n                <Form.Group controlId=\"formBasicName\">\n                    <Form.Label>Username</Form.Label>\n                    <Form.Control required type=\"text\" placeholder=\"username\" onChange={handleChangeUsername} value={username} />\n                    <Form.Text className=\"text-danger\">\n                        {usernameErr}\n                    </Form.Text>\n                </Form.Group>\n\n                <Form.Group controlId=\"formBasicEmail\">\n                    <Form.Label>Email address</Form.Label>\n                    <Form.Control required type=\"email\" placeholder=\"jdoe@email.com\" onChange={handleChangeEmail} value={email} />\n                    <Form.Control.Feedback type=\"invalid\">\n                        Please provide an email.\n                        </Form.Control.Feedback>\n                </Form.Group>\n\n                <Form.Group controlId=\"formBasicPassword\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control required type=\"password\" placeholder=\"Password\" onChange={handleChangePassword} value={password} />\n                    {passCheck ?\n                        <Form.Text className=\"text-success\">\n                            Looks good!\n                            </Form.Text>\n                        :\n                        <Form.Text className=\"text-danger\">\n                            At least 8 characters and contain an uppercase letter, lowercase letter, number, and special character.\n                            </Form.Text>\n                    }\n                </Form.Group>\n                <Form.Group controlId=\"formBasicCheckbox\">\n                    <Form.Check required type=\"checkbox\" label=\"I agree to the terms and conditions.\" />\n                </Form.Group>\n\n                {handling ?\n                    <Button variant=\"primary\" disabled>\n                        <Spinner\n                            as=\"span\"\n                            animation=\"border\"\n                            size=\"sm\"\n                            role=\"status\"\n                            aria-hidden=\"true\"\n                        />\n                    </Button>\n                    :\n                    <Button variant=\"primary\" type=\"submit\">\n                        Submit\n                    </Button>\n                }\n\n            </Form>\n            <p className=\"text-danger\">{err}</p>\n        </Container>\n    )\n}\n\nexport { SignupPage }","import React, { useState, useEffect } from 'react'\nimport { useFirebase, Firebase } from '../Firebase'\nimport { functions, auth, firestore } from 'firebase'\nimport { Navbar, Nav, Button, ButtonGroup, Container, Row, Col, Spinner, Jumbotron, Image, ProgressBar, OverlayTrigger, Popover, Carousel, Card, Form } from 'react-bootstrap'\nimport { useSession } from '../Session'\nimport styles from './Post.module.css'\nimport { NavBar } from '../../constants'\n\nconst PostPage: React.FC<any> = ({ setPostModalShow }) => {\n    const firebase = useFirebase()\n    const session = useSession()\n\n    const [channels, setChannels] = useState<Array<string>>([])\n    const [channelList, setChannelList] = useState<Array<string>>([])\n    const [allChannels, setAllChannels] = useState<Array<string>>(['Arts', 'Business', 'Computer Science', 'Economics', 'Finance', 'History', 'Humanities', 'French', 'Mandarin', 'Spanish', 'Languages (General)', 'Mathematics', 'Biology', 'Chemistry', 'Physics', 'Sciences (General)', 'Psychology', 'Sociology', 'Social Sciences (General)', 'General'])\n    const [title, setTitle] = useState<string>(\"\")\n    const [description, setDescription] = useState<string>(\"\")\n    const [bounty, setBounty] = useState<number>(0);\n    const [bountyCheck, setBountyCheck] = useState<boolean>(false);\n\n    const [err, setErr] = useState<string>(\"\")\n    const [bountyErr, setBountyErr] = useState<string>(\"\")\n\n    const [handling, setHandling] = useState<boolean>(false)\n\n    const [input, setInput] = useState<string>(\"\")\n\n    const [name, setName] = useState<string>(\"\")\n    const [userDoc, setUserDoc] = useState<any>(null);\n\n    const [selectBul, setSelectBul] = useState<boolean>(false)\n\n    useEffect(() => {\n        if (!session.auth) {\n            window.location.href = \"/\"\n        } else {\n            const getUser = async () => {\n                const user = await firestore().collection('users').doc(session.auth?.uid).get()\n                setName(user.data()?.username)\n                setUserDoc(user.data())\n            }\n            getUser()\n        }\n    }, [session, firebase])\n\n    const handleChannelChange = (event: any) => {\n        setInput(event.target.value)\n        if (event.target.value.length > 0) {\n            let strKeyword = event.target.value\n            let subjects = []\n            for (let i = 0; i < allChannels.length; i++) {\n                if (allChannels[i].replace(/[^a-zA-Z0-9]/g, \"\").substr(0, strKeyword.length).toLowerCase() == strKeyword.toLowerCase()) {\n                    subjects.push(allChannels[i])\n                }\n            }\n            setChannelList(subjects)\n        } else {\n            setChannelList([])\n        }\n    }\n\n    const subjectsView = () => {\n        const subjectObjects = channelList.map((d) => <Button variant=\"outline-dark\" key={d} style={{ marginRight: 15, marginBottom: 15 }} onClick={() => {\n            if (channels.length > 9) {\n                setErr('Maximum 10 channels')\n            } else {\n                setErr('')\n                setInput('')\n                setChannelList([])\n                if (channels.indexOf(d) != -1) {\n                    return\n                } else {\n                    setChannels([...channels, d])\n                }\n\n            }\n        }}>{d}</Button>)\n        return (\n            <div>\n                {subjectObjects}\n            </div>\n        )\n    }\n\n    const selectedView = () => {\n        const subjectObjects = channels.map((d) => <Button variant=\"dark\" key={d} style={{ marginRight: 15, marginBottom: 15 }} onClick={() => {\n            var array = [...channels]; // make a separate copy of the array\n            var index = array.indexOf(d)\n            if (index !== -1) {\n                array.splice(index, 1);\n                setChannels(array);\n            }\n            if (channels.length < 11) {\n                setErr('')\n            }\n        }}>{d}</Button>)\n        return (\n            <div>\n                {subjectObjects}\n            </div>\n        )\n    }\n\n    const postToView = () => {\n        const subjectObjects = channels.map((d) => <p key={d}>{(channels.indexOf(d) == 0) ? `to ${d}` : `, ${d}`}</p>)\n        return (\n            <Row style={{ marginTop: 15, marginLeft: 15 }}>\n                {subjectObjects}\n            </Row>\n        )\n    }\n\n    const handleTitleChange = (event: any) => {\n        setTitle(event.target.value)\n    }\n\n    const handleDescriptionChange = (event: any) => {\n        setDescription(event.target.value)\n    }\n\n    const handleBountyChange = (event: any) => {\n        const check = /^[0-9\\b]+$/;\n        setBounty(event.target.value);\n        if (event.target.value.match(check)) {\n            setBountyCheck(true);\n            console.log('passCheck')\n        } else {\n            setBountyCheck(false);\n            console.log('failCheck')\n        }\n    }\n\n    const handleSubmit = async (event: any) => {\n        setHandling(true);\n        event.preventDefault()\n        console.log(title)\n        console.log(description)\n        let newPost = null;\n        if (selectBul) {\n            newPost = { title: title, desc: description, timestamp: firestore.Timestamp.now(), author: session?.auth?.uid, channels: [], authorName: name, bulletin: selectBul, upvotes: 0, bounty: Number(bounty), awarded: true }\n        } else {\n            if (bounty == 0 || bountyCheck == false || bounty > userDoc.credits) {\n                event.preventDefault()\n                event.stopPropagation()\n                setHandling(false)\n                if (bounty > userDoc.credits) {\n                    setBountyErr(`You have ${userDoc.credits} credit(s) left.`)\n                }\n                return\n            } else {\n                if (channels.length == 0) {\n                    newPost = { title: title, desc: description, timestamp: firestore.Timestamp.now(), author: session?.auth?.uid, channels: ['General'], authorName: name, bulletin: false, upvotes: 0, bounty: Number(bounty), awarded: false }\n                } else {\n                    newPost = { title: title, desc: description, timestamp: firestore.Timestamp.now(), author: session?.auth?.uid, channels: channels, authorName: name, upvotes: 0, bulletin: false, bounty: Number(bounty), awarded: false }\n                }\n            }\n        }\n\n        await functions().httpsCallable('createPost')(newPost).then(async () => {\n            await firebase.db.collection('users').doc(session?.auth?.uid).update({ credits: userDoc.credits - bounty })\n            window.location.href = `/user/${userDoc.username}`\n        })\n    }\n\n\n    return (\n        <Container>\n            <Form onSubmit={handleSubmit}>\n                <ButtonGroup style={{ paddingBottom: 15 }}>\n                    <Button variant='outline-primary' active={!selectBul} onClick={() => { setSelectBul(false) }}>Academic</Button>\n                    <Button variant='outline-primary' active={selectBul} onClick={() => {\n                        setSelectBul(true)\n                    }}>Bulletin</Button>\n                </ButtonGroup>\n                {selectBul ?\n                    <div></div>\n                    :\n                    <Form.Group controlId=\"channels\">\n                        <Form.Label>Channels</Form.Label>\n                        <Row style={{ marginLeft: 10 }}>\n                            {selectedView()}\n                            {subjectsView()}\n                        </Row>\n                        <Form.Control type=\"text\" placeholder={channels.length > 0 ? \"Add additional subjects if necessary.\" : \"What subjects?\"} onChange={handleChannelChange} onBlur={() => {\n                            if (channelList.length == 1) {\n                                setChannels([...channels, ...channelList])\n                                setInput('')\n                                setChannelList([])\n                            }\n                        }} value={input} />\n                        <Form.Text className=\"text-danger\">\n                            {err}\n                        </Form.Text>\n                    </Form.Group>\n                }\n\n                <Form.Group controlId=\"title\">\n                    <Form.Label>Title</Form.Label>\n                    <Form.Control required type=\"text\" placeholder=\"What's up?\" onChange={handleTitleChange} />\n                </Form.Group>\n\n                <Form.Group controlId=\"description\">\n                    <Form.Label>Description</Form.Label>\n                    <Form.Control as=\"textarea\" rows={3} placeholder=\"Add more details if necessary.\" onChange={handleDescriptionChange} />\n                </Form.Group>\n\n                {selectBul ?\n                    <div></div>\n                    :\n                    <Form.Group controlId=\"bounty\">\n                        <Form.Label>Bounty</Form.Label>\n                        <Form.Control required as=\"input\" placeholder=\"Credits\" onChange={handleBountyChange} value={bounty} />\n                        {bounty > 0 && bountyCheck == true ?\n                            bounty > userDoc.credits ?\n                                <Form.Text className='text-danger'>\n                                    {bountyErr}\n                                </Form.Text>\n                                :\n                                <Form.Text className=\"text-success\">\n                                    Looks good!\n                                </Form.Text>\n                            :\n                            <Form.Text className=\"text-danger\">\n                                At least 1 credit must be posted.\n                                </Form.Text>\n                        }\n\n                    </Form.Group>\n                }\n\n                {handling ?\n                    <Button variant=\"primary\" disabled style={{ marginTop: 15 }}>\n                        <Spinner\n                            as=\"span\"\n                            animation=\"border\"\n                            size=\"sm\"\n                            role=\"status\"\n                            aria-hidden=\"true\"\n                        />\n                    </Button>\n\n                    :\n                    <Button variant=\"primary\" type=\"submit\" style={{ marginTop: 15 }}>\n                        Post\n                        </Button>\n\n                }\n\n\n                {postToView()}\n\n            </Form>\n        </Container>\n    )\n}\n\n\nexport { PostPage }\n","import React, { useState, useEffect } from 'react';\nimport { Navbar, Nav, Button, Modal, Container, Row, Col, Form, Spinner, FormControl } from 'react-bootstrap'\nimport { useFirebase, Firebase } from '../components/Firebase'\nimport { useSession } from '../components/Session'\nimport { LoginPage } from '../components/Login'\nimport { SignupPage } from '../components/Signup'\nimport { PostPage } from '../components/Post'\n\nconst NavBar: React.FC = () => {\n    const firebase = useFirebase()\n    const session = useSession()\n\n    const [loginModalShow, setLoginModalShow] = useState<boolean>(false);\n    const [signupModalShow, setSignupModalShow] = useState<boolean>(false);\n    const [postModalShow, setPostModalShow] = useState<boolean>(false);\n\n\n\n    return (\n        <Navbar bg=\"light\" variant=\"light\">\n            <Navbar.Brand href=\"/\">\n                {' '}\n                            ioyou\n                    </Navbar.Brand>\n            <Modal show={loginModalShow} onHide={() => {\n                setLoginModalShow(false)\n            }}>\n                <Modal.Header>Log in</Modal.Header>\n                <Modal.Body>\n                    <LoginPage setLoginModalShow={setLoginModalShow} />\n                </Modal.Body>\n            </Modal>\n            <Modal show={signupModalShow} onHide={() => {\n                setSignupModalShow(false)\n            }}>\n                <Modal.Header closeButton>Sign up</Modal.Header>\n                <Modal.Body>\n                    <SignupPage />\n                </Modal.Body>\n            </Modal>\n            <Modal show={postModalShow} onHide={() => {\n                setPostModalShow(false)\n            }}>\n                <Modal.Header closeButton>New Post</Modal.Header>\n                <Modal.Body>\n                    <PostPage setPostModalShow={setPostModalShow} />\n                </Modal.Body>\n            </Modal>\n            <Nav className=\"ml-auto\">\n                {session.auth ?\n                    <div>\n                        <Button variant=\"light\" onClick={async () => {\n                            const user = await firebase.db.collection('users').doc(session?.auth?.uid).get()\n                            const username = user?.data()?.username\n                            window.location.href = `/user/${username}`\n                        }} style={{ marginRight: 10 }}>\n                            Profile\n                            </Button>\n                        <Button onClick={() => {\n                            setPostModalShow(true)\n                        }} variant=\"outline-dark\" style={{ marginRight: 10 }}>Post</Button>\n                        <Button variant=\"light\" onClick={() => {\n                            firebase.doSignOut()\n                            window.location.reload()\n                        }}>\n                            Sign Out\n                            </Button>\n                    </div>\n\n                    :\n                    <div>\n                        <Button variant=\"outline-dark\" onClick={() => { setLoginModalShow(true) }} style={{ marginRight: 10 }}>\n                            log in\n                                </Button>\n\n                        <Button variant=\"light\" onClick={() => { setSignupModalShow(true) }}>\n                            sign up\n                                </Button>\n                    </div>\n                }\n\n            </Nav>\n        </Navbar>\n    )\n}\n\nexport { NavBar }","import React, { useState, useEffect } from 'react';\nimport { Button, Card, Row, Col, Form, Spinner, Modal, InputGroup } from 'react-bootstrap'\nimport { useFirebase, Firebase } from '../components/Firebase'\nimport { useSession } from '../components/Session'\nimport { functions, auth, firestore } from 'firebase'\nimport styles from './FeedView.module.css'\n\nconst FeedView: React.FC<any> = ({ feedList, nowSeconds, userDoc, upvoted, downvoted, setUpvoted, setDownvoted, setChanged, changed, commentCard }) => {\n    const firebase = useFirebase()\n    const session = useSession()\n\n    const [reportMessage, setReportMessage] = useState<string>('')\n    const [reportAuthorName, setReportAuthorName] = useState<string>('')\n    const [reportID, setReportID] = useState<string>('')\n    const [reportHandling, setReportHandling] = useState<boolean>(false)\n    const [reportDone, setReportDone] = useState<boolean>(false);\n\n    const [reportModalShow, setReportModalShow] = useState<boolean>(false)\n\n    const [commentsExpand, setCommentsExpand] = useState<boolean>(false)\n    const [commentsDone, setCommentsDone] = useState<boolean>(false)\n\n    const [comments, setComments] = useState<any>(<div></div>)\n    const [postTitle, setPostTitle] = useState<string>('')\n    const [postDesc, setPostDesc] = useState<string>('')\n    const [postid, setPostid] = useState<string>('')\n\n    const handleReportChange = (event: any) => {\n        setReportMessage(event.target.value);\n    }\n\n    //a feed object\n    const feedCard = (object: any, commentCard: any) => {\n\n        var time = nowSeconds - object.data.timestamp.seconds;\n        var message = ''\n        if (time < 120) {\n            message = 'about a minute ago'\n        } else if (time < 3600) {\n            message = `${Math.floor(time / 60)} minutes ago`\n        } else if (time < 86400) {\n            let curTime = Math.floor(time / 3600)\n            if (curTime == 1) {\n                message = 'about an hour ago'\n            } else {\n                message = `${curTime} hours ago`\n            }\n        } else {\n            let curTime = Math.floor(time / 86400)\n            if (curTime == 1) {\n                message = 'yesterday'\n            } else {\n                message = `${curTime} days ago`\n            }\n        }\n\n        const getComments = async (id: string) => {\n            try {\n                var docList: any[] = []\n                const commentsList = await firebase.db.collection('comments').where('parent', '==', id).orderBy('upvotes', 'desc').limit(3).get()\n\n                console.log('commentsList = ', commentsList)\n                if (commentsList.empty || commentsList == null) {\n                    console.log('No matching documents')\n                    setCommentsDone(true)\n                    return;\n                }\n\n                commentsList.forEach(doc => {\n                    docList = [...docList, { id: doc.id, data: doc.data() }];\n                });\n\n                const commentItems = docList.map((object: any) => <div key={object.id} style={{ paddingTop: 15 }}>{feedCard(object, true)}</div>\n                )\n\n                setComments(commentItems)\n                setCommentsDone(true)\n                return (docList)\n\n            } catch (e) {\n                console.log(e)\n            }\n        }\n\n        const channelView = () => {\n            const subjectObjects = object.data.channels?.map((d: string) => <p key={d}>{(object.data.channels.indexOf(d) == 0) ? `#${d}` : `, #${d}`}</p>)\n            return (\n                <div>\n                    <Row style={{ marginLeft: 1 }}>{subjectObjects}</Row>\n\n                </div>\n            )\n        }\n\n        const handleVote = (upvoteTrue: boolean) => {\n            var upvoteList: string[] = []\n            var downvoteList: string[] = []\n            var upvoteIndex = -1\n            var downvoteIndex = -1\n            console.log('userDoc = ', userDoc)\n            if (userDoc.upvoted) {\n                upvoteList = upvoted\n                upvoteIndex = upvoteList.indexOf(object.id)\n            }\n            if (userDoc.downvoted) {\n                downvoteList = downvoted\n                downvoteIndex = downvoteList.indexOf(object.id)\n            }\n\n            console.log('upvoteIndex = ', upvoteIndex)\n\n            console.log('upvoteList = ', upvoteList)\n\n            console.log('downvoteIndex = ', downvoteIndex)\n\n            console.log('downvoteList = ', downvoteList)\n\n            var upvotes: number;\n            if (object.data.upvotes) {\n                upvotes = object.data.upvotes\n            } else {\n                upvotes = 0\n            }\n\n            if (upvoteTrue) {\n\n                if (upvoteIndex == -1) {\n                    if (downvoteIndex != -1) {\n                        downvoteList.splice(downvoteIndex, 1)\n                        firebase.db.collection('users').doc(session.auth?.uid).update({ downvoted: downvoteList })\n                        upvotes = upvotes + 1\n                    }\n                    upvoteList = [...upvoteList, object.id]\n                    console.log('upvoteList after adding = ', upvoteList)\n                    upvotes = upvotes + 1\n\n                } else {\n                    upvoteList.splice(upvoteIndex, 1)\n                    console.log('upvoteList after splice = ', upvoteList)\n                    upvotes = upvotes - 1\n                }\n                firebase.db.collection('users').doc(session.auth?.uid).update({ upvoted: upvoteList })\n\n                firebase.db.collection('posts').doc(object.id).update({ upvotes: upvotes })\n                object.data.upvotes = upvotes;\n            } else {\n                if (downvoteIndex == -1) {\n                    if (upvoteIndex != -1) {\n                        upvoteList.splice(upvoteIndex, 1)\n                        firebase.db.collection('users').doc(session.auth?.uid).update({ upvoted: upvoteList })\n                        upvotes = upvotes - 1\n                    }\n                    downvoteList = [...downvoteList, object.id]\n                    console.log('downvoteList after adding = ', downvoteList)\n                    upvotes = upvotes - 1\n                } else {\n                    downvoteList.splice(downvoteIndex, 1)\n                    console.log('downvoteList after splice = ', downvoteList)\n                    upvotes = upvotes + 1\n                }\n\n\n                firebase.db.collection('users').doc(session.auth?.uid).update({ downvoted: downvoteList })\n                firebase.db.collection('posts').doc(object.id).update({ upvotes: upvotes })\n                object.data.upvotes = upvotes;\n            }\n\n\n            if (upvoteList) {\n                setUpvoted(upvoteList)\n            }\n            if (downvoteList) {\n                setDownvoted(downvoteList)\n            }\n        }\n\n        if (commentCard) {\n            return (\n\n                <div className={styles.borderLeft} style={{ marginBottom: 10, paddingLeft: 10, paddingTop: 10 }}>\n\n                    {object.data.selected > 0 ?\n                        <Row>\n                            <Col>\n                                <p style={{ fontSize: 20 }}>{`@${object.data.authorName}`}</p>\n                                <p className={styles.fontLess}> {object.data.comment}</p>\n                            </Col>\n                            <Col xs={3} md={2}>\n                                <Button variant=\"success\" size=\"sm\">{object.data.selected} cr.</Button>\n                            </Col>\n                        </Row>\n                        :\n                        <div>\n                            <p style={{ fontSize: 20 }}>{`@${object.data.authorName}`}</p>\n                            <p className={styles.fontLess}> {object.data.comment}</p>\n                        </div>\n\n                    }\n\n\n\n                    <p className={styles.fontLess}>\n                        <Button disabled={!session.auth} active={upvoted.includes(object.id)} size=\"sm\" variant=\"outline-dark\" onClick={() => {\n                            handleVote(true)\n                            setChanged(!changed)\n                        }}>\n                            ▲\n                    </Button>\n                        {' '}\n                    &nbsp;\n                    {object?.data?.upvotes ?\n                            object.data.upvotes\n                            :\n                            0\n                        }\n                        {' '}\n                    &nbsp;\n                    <Button disabled={!session.auth} active={downvoted.includes(object.id)} size=\"sm\" variant=\"outline-dark\" onClick={() => {\n                            handleVote(false)\n                            setChanged(!changed)\n                        }}>▼</Button>\n                        {' - '}\n                    &nbsp;\n                    <Button disabled={!session.auth} size=\"sm\" variant='outline-danger' onClick={() => {\n                            setReportAuthorName(object.data.authorName)\n                            setReportID(object.id)\n                            setReportModalShow(true)\n                        }}>\n                            ⚐\n                    </Button>\n                    </p>\n\n                </div>\n\n                //\n            )\n        } else {\n            return (\n\n                <Card style={{ marginBottom: 20 }}>\n                    <Card.Body>\n\n                        {object.data.bulletin ?\n                            <div>\n                                <a href={`/post/${object.id}`}>\n                                    <Card.Title>{object.data.title}</Card.Title>\n                                </a>\n                                <Card.Subtitle>{channelView()}</Card.Subtitle>\n                            </div>\n                            :\n                            <Row>\n                                <Col>\n                                    <a href={`/post/${object.id}`}>\n                                        <Card.Title>{object.data.title}</Card.Title>\n                                    </a>\n                                    <Card.Subtitle>{channelView()}</Card.Subtitle>\n\n                                </Col>\n                                <Col xs={3} md={2} style={{ textAlign: 'center' }}>\n                                    <Card>\n                                        {object.data.bounty <= 0 ?\n                                            <Card.Title style={{ paddingTop: 10 }}>Claimed</Card.Title>\n                                            :\n                                            <Card.Title style={{ paddingTop: 10 }}>{object.data.bounty} cr.</Card.Title>\n                                        }\n\n                                    </Card>\n\n                                </Col>\n                            </Row>\n                        }\n\n                        <Card.Text> {object.data.desc}</Card.Text>\n\n\n                        <Card.Text style={{ paddingTop: 10 }}>\n                            <Button disabled={!session.auth} size=\"sm\" active={upvoted.includes(object.id)} variant=\"outline-primary\" onClick={() => {\n                                handleVote(true)\n                                setChanged(!changed)\n                            }}>\n                                ▲\n                            </Button>\n                            {' '}\n                        &nbsp;\n                        {object.data.upvotes ?\n                                object.data.upvotes\n                                :\n                                0\n                            }\n                            {' '}\n                        &nbsp;\n                        <Button disabled={!session.auth} size=\"sm\" active={downvoted.includes(object.id)} variant=\"outline-danger\" onClick={() => {\n                                handleVote(false)\n                                setChanged(!changed)\n                            }}>▼</Button>\n                            {' '}\n                        &nbsp;\n                        {object.numComments == 1 ?\n                                <Button size=\"sm\" variant=\"light\" onClick={() => {\n                                    getComments(object.id)\n                                    setPostTitle(object.data.title)\n                                    setPostDesc(object.data.desc)\n                                    setPostid(object.id)\n                                    setCommentsExpand(true)\n                                }}>{object.numComments} comment</Button>\n                                :\n                                <Button size=\"sm\" variant=\"light\" onClick={() => {\n                                    getComments(object.id)\n                                    setPostTitle(object.data.title)\n                                    setPostDesc(object.data.desc)\n                                    setPostid(object.id)\n                                    setCommentsExpand(true)\n                                }}>{object.numComments} comments</Button>\n                            }\n\n                            {' '} - posted by <a href={`/user/${object.data.authorName}`}>{`@${object.data.authorName}`}</a> - {message}\n                            {' - '}\n                        &nbsp;\n                        <Button disabled={!session.auth} size=\"sm\" variant='outline-danger' onClick={() => {\n                                setReportAuthorName(object.data.authorName)\n                                setReportID(object.id)\n                                setReportModalShow(true)\n                            }}>\n                                ⚐\n                        </Button>\n                        </Card.Text>\n\n                    </Card.Body>\n                </Card >\n                //\n            )\n        }\n\n\n    }\n\n    const feedItems = feedList.map((object: any) => <div key={object.id} style={{ paddingTop: 15 }}>{feedCard(object, commentCard)}</div>\n    )\n\n    return (\n        <div>\n            <Modal show={reportModalShow} onHide={() => {\n                setReportModalShow(false)\n                setReportDone(false)\n                setReportMessage('')\n            }}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Report @{reportAuthorName}</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    Let us know if this user is violating community agreements as outlined in our terms of service. Thanks!\n                    </Modal.Body>\n                <Modal.Footer>\n                    <InputGroup>\n                        <Form.Control as=\"textarea\" placeholder=\"What's the reason for reporting this user?\" rows={3} onChange={handleReportChange} value={reportMessage} />\n                    </InputGroup>\n                    {reportHandling ?\n                        <Button disabled variant='danger'>\n                            <Spinner\n                                as=\"span\"\n                                animation=\"border\"\n                                size=\"sm\"\n                                role=\"status\"\n                                aria-hidden=\"true\"\n                            />\n                        </Button>\n                        :\n                        reportDone ?\n                            <Button disabled variant='danger'>Thanks! You can close this window.</Button>\n\n                            :\n                            <Button variant='danger' onClick={async () => {\n                                setReportHandling(true);\n                                await functions().httpsCallable('createReport')({ post: reportID, reportMessage: reportMessage, submittedBy: session.auth?.uid, timestamp: firestore.Timestamp.now() }).then(() => {\n                                    setReportHandling(false);\n                                    setReportDone(true);\n                                })\n                            }}>Report\n                        </Button>\n                    }\n\n                </Modal.Footer>\n            </Modal>\n            <Modal show={commentsExpand} onHide={() => {\n                setCommentsExpand(false)\n                setComments([])\n                setCommentsDone(false)\n\n            }}>\n                <Modal.Header closeButton>\n                    <Modal.Title>{postTitle}</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <p>{postDesc}</p>\n                    {commentsDone ?\n                        comments\n                        :\n                        <Spinner animation=\"border\"></Spinner>}\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button href={`/post/${postid}`}>See more</Button>\n                </Modal.Footer>\n            </Modal>\n            {feedItems}\n        </div>\n\n    )\n}\n\nexport { FeedView }","import React, { useState, useCallback, useEffect } from 'react'\nimport { useFirebase, Firebase } from '../Firebase'\nimport { functions, auth, firestore } from 'firebase'\nimport { Navbar, Nav, Button, ButtonGroup, Container, Row, Col, Spinner, Jumbotron, Image, ProgressBar, OverlayTrigger, Popover, Carousel, Card, Tabs, Tab, DropdownButton, Dropdown, Modal, InputGroup, Form } from 'react-bootstrap'\nimport { useSession } from '../Session'\nimport styles from './Home.module.css'\nimport { NavBar } from '../../constants'\nimport { FeedView } from '../../constants'\n\nconst HomePage: React.FC = () => {\n    const firebase = useFirebase()\n    const session = useSession()\n\n    const [allFeed, setAllFeed] = useState<any[]>([])\n    const [homeFeed, setHomeFeed] = useState<any[]>([])\n    const [academic, setAcademic] = useState<any[]>([])\n    const [bulletin, setBulletin] = useState<any[]>([])\n    const [channels, setChannels] = useState<string[] | undefined>(undefined)\n\n    const [userDoc, setUserDoc] = useState<any>(null)\n\n    const [allLoadingDone, setAllLoadingDone] = useState<boolean>(false);\n    const [homeLoadingDone, setHomeLoadingDone] = useState<boolean>(false);\n    const [acadLoadingDone, setAcadLoadingDone] = useState<boolean>(false);\n    const [bulLoadingDone, setBulLoadingDone] = useState<boolean>(false);\n\n    const [nowSeconds, setNowSeconds] = useState<number>(0);\n\n    const [lastAll, setLastAll] = useState<any>(null);\n    const [lastHome, setLastHome] = useState<any>(null);\n    const [lastAcad, setLastAcad] = useState<any>(null);\n    const [lastBul, setLastBul] = useState<any>(null);\n\n    const [allSort, setAllSort] = useState<string>('timestamp.seconds')\n    const [homeSort, setHomeSort] = useState<string>('timestamp.seconds')\n    const [acadSort, setAcadSort] = useState<string>('timestamp.seconds')\n    const [bulSort, setBulSort] = useState<string>('timestamp.seconds')\n\n    const [upvoted, setUpvoted] = useState<string[]>([])\n    const [downvoted, setDownvoted] = useState<string[]>([])\n    const [changed, setChanged] = useState<boolean>(false);\n\n    const getChannels = async () => {\n        try {\n            const user = await firebase.db.collection('users').doc(session.auth?.uid).get()\n            console.log('user = ', user.data())\n            const userData = user.data()\n            setUserDoc(userData)\n            if (userData?.upvoted) {\n                setUpvoted(userData?.upvoted)\n            }\n            if (userData?.downvoted) {\n                setDownvoted(userData?.downvoted)\n            }\n            const channelList = user.data()?.actives\n            console.log('channelList = ', channelList)\n            console.log('object.keys() = ', Object.keys(channelList).filter((key) => {\n                return channelList[key] == true;\n            }))\n            return Object.keys(channelList).filter((key) => {\n                return channelList[key] == true;\n            })\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n    const getPosts = async (sort: string, category: string, categoryFeed: any[], lastCategory: any, setLastCategory: any, setCategoryFeed: any, setLoading: any, subjects: string[] | undefined, update: boolean) => {\n        console.log('lastCategory START = ', lastCategory)\n        try {\n            var docList: any[] = []\n            var query = firebase.db.collection('posts').orderBy(sort, 'desc')\n\n            let posts = null;\n            console.log('subjects =', subjects)\n            if (category === 'all') {\n                console.log('lastCategory')\n                if (lastCategory) {\n                    console.log('lastCategory = ', lastCategory)\n                    const lastTime = sort == 'timestamp.seconds' ? lastCategory.data.timestamp.seconds : lastCategory.data.upvotes\n\n                    console.log('lastTime = ', lastTime)\n                    posts = await query.startAfter(lastTime).limit(10).get()\n                } else {\n                    posts = await query.limit(10).get()\n                    console.log('tHIS POSTS = ', posts.size)\n                }\n\n\n            } else {\n                if (category == 'academic') {\n                    if (subjects == undefined || subjects?.length == 0) {\n                        posts = null\n                        setLoading(true)\n                        return\n                    }\n                    query = query.where('bulletin', '==', false)\n                }\n                if (lastCategory) {\n                    console.log('lastCategory 2 = ', lastCategory)\n                    const lastTime = sort == 'timestamp.seconds' ? lastCategory.data.timestamp.seconds : lastCategory.data.upvotes\n                    console.log('lastTime = ', lastTime)\n                    if (category == 'bulletin') {\n                        posts = await query.startAfter(lastTime).where('bulletin', '==', true).limit(10).get()\n                    } else {\n                        posts = await query.startAfter(lastTime).where('channels', 'array-contains-any', subjects).limit(10).get()\n                    }\n                } else {\n                    if (category == 'bulletin') {\n                        posts = await query.where('bulletin', '==', true).limit(10).get()\n                    } else {\n                        posts = await query.where('channels', 'array-contains-any', subjects).limit(10).get()\n                    }\n                }\n            }\n\n\n            if (posts?.empty || posts == null) {\n                console.log('No matching documents')\n                setLoading(true)\n                return;\n            }\n\n\n            posts?.forEach(doc => {\n                docList = [...docList, { id: doc.id, data: doc.data() }];\n            });\n\n            const lastPost = docList[docList.length - 1]\n            setLastCategory(lastPost)\n\n            for (let i = 0; i < docList.length; i++) {\n                const doc = docList[i]\n                const numComments = await firebase.db.collection('comments').where('thread', '==', doc.id).get()\n                docList[i] = { id: doc.id, data: doc.data, numComments: numComments.size }\n            }\n\n            if (update) {\n                setCategoryFeed([...docList])\n\n            } else {\n                setCategoryFeed([...categoryFeed, ...docList])\n            }\n\n            setLoading(true)\n\n\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n    const loadPosts = async () => {\n        let subjects: string[] | undefined = []\n        if (session.auth) {\n            subjects = await getChannels()\n        }\n\n        setChannels(subjects)\n\n        getPosts('timestamp.seconds', 'all', allFeed, lastAll, setLastAll, setAllFeed, setAllLoadingDone, subjects, false)\n        getPosts('timestamp.seconds', 'home', homeFeed, lastHome, setLastHome, setHomeFeed, setHomeLoadingDone, subjects, false)\n        getPosts('timestamp.seconds', 'academic', academic, lastAcad, setLastAcad, setAcademic, setAcadLoadingDone, subjects, false)\n        getPosts('timestamp.seconds', 'bulletin', bulletin, lastBul, setLastBul, setBulletin, setBulLoadingDone, subjects, false)\n\n        console.log('subjects = ', subjects)\n    }\n\n    useEffect(() => {\n        var now = new Date();\n        var seconds = ((now.getTime()) * .001) >> 0;\n        setNowSeconds(seconds);\n\n        console.log(seconds)\n        //retrieves the most recent 10 posts\n\n\n\n        loadPosts()\n    }, [session, firebase])\n\n\n    //loading animation while retrieving feed\n    const feedLoadingView = () => {\n        return (\n            <div style={{ paddingTop: 15 }}>\n\n                <Card style={{ marginBottom: 20 }}>\n                    <Card.Body>\n                        <Card.Title></Card.Title>\n                        <Card.Text></Card.Text>\n                        <Spinner animation=\"border\" />\n                    </Card.Body>\n                </Card>\n                <Card style={{ marginBottom: 20 }}>\n                    <Card.Body>\n                        <Card.Title></Card.Title>\n                        <Card.Text></Card.Text>\n                        <Spinner animation=\"border\" />\n                    </Card.Body>\n                </Card>\n                <Card style={{ marginBottom: 20 }}>\n                    <Card.Body>\n                        <Card.Title></Card.Title>\n                        <Card.Text></Card.Text>\n                        <Spinner animation=\"border\" />\n                    </Card.Body>\n                </Card>\n                <Card style={{ marginBottom: 20 }}>\n                    <Card.Body>\n                        <Card.Title></Card.Title>\n                        <Card.Text></Card.Text>\n                        <Spinner animation=\"border\" />\n                    </Card.Body>\n                </Card>\n                <Card style={{ marginBottom: 20 }}>\n                    <Card.Body>\n                        <Card.Title></Card.Title>\n                        <Card.Text></Card.Text>\n                        <Spinner animation=\"border\" />\n                    </Card.Body>\n                </Card>\n            </div>\n\n        )\n    }\n\n\n    const sortButton = (category: string, categoryFeed: any[], feedSort: string, setLastFeed: any, setCategoryFeed: any, setFeedLoading: any, setFeedSort: any) => {\n        const handleSort = async (sortType: string) => {\n            setLastFeed(null)\n            setCategoryFeed([])\n            setFeedLoading(false)\n            await getPosts(sortType, category, categoryFeed, null, setLastFeed, setCategoryFeed, setFeedLoading, channels, true)\n            await setFeedSort(sortType)\n        }\n\n        return (\n            <DropdownButton id=\"sort\" title={feedSort == 'bounty' ? 'Highest Bounty' : 'timestamp.seconds' ? 'Most Recent' : 'Top Rated'} variant='light' style={{ paddingTop: 15 }}>\n                <Dropdown.Item active={feedSort == 'timestamp.seconds'}\n                    onClick={async () => {\n                        if (feedSort == 'timestamp.seconds') {\n                            return\n                        } else {\n                            handleSort('timestamp.seconds')\n                        }\n                    }}\n                >\n                    Most Recent\n                                        </Dropdown.Item>\n\n                <Dropdown.Item active={feedSort == 'bounty'}\n                    onClick={async () => {\n                        if (feedSort == 'bounty') {\n                            return\n                        } else {\n                            handleSort('bounty')\n                        }\n                    }}\n                >\n                    Highest Bounty\n                                        </Dropdown.Item>\n\n                <Dropdown.Item active={feedSort == 'upvotes'}\n                    onClick={() => {\n                        if (feedSort == 'upvotes') {\n                            return\n                        } else {\n                            handleSort('upvotes')\n                        }\n                    }}\n                >\n                    Top Rated\n                                        </Dropdown.Item>\n            </DropdownButton>\n        )\n    }\n\n    return (\n        <div>\n            <NavBar />\n            <Container className={styles.paddingTop}>\n                <Row>\n                    <Col>\n                        <h1 style={{ paddingLeft: 22, paddingBottom: 15 }}>Feed</h1>\n                    </Col>\n                    <Col>\n\n                    </Col>\n                </Row>\n                <Tabs defaultActiveKey={session.auth ? 'Home' : 'All'} id=\"feed-nav\">\n                    <Tab eventKey=\"All\" title=\"All\">\n                        {sortButton('all', allFeed, allSort, setLastAll, setAllFeed, setAllLoadingDone, setAllSort)}\n                        {\n\n                            allFeed[0] ?\n                                <div>\n                                    <FeedView feedList={allFeed} nowSeconds={nowSeconds} userDoc={userDoc} upvoted={upvoted} downvoted={downvoted} setUpvoted={setUpvoted} setDownvoted={setDownvoted} setChanged={setChanged} changed={changed} />\n                                    {allLoadingDone ?\n                                        <Button variant='light' onClick={() => {\n                                            setAllLoadingDone(false)\n                                            getPosts(allSort, 'all', allFeed, lastAll, setLastAll, setAllFeed, setAllLoadingDone, [], false)\n                                        }}>Load more</Button>\n                                        :\n                                        <Button disabled variant=\"light\">\n                                            <Spinner\n                                                as=\"span\"\n                                                animation=\"border\"\n                                                size=\"sm\"\n                                                role=\"status\"\n                                                aria-hidden=\"true\"\n                                            />\n                                        </Button>\n                                    }\n\n                                </div>\n\n                                :\n                                allLoadingDone ?\n                                    <Card style={{ marginTop: 15 }}>\n                                        <Card.Body>\n                                            <Card.Text>No new posts.</Card.Text>\n                                        </Card.Body>\n                                    </Card>\n                                    :\n                                    feedLoadingView()\n                        }\n\n                    </Tab>\n                    <Tab eventKey=\"Home\" title=\"Home\">\n                        {sortButton('home', homeFeed, homeSort, setLastHome, setHomeFeed, setHomeLoadingDone, setHomeSort)}\n                        {\n                            homeFeed[0] ?\n                                <div>\n                                    <FeedView feedList={homeFeed} nowSeconds={nowSeconds} userDoc={userDoc} upvoted={upvoted} downvoted={downvoted} setUpvoted={setUpvoted} setDownvoted={setDownvoted} setChanged={setChanged} changed={changed} />\n                                    {homeLoadingDone ?\n                                        <Button variant='light' onClick={() => {\n                                            setHomeLoadingDone(false)\n                                            getPosts(homeSort, 'home', homeFeed, lastHome, setLastHome, setHomeFeed, setHomeLoadingDone, channels, false)\n                                        }}>Load more</Button>\n                                        :\n                                        <Button disabled variant='light'>\n                                            <Spinner\n                                                as=\"span\"\n                                                animation=\"border\"\n                                                size=\"sm\"\n                                                role=\"status\"\n                                                aria-hidden=\"true\"\n                                            />\n                                        </Button>}\n\n                                </div>\n\n                                :\n                                homeLoadingDone ?\n                                    session.auth ?\n                                        <Card style={{ marginTop: 15 }}>\n                                            <Card.Body>\n                                                <Card.Text>No new posts. Subscribe to more channels in your Profile page!</Card.Text>\n                                            </Card.Body>\n                                        </Card>\n                                        :\n                                        <Card style={{ marginTop: 15 }}>\n                                            <Card.Body>\n                                                <Card.Text>Create an account to subscribe to specific channels.</Card.Text>\n                                            </Card.Body>\n                                        </Card>\n                                    :\n                                    feedLoadingView()\n                        }\n\n                    </Tab>\n                    <Tab eventKey=\"Academic\" title=\"Academic\">\n                        {sortButton('academic', academic, acadSort, setLastAcad, setAcademic, setAcadLoadingDone, setAcadSort)}\n                        {\n                            academic[0] ?\n                                <div>\n                                    <FeedView feedList={academic} nowSeconds={nowSeconds} userDoc={userDoc} upvoted={upvoted} downvoted={downvoted} setUpvoted={setUpvoted} setDownvoted={setDownvoted} setChanged={setChanged} changed={changed} />\n                                    {acadLoadingDone ?\n                                        <Button variant='light' onClick={() => {\n                                            setAcadLoadingDone(false)\n                                            getPosts(acadSort, 'academic', academic, lastAcad, setLastAcad, setAcademic, setAcadLoadingDone, channels, false)\n                                        }}>Load more</Button>\n                                        :\n                                        <Button disabled variant='light'>\n                                            <Spinner\n                                                as=\"span\"\n                                                animation=\"border\"\n                                                size=\"sm\"\n                                                role=\"status\"\n                                                aria-hidden=\"true\"\n                                            />\n                                        </Button>}\n\n                                </div>\n\n                                :\n                                acadLoadingDone ?\n                                    session.auth ?\n                                        <Card style={{ marginTop: 15 }}>\n                                            <Card.Body>\n                                                <Card.Text>Subscribe to channels in your Profile page.</Card.Text>\n                                            </Card.Body>\n                                        </Card>\n                                        :\n                                        <Card style={{ marginTop: 15 }}>\n                                            <Card.Body>\n                                                <Card.Text>Create an account to subscribe to specific channels.</Card.Text>\n                                            </Card.Body>\n                                        </Card>\n                                    :\n                                    feedLoadingView()\n                        }\n\n                    </Tab>\n                    <Tab eventKey=\"Bulletin\" title=\"Bulletin\">\n                        {sortButton('bulletin', bulletin, bulSort, setLastBul, setBulletin, setBulLoadingDone, setBulSort)}\n                        {\n                            bulletin[0] ?\n                                <div>\n                                    <FeedView feedList={bulletin} nowSeconds={nowSeconds} userDoc={userDoc} upvoted={upvoted} downvoted={downvoted} setUpvoted={setUpvoted} setDownvoted={setDownvoted} setChanged={setChanged} changed={changed} />\n                                    {bulLoadingDone ?\n                                        <Button variant='light' onClick={() => {\n                                            setBulLoadingDone(false)\n                                            getPosts(bulSort, 'bulletin', bulletin, lastBul, setLastBul, setBulletin, setBulLoadingDone, channels, false)\n                                        }}>Load more</Button>\n                                        :\n                                        <Button disabled variant='light'>\n                                            <Spinner\n                                                as=\"span\"\n                                                animation=\"border\"\n                                                size=\"sm\"\n                                                role=\"status\"\n                                                aria-hidden=\"true\"\n                                            />\n                                        </Button>\n                                    }\n\n                                </div>\n\n                                :\n                                bulLoadingDone ?\n                                    <Card style={{ marginTop: 15 }}>\n                                        <Card.Body>\n                                            <Card.Text>No new posts.</Card.Text>\n                                        </Card.Body>\n                                    </Card>\n                                    :\n                                    feedLoadingView()\n                        }\n\n                    </Tab>\n                </Tabs>\n            </Container>\n        </div>\n    )\n}\n\nexport { HomePage }\n","import React, { useState, useCallback, useEffect } from 'react'\nimport { useParams } from 'react-router-dom';\nimport { useFirebase, Firebase } from '../Firebase'\nimport { firestore } from 'firebase'\nimport { Navbar, Nav, Button, DropdownButton, Dropdown, Container, Row, Col, Spinner, Jumbotron, Image, ProgressBar, OverlayTrigger, Popover, Carousel, Card } from 'react-bootstrap'\nimport { useSession } from '../Session'\nimport styles from './Profile.module.css'\nimport { StringLocale } from 'yup';\nimport { NavBar } from '../../constants'\nimport { FeedView } from '../../constants'\n\nconst ProfilePage: React.FC = () => {\n    const { username } = useParams()\n    const firebase = useFirebase()\n    const session = useSession()\n\n    const [user, setUser] = useState<any>(null);\n    const [userid, setUserid] = useState<string>('')\n    const [userLoading, setUserLoading] = useState<boolean>(true);\n\n    const [userSelf, setUserSelf] = useState<boolean>(false);\n    const [userSelfDoc, setUserSelfDoc] = useState<any>(null);\n    const [upvoted, setUpvoted] = useState<string[]>([])\n    const [downvoted, setDownvoted] = useState<string[]>([])\n    const [editSubjects, setEditSubjects] = useState<boolean>(false);\n\n    const [changed, setChanged] = useState<boolean>(false);\n    const [lang, setLang] = useState<boolean>(false)\n    const [sci, setSci] = useState<boolean>(false)\n    const [ss, setSS] = useState<boolean>(false);\n\n    const [history, setHistory] = useState<any[] | null>(null);\n\n    const [historyDone, setHistoryDone] = useState<boolean>(false);\n\n    const [nowSeconds, setNowSeconds] = useState<number>(0);\n\n    const [lastPost, setLastPost] = useState<any>(null)\n\n    const [sort, setSort] = useState<string>('timestamp.seconds')\n\n\n    //list of subjects\n    const [actives, setActives] = useState<any>({});\n\n    const sortButton = (sort: string) => {\n        const handleSort = async (sort: string) => {\n            setLastPost(null)\n            setHistory(null)\n            setHistoryDone(false)\n            await getPosts(sort, userid, null, null)\n            setSort(sort)\n        }\n\n        return (\n            <DropdownButton id=\"sort\" title={sort == 'timestamp.seconds' ? 'Most Recent' : 'Top Rated'} variant='light' style={{ paddingBottom: 15 }}>\n                <Dropdown.Item active={sort == 'timestamp.seconds'}\n                    onClick={async () => {\n                        if (sort == 'timestamp.seconds') {\n                            return\n                        } else {\n                            handleSort('timestamp.seconds')\n                            setChanged(!changed)\n                        }\n                    }}\n                >\n                    Most Recent\n                                        </Dropdown.Item>\n                <Dropdown.Item active={sort == 'upvotes'}\n                    onClick={async () => {\n                        if (sort == 'upvotes') {\n                            return\n                        } else {\n                            handleSort('upvotes')\n                            setChanged(!changed)\n                        }\n                    }}\n                >\n                    Top of All Time\n                                        </Dropdown.Item>\n            </DropdownButton>\n        )\n    }\n\n    const getPosts = async (sort: string, userID: string, last: any | null, history: any[] | null) => {\n        try {\n            var docList: any[] = []\n            var query = firebase.db.collection('posts').where('author', '==', userID).orderBy(sort, \"desc\");\n\n            if (last) {\n                console.log('lastPost = ', last)\n                const lastTime = sort == 'timestamp.seconds' ? last.data.timestamp.seconds : last.data.upvotes\n\n                console.log('lastTime = ', lastTime)\n                query = query.startAfter(lastTime)\n            }\n\n            const posts = await query.limit(10).get()\n\n\n            if (posts.empty || posts == null) {\n                console.log('No matching documents')\n                setHistoryDone(true);\n                return;\n            }\n            posts.forEach(doc => {\n                docList = [...docList, { id: doc.id, data: doc.data() }];\n            });\n\n            for (let i = 0; i < docList.length; i++) {\n                const doc = docList[i]\n                const numComments = await firebase.db.collection('comments').where('thread', '==', doc.id).get()\n                docList[i] = { id: doc.id, data: doc.data, numComments: numComments.size }\n            }\n\n            const lastDoc = docList[docList.length - 1]\n            setLastPost(lastDoc)\n\n            if (history) {\n                await setHistory([...history, ...docList])\n            } else {\n                await setHistory(docList)\n            }\n\n            console.log('docList = ', docList)\n            setHistoryDone(true)\n        } catch (e) {\n            console.log(e)\n            setHistoryDone(true)\n        }\n    }\n\n    useEffect(() => {\n        var now = new Date();\n        var seconds = ((now.getTime()) * .001) >> 0;\n        setNowSeconds(seconds);\n\n        const getUser = async () => {\n            const results = await firestore().collection('users').where('username', '==', username).limit(1).get();\n            if (results.empty) {\n                console.log('empty');\n                setUserLoading(false);\n            } else {\n\n                const userID = await results.docs[0].id\n                setUserid(userID)\n                const userResults = await results.docs[0].data()\n                setUser(userResults)\n                setActives(userResults.actives)\n\n                if (userResults.actives) {\n                    if (userResults.actives['French'] || userResults.actives['Mandarin'] || userResults.actives['Spanish'] || userResults.actives['Languages (General)']) {\n                        setLang(true)\n                    }\n\n                    if (userResults.actives['Biology'] || userResults.actives['Chemistry'] || userResults.actives['Physics'] || userResults.actives['Sciences (General)']) {\n                        setSci(true)\n                    }\n\n                    if (userResults.actives['Psychology'] || userResults.actives['Sociology'] || userResults.actives['Social Sciences (General)']) {\n                        setSS(true)\n                    }\n                }\n\n\n                getPosts('timestamp.seconds', userID, lastPost, history);\n                setUserLoading(false);\n            }\n        }\n\n        getUser();\n\n        if (session.auth) {\n            const getSelf = async () => {\n                const self = await firestore().collection('users').doc(session?.auth?.uid).get()\n                if (self?.data()?.username == username) {\n                    setUserSelf(true);\n                }\n                setUserSelfDoc(self.data());\n                setUpvoted(self.data()?.upvoted)\n                setDownvoted(self.data()?.downvoted)\n            }\n\n\n            getSelf();\n        }\n\n    }, [session, firebase])\n\n    const subjectsView = () => {\n\n        const subjectObjects = Object.entries(actives).map(([keyName, keyIndex]) =>\n            // use keyName to get current key's name\n            // and a[keyName] to get its value\n            actives[keyName] ?\n                keyName == 'bulletin' ?\n                    <div key={keyName}></div>\n                    :\n                    <Button key={keyName} active variant='outline-dark' style={{ marginRight: 15, marginBottom: 15 }}>{keyName}</Button>\n                :\n                <div key={keyName}></div>\n\n        )\n\n        return (\n            <Row style={{ paddingTop: 15, paddingLeft: 15 }}>\n                {subjectObjects}\n            </Row>\n        )\n    }\n\n    const subjectEdit = (subject: string) => {\n        let activesEdit = actives;\n        if (actives[subject] == true) {\n            activesEdit[subject] = false;\n            setActives(activesEdit)\n        } else {\n            activesEdit[subject] = true;\n            setActives(activesEdit);\n        }\n    }\n\n\n    const editSubjectsView = () => {\n\n        return (\n            <Row style={{ paddingTop: 15, paddingLeft: 15 }}>\n                <Button active={actives['Arts']} variant='outline-dark' style={{ marginRight: 15, marginBottom: 15 }}\n                    onClick={() => {\n                        subjectEdit('Arts')\n                        setChanged(!changed);\n                    }}\n                >\n                    Arts\n                </Button>\n                <Button active={actives['Business']} variant='outline-dark' style={{ marginRight: 15, marginBottom: 15 }}\n                    onClick={() => {\n                        subjectEdit('Business')\n                        setChanged(!changed);\n                    }}\n                >\n                    Business</Button>\n                <Button variant='outline-dark' active={actives['Computer Science']} style={{ marginRight: 15, marginBottom: 15 }}\n                    onClick={() => {\n                        subjectEdit('Computer Science')\n                        setChanged(!changed);\n                    }}\n                >\n                    Computer Science\n                </Button>\n                <Button variant='outline-dark' active={actives['Economics']} style={{ marginRight: 15, marginBottom: 15 }}\n                    onClick={() => {\n                        subjectEdit('Economics')\n                        setChanged(!changed);\n                    }}\n                >\n                    Economics</Button>\n                <Button variant='outline-dark' active={actives['Finance']} style={{ marginRight: 15, marginBottom: 15 }}\n                    onClick={() => {\n                        subjectEdit('Finance')\n                        setChanged(!changed);\n                    }}\n                >\n                    Finance</Button>\n                <Button variant='outline-dark' active={actives['History']} style={{ marginRight: 15, marginBottom: 15 }}\n                    onClick={() => {\n                        subjectEdit('History')\n                        setChanged(!changed);\n                    }}\n                >\n                    History</Button>\n                <Button variant='outline-dark' active={actives['Humanities']} style={{ marginRight: 15, marginBottom: 15 }}\n                    onClick={() => {\n                        subjectEdit('Humanities')\n                        setChanged(!changed);\n                    }}\n                >\n                    Humanities</Button>\n                <DropdownButton id=\"lang\" title=\"Languages\" variant={lang ? 'dark' : 'outline-dark'} style={{ marginRight: 15, marginBottom: 15 }}>\n                    <Dropdown.Item active={actives['French']} onClick={() => {\n                        subjectEdit('French')\n                        setChanged(!changed);\n                        if (actives['French'] || actives['Mandarin'] || actives['Spanish'] || actives['Languages (General)']) {\n                            setLang(true)\n                        } else {\n                            setLang(false)\n                        }\n                    }}>\n                        French\n                    </Dropdown.Item>\n                    <Dropdown.Item active={actives['Mandarin']} onClick={() => {\n                        subjectEdit('Mandarin')\n                        setChanged(!changed);\n                        if (actives['French'] || actives['Mandarin'] || actives['Spanish'] || actives['Languages (General)']) {\n                            setLang(true)\n                        } else {\n                            setLang(false)\n                        }\n                    }}>\n                        Mandarin\n                    </Dropdown.Item >\n                    <Dropdown.Item active={actives['Spanish']} onClick={() => {\n                        subjectEdit('Spanish')\n                        setChanged(!changed);\n                        if (actives['French'] || actives['Mandarin'] || actives['Spanish'] || actives['Languages (General)']) {\n                            setLang(true)\n                        } else {\n                            setLang(false)\n                        }\n                    }}>\n                        Spanish\n                    </Dropdown.Item>\n                    <Dropdown.Item active={actives['Languages (General)']} onClick={() => {\n                        subjectEdit('Languages (General)')\n                        setChanged(!changed);\n                        if (actives['French'] || actives['Mandarin'] || actives['Spanish'] || actives['Languages (General)']) {\n                            setLang(true)\n                        } else {\n                            setLang(false)\n                        }\n                    }}>\n                        General\n                    </Dropdown.Item>\n                </DropdownButton>\n                <Button variant='outline-dark' style={{ marginRight: 15, marginBottom: 15 }} active={actives['Mathematics']} onClick={() => {\n                    subjectEdit('Mathematics')\n                    setChanged(!changed);\n                }}>\n                    Mathematics\n                </Button>\n                <DropdownButton id=\"sci\" title=\"Sciences\" variant={sci ? 'dark' : 'outline-dark'} style={{ marginRight: 15, marginBottom: 15 }}>\n                    <Dropdown.Item active={actives['Biology']} onClick={() => {\n                        subjectEdit('Biology')\n                        setChanged(!changed);\n                        if (actives['Biology'] || actives['Chemistry'] || actives['Physics'] || actives['Sciences (General)']) {\n                            setSci(true)\n                        } else {\n                            setSci(false)\n                        }\n                    }}>\n                        Biology\n                    </Dropdown.Item>\n                    <Dropdown.Item active={actives['Chemistry']} onClick={() => {\n                        subjectEdit('Chemistry')\n                        setChanged(!changed);\n                        if (actives['Biology'] || actives['Chemistry'] || actives['Physics'] || actives['Sciences (General)']) {\n                            setSci(true)\n                        } else {\n                            setSci(false)\n                        }\n                    }}>\n                        Chemistry\n                    </Dropdown.Item>\n                    <Dropdown.Item active={actives['Physics']} onClick={() => {\n                        subjectEdit('Physics')\n                        setChanged(!changed);\n                        if (actives['Biology'] || actives['Chemistry'] || actives['Physics'] || actives['Sciences (General)']) {\n                            setSci(true)\n                        } else {\n                            setSci(false)\n                        }\n                    }}>\n                        Physics\n                    </Dropdown.Item>\n                    <Dropdown.Item active={actives['Sciences (General)']} onClick={() => {\n                        subjectEdit('Sciences (General)')\n                        setChanged(!changed);\n                        if (actives['Biology'] || actives['Chemistry'] || actives['Physics'] || actives['Sciences (General)']) {\n                            setSci(true)\n                        } else {\n                            setSci(false)\n                        }\n                    }}>\n                        General\n                    </Dropdown.Item>\n                </DropdownButton>\n                <DropdownButton id=\"lang\" title=\"Social Sciences\" variant={ss ? 'dark' : 'outline-dark'} style={{ marginRight: 15, marginBottom: 15 }} >\n                    <Dropdown.Item active={actives['Psychology']} onClick={() => {\n                        subjectEdit('Psychology')\n                        setChanged(!changed);\n                        if (actives['Psychology'] || actives['Sociology'] || actives['Social Sciences (General)']) {\n                            setSS(true)\n                        } else {\n                            setSS(false)\n                        }\n                    }}>\n                        Psychology\n                    </Dropdown.Item>\n                    <Dropdown.Item active={actives['Sociology']} onClick={() => {\n                        subjectEdit('Sociology')\n                        setChanged(!changed);\n                        if (actives['Psychology'] || actives['Sociology'] || actives['Social Sciences (General)']) {\n                            setSS(true)\n                        } else {\n                            setSS(false)\n                        }\n                    }}>\n                        Sociology\n                    </Dropdown.Item>\n                    <Dropdown.Item active={actives['Social Sciences (General)']} onClick={() => {\n                        subjectEdit('Social Sciences (General)')\n                        setChanged(!changed);\n                        if (actives['Psychology'] || actives['Sociology'] || actives['Social Sciences (General)']) {\n                            setSS(true)\n                        } else {\n                            setSS(false)\n                        }\n                    }}>\n                        General\n                    </Dropdown.Item>\n                </DropdownButton>\n                <Button variant='outline-dark' style={{ marginRight: 15, marginBottom: 15 }} active={actives['General']} onClick={() => {\n                    subjectEdit('General')\n                    setChanged(!changed);\n                }}>General</Button>\n            </Row>\n        )\n    }\n\n\n    return (\n        <div>\n            <NavBar />\n            {userLoading ?\n                <Container className={styles.paddingTop}>\n                    <Spinner style={{ marginTop: 30, marginLeft: 30 }} animation=\"border\" />\n                </Container>\n                :\n                user ?\n                    <Container className={styles.paddingTop}>\n                        <Card>\n                            <Card.Body>\n                                <Row>\n                                    <Col>\n                                        <h2>@{username}</h2>\n                                        <h2>{user.name}</h2>\n                                    </Col>\n                                    <Col>\n                                        {user.credits == 1 ?\n                                            <h3>1 credit</h3>\n                                            :\n                                            <h3>{user.credits} credits</h3>\n                                        }\n\n                                    </Col>\n                                </Row>\n\n\n                                <hr></hr>\n\n                                <Row style={{ paddingLeft: 15 }}>\n                                    <h3 style={{ paddingRight: 15 }}>Channels</h3>\n                                    {userSelf ?\n                                        editSubjects ?\n                                            <Button variant=\"primary\" onClick={async () => {\n                                                setEditSubjects(false)\n                                                await firestore().collection('users').doc(session.auth?.uid).update({ actives: actives })\n\n                                            }}>Save</Button>\n                                            :\n                                            <Button variant=\"outline-dark\" onClick={() => { setEditSubjects(true) }}>Edit</Button>\n                                        :\n                                        <div></div>\n                                    }\n                                </Row>\n                                {\n                                    editSubjects ?\n                                        editSubjectsView()\n                                        :\n                                        actives ?\n                                            subjectsView()\n                                            :\n                                            <div></div>\n                                }\n                            </Card.Body>\n\n                        </Card>\n\n                        <h2 style={{ paddingTop: 50, paddingLeft: 22, paddingBottom: 15 }}>Post History</h2>\n\n                        {sortButton(sort)}\n\n                        {history\n                            ?\n                            <div>\n\n                                <FeedView feedList={history} nowSeconds={nowSeconds} userDoc={userSelfDoc} upvoted={upvoted} downvoted={downvoted} setUpvoted={setUpvoted} setDownvoted={setDownvoted} setChanged={setChanged} changed={changed} />\n                                <Button variant='light' onClick={() => { getPosts(sort, userid, lastPost, history) }}>Load more</Button>\n                            </div>\n                            :\n                            historyDone ?\n                                <h3 style={{ paddingTop: 15 }}>No posts.</h3>\n                                :\n                                <div style={{ marginTop: 15 }}>\n                                    <Spinner style={{ marginTop: 30, marginLeft: 30 }} animation=\"border\" />\n                                </div>\n\n                        }\n\n                    </Container>\n                    :\n                    <Container className={styles.paddingTop}>\n                        <h1>User does not exist.</h1>\n                    </Container>\n            }\n\n\n\n        </div>\n    )\n}\n\nexport { ProfilePage }\n","import React, { useState, useEffect } from 'react'\nimport { useParams } from 'react-router-dom';\nimport { useFirebase, Firebase } from '../Firebase'\nimport { functions, auth, firestore } from 'firebase'\nimport { Navbar, Nav, Button, ButtonGroup, Container, Row, Col, Spinner, Jumbotron, Image, ProgressBar, OverlayTrigger, Popover, Carousel, Card, Form, Modal, InputGroup, FormControl } from 'react-bootstrap'\nimport { useSession } from '../Session'\nimport styles from './Question.module.css'\nimport { NavBar } from '../../constants'\n\nconst QuestionPage: React.FC = (props) => {\n    const firebase = useFirebase()\n    const session = useSession()\n\n    const { postid } = useParams()\n\n    const [self, setSelf] = useState<any>(null);\n    const [post, setPost] = useState<any>(null);\n    const [postSelf, setPostSelf] = useState<boolean>(false);\n\n    const [answer, setAnswer] = useState<string>(\"\")\n    const [comments, setComments] = useState<any[] | undefined>(undefined)\n    const [numComments, setNumComments] = useState<number>(0);\n\n    const [activeAnswer, setActiveAnswer] = useState<boolean>(false);\n\n    const [loadingDone, setLoadingDone] = useState<boolean>(false);\n    const [commentsDone, setCommentsDone] = useState<boolean>(false);\n\n    const [handling, setHandling] = useState<boolean>(false);\n\n    const [nowSeconds, setNowSeconds] = useState<number>(0);\n\n    const [timeMessage, setTimeMessage] = useState<string>('')\n\n    const [reply, setReply] = useState<string>('')\n    const [replyText, setReplyText] = useState<string>('')\n    const [replyHandling, setReplyHandling] = useState<boolean>(false);\n\n    const [changed, setChanged] = useState<boolean>(false);\n\n    const [upvoted, setUpvoted] = useState<string[]>([])\n    const [downvoted, setDownvoted] = useState<string[]>([])\n\n    const [awardModalShow, setAwardModalShow] = useState<boolean>(false)\n    const [award, setAward] = useState<number>(0)\n    const [awardCheck, setAwardCheck] = useState<boolean>(false)\n    const [awardHandling, setAwardHandling] = useState<boolean>(false)\n    const [err, setErr] = useState<string>('')\n\n    const [reportMessage, setReportMessage] = useState<string>('')\n    const [reportAuthorName, setReportAuthorName] = useState<string>('')\n    const [reportID, setReportID] = useState<string>('')\n    const [reportHandling, setReportHandling] = useState<boolean>(false)\n    const [reportDone, setReportDone] = useState<boolean>(false);\n\n    const [reportModalShow, setReportModalShow] = useState<boolean>(false)\n\n    const [deleteModalShow, setDeleteModalShow] = useState<boolean>(false)\n\n    const [commentAuthorName, setCommentAuthorName] = useState<string>('')\n    const [commentAuthor, setCommentAuthor] = useState<string>('')\n    const [commentID, setCommentID] = useState<string>('')\n\n    const [deleteCollection, setDeleteCollection] = useState<string>('')\n    const [deleteID, setDeleteID] = useState<string>('')\n    const [numReplies, setNumReplies] = useState<number>(0)\n    const [deleteSelected, setDeleteSelected] = useState<number>(0)\n    const [deleteHandling, setDeleteHandling] = useState<boolean>(false)\n\n    const [editCollection, setEditCollection] = useState<string>('')\n    const [editID, setEditID] = useState<string>('')\n    const [fullEdit, setFullEdit] = useState<boolean>(false);\n    const [editText, setEditText] = useState<string>('')\n    const [readOnlyText, setReadOnlyText] = useState<string>('')\n    const [editHandling, setEditHandling] = useState<boolean>(false);\n    const [editModalShow, setEditModalShow] = useState<boolean>(false);\n\n    const [editTitle, setEditTitle] = useState<string>('')\n    const [editBounty, setEditBounty] = useState<number>(0)\n    const [editBountyCheck, setEditBountyCheck] = useState<boolean>(true);\n\n    const [bountyErr, setBountyErr] = useState<string>('')\n    const [titleErr, setTitleErr] = useState<string>('')\n\n    const getComments = async (id: string) => {\n        try {\n            var docList: any[] = []\n            const commentsList = await firebase.db.collection('comments').where('parent', '==', id).orderBy('upvotes', 'desc').limit(10).get()\n\n            console.log('commentsList = ', commentsList)\n            if (commentsList.empty || commentsList == null) {\n                console.log('No matching documents')\n                setCommentsDone(true)\n                return;\n            }\n\n            commentsList.forEach(doc => {\n                docList = [...docList, { id: doc.id, data: doc.data() }];\n            });\n\n            for (let i = 0; i < docList.length; i++) {\n                const doc = docList[i]\n                const replies = await getComments(doc.id)\n                docList[i] = { id: doc.id, data: doc.data, replies: replies }\n            }\n\n            return (docList)\n\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n    const handleAwardChange = (event: any) => {\n        const check = /^[0-9\\b]+$/;\n        setAward(event.target.value);\n        if (event.target.value.match(check)) {\n            setAwardCheck(true);\n            console.log('passCheck')\n        } else {\n            setAwardCheck(false);\n            console.log('failCheck')\n        }\n    }\n\n    const handleVote = (upvoteTrue: boolean, object: any) => {\n        var collect = 'comments'\n        if (object == post) {\n            const newObject = { data: post, id: postid }\n            object = newObject\n            collect = 'posts'\n        }\n        var upvoteList: string[] = []\n        var downvoteList: string[] = []\n        var upvoteIndex = -1\n        var downvoteIndex = -1\n        console.log('userDoc = ', self)\n        if (self.upvoted) {\n            upvoteList = upvoted\n            upvoteIndex = upvoteList.indexOf(object.id)\n        }\n        if (self.downvoted) {\n            downvoteList = downvoted\n            downvoteIndex = downvoteList.indexOf(object.id)\n        }\n\n        console.log('upvoteIndex = ', upvoteIndex)\n\n        console.log('upvoteList = ', upvoteList)\n\n        console.log('downvoteIndex = ', downvoteIndex)\n\n        console.log('downvoteList = ', downvoteList)\n\n        var upvotes: number;\n        if (object.data.upvotes) {\n            upvotes = object.data.upvotes\n        } else {\n            upvotes = 0\n        }\n\n        if (upvoteTrue) {\n\n            if (upvoteIndex == -1) {\n                if (downvoteIndex != -1) {\n                    downvoteList.splice(downvoteIndex, 1)\n                    firebase.db.collection('users').doc(session.auth?.uid).update({ downvoted: downvoteList })\n                    upvotes = upvotes + 1\n                }\n                upvoteList = [...upvoteList, object.id]\n                console.log('upvoteList after adding = ', upvoteList)\n                upvotes = upvotes + 1\n\n            } else {\n                upvoteList.splice(upvoteIndex, 1)\n                console.log('upvoteList after splice = ', upvoteList)\n                upvotes = upvotes - 1\n            }\n            firebase.db.collection('users').doc(session.auth?.uid).update({ upvoted: upvoteList })\n\n            firebase.db.collection(collect).doc(object.id).update({ upvotes: upvotes })\n            object.data.upvotes = upvotes;\n        } else {\n            if (downvoteIndex == -1) {\n                if (upvoteIndex != -1) {\n                    upvoteList.splice(upvoteIndex, 1)\n                    firebase.db.collection('users').doc(session.auth?.uid).update({ upvoted: upvoteList })\n                    upvotes = upvotes - 1\n                }\n                downvoteList = [...downvoteList, object.id]\n                console.log('downvoteList after adding = ', downvoteList)\n                upvotes = upvotes - 1\n            } else {\n                downvoteList.splice(downvoteIndex, 1)\n                console.log('downvoteList after splice = ', downvoteList)\n                upvotes = upvotes + 1\n            }\n\n\n            firebase.db.collection('users').doc(session.auth?.uid).update({ downvoted: downvoteList })\n            firebase.db.collection(collect).doc(object.id).update({ upvotes: upvotes })\n            object.data.upvotes = upvotes;\n        }\n\n\n        if (upvoteList) {\n            setUpvoted(upvoteList)\n        }\n        if (downvoteList) {\n            setDownvoted(downvoteList)\n        }\n    }\n\n    useEffect(() => {\n\n        const setAllComments = async () => {\n            const allComments = await firebase.db.collection('comments').where('thread', '==', postid).get()\n            setNumComments(allComments.size)\n        }\n\n        setAllComments()\n\n        var now = new Date();\n        var seconds = ((now.getTime()) * .001) >> 0;\n        setNowSeconds(seconds);\n\n        if (session.auth) {\n            const getSelf = async () => {\n                const selfDoc = await (await firestore().collection('users').doc(session.auth?.uid).get()).data()\n                setSelf(selfDoc)\n                if (selfDoc?.upvoted) {\n                    setUpvoted(selfDoc?.upvoted)\n                }\n                if (selfDoc?.downvoted) {\n                    setDownvoted(selfDoc?.downvoted)\n                }\n            }\n            getSelf();\n        }\n\n\n        const getPost = async () => {\n            try {\n                const postDoc = await (await firestore().collection('posts').doc(postid).get()).data()\n                console.log('postDoc = ', postDoc)\n\n                if (postDoc) {\n                    var time = seconds - postDoc?.timestamp.seconds;\n                    console.log('time = ', time)\n                    var message = ''\n                    if (time < 120) {\n                        message = 'about a minute ago'\n                    } else if (time < 3600) {\n                        message = `${Math.floor(time / 60)} minutes ago`\n                    } else if (time < 86400) {\n                        let curTime = Math.floor(time / 3600)\n                        if (curTime == 1) {\n                            message = 'about an hour ago'\n                        } else {\n                            message = `${curTime} hours ago`\n                        }\n                    } else {\n                        let curTime = Math.floor(time / 86400)\n                        if (curTime == 1) {\n                            message = 'yesterday'\n                        } else {\n                            message = `${curTime} days ago`\n                        }\n                    }\n\n                    setTimeMessage(message)\n                }\n\n                setPost(postDoc)\n                if (postDoc?.author == session?.auth?.uid) {\n                    setPostSelf(true)\n                }\n                const commentsTest = await getComments(postid);\n                console.log(commentsTest)\n                setComments(commentsTest)\n                setCommentsDone(true);\n                setLoadingDone(true)\n            } catch (e) {\n                console.log(e)\n                setLoadingDone(true)\n            }\n\n        }\n\n        getPost();\n    }, [session, firebase])\n\n\n    const handleAnswerChange = (event: any) => {\n        setAnswer(event.target.value)\n    }\n\n    const handleReplyChange = (event: any) => {\n        setReplyText(event.target.value)\n    }\n\n    const handleReplySubmit = async (event: any) => {\n        event.preventDefault()\n        setReplyHandling(true);\n        console.log(replyText)\n        const newReply = { comment: replyText, parent: reply, thread: postid, timestamp: firestore.Timestamp.now(), author: session?.auth?.uid, authorName: self.username, upvotes: 0, selected: 0, edit: '' }\n        await functions().httpsCallable('createComment')(newReply).then(async () => {\n            setComments(await getComments(postid))\n            setNumComments(numComments + 1)\n            setCommentsDone(true);\n            setReplyHandling(false);\n            setReply('');\n        })\n    }\n\n    const handleSubmit = async (event: any) => {\n        event.preventDefault()\n        setHandling(true);\n        console.log(answer)\n        const newComment = { comment: answer, parent: postid, thread: postid, timestamp: firestore.Timestamp.now(), author: session?.auth?.uid, authorName: self.username, upvotes: 0, selected: 0 }\n        await functions().httpsCallable('createComment')(newComment).then(async () => {\n            setComments(await getComments(postid))\n            setNumComments(numComments + 1)\n            setCommentsDone(true);\n            setHandling(false);\n            setActiveAnswer(false);\n        })\n    }\n\n    const handleReportChange = (event: any) => {\n        setReportMessage(event.target.value);\n    }\n\n    const handleTitleChange = (event: any) => {\n        setEditTitle(event.target.value)\n        if (event.target.value.length <= 0) {\n            setTitleErr('Title Required.')\n        } else {\n            setTitleErr('')\n        }\n    }\n\n    const handleBountyChange = (event: any) => {\n        const check = /^[0-9\\b]+$/;\n        setEditBounty(event.target.value);\n        if (event.target.value.match(check) && Number(event.target.value) >= Number(post.bounty)) {\n            setEditBountyCheck(true);\n            setBountyErr('')\n            console.log('passCheck')\n        } else {\n            setEditBountyCheck(false);\n            setBountyErr('Cannot decrease bounty.')\n            console.log('failCheck')\n        }\n    }\n\n    const handleEditChange = (event: any) => {\n        setEditText(event.target.value)\n    }\n\n    /*\n    <Button variant=\"primary\" size=\"sm\" onClick={() => { functions().httpsCallable('chooseAwardCredits')({ author: object.data.author, bounty: post.bounty, post: postid, comment: object.id }) }}>Award</Button>\n    */\n    //a feed object\n    const feedCard = (object: { id: string; data: { comment: string; timestamp: { seconds: number, nanoseconds: number }; author: string; authorName: string; parent: string; thread: string; upvotes: number; selected: number; edit: string }; replies: any[] }) => {\n        var time = nowSeconds - object.data.timestamp.seconds;\n        var message = ''\n        if (time < 120) {\n            message = 'about a minute ago'\n        } else if (time < 3600) {\n            message = `${Math.floor(time / 60)} minutes ago`\n        } else if (time < 86400) {\n            let curTime = Math.floor(time / 3600)\n            if (curTime == 1) {\n                message = 'about an hour ago'\n            } else {\n                message = `${curTime} hours ago`\n            }\n        } else {\n            let curTime = Math.floor(time / 86400)\n            if (curTime == 1) {\n                message = 'yesterday'\n            } else {\n                message = `${curTime} days ago`\n            }\n        }\n\n\n        return (\n\n            <div className={styles.borderLeft} style={{ marginBottom: 10, paddingLeft: 10, paddingTop: 10 }}>\n                \n                {object.data.selected > 0 ?\n                    <Row>\n                        <Col>\n                            <p style={{ fontSize: 20 }}>{`@${object.data.authorName}`}</p>\n                            <p className={styles.fontLess}> {object.data.comment}</p>\n                            <p className={styles.fontLess}> {object.data.edit}</p>\n                        </Col>\n                        <Col xs={3} md={2}>\n                            <Button variant=\"success\" size=\"sm\">{object.data.selected} cr.</Button>\n                        </Col>\n                    </Row>\n                    :\n                    postSelf ?\n                        <Row>\n                            <Col>\n                                <p style={{ fontSize: 20 }}>{`@${object.data.authorName}`}</p>\n                                <p className={styles.fontLess}> {object.data.comment}</p>\n                                <p className={styles.fontLess}> {object.data.edit}</p>\n                            </Col>\n                            <Col xs={3} md={2}>\n                                <Button variant=\"primary\" size=\"sm\" onClick={() => { \n                                    setCommentAuthorName(object.data.authorName)\n                                    setCommentAuthor(object.data.author)\n                                    setCommentID(object.id)\n                                    setAwardModalShow(true) }}>Award</Button>\n                            </Col>\n                        </Row>\n                        :\n                        <div>\n                            <p style={{ fontSize: 20 }}>{`@${object.data.authorName}`}</p>\n                            <p className={styles.fontLess}> {object.data.comment}</p>\n                            <p className={styles.fontLess}> {object.data.edit}</p>\n                        </div>\n\n                }\n\n\n\n                <p className={styles.fontLess}>\n                    <Button disabled={!session.auth} active={upvoted.includes(object.id)} size=\"sm\" variant=\"outline-dark\" onClick={() => {\n                        handleVote(true, object)\n                        setChanged(!changed)\n                    }}>\n                        ▲\n                    </Button>\n                    {' '}\n                    &nbsp;\n                    {object?.data?.upvotes ?\n                        object.data.upvotes\n                        :\n                        0\n                    }\n                    {' '}\n                    &nbsp;\n                    <Button disabled={!session.auth} active={downvoted.includes(object.id)} size=\"sm\" variant=\"outline-dark\" onClick={() => {\n                        handleVote(false, object)\n                        setChanged(!changed)\n                    }}>▼</Button>\n                    {' - '}\n                    <Button variant=\"light\" size=\"sm\" onClick={() => { setReply(object.id) }}>Reply</Button>\n                    {' '} - {message}\n                    {' - '}\n                    &nbsp;\n                    <Button style={{marginTop: 8}} disabled={!session.auth} size=\"sm\" variant='outline-danger' onClick={() => {\n                        setReportAuthorName(object.data.authorName)\n                        setReportID(object.id)\n                        setReportModalShow(true)\n                    }}>\n                        ⚐\n                    </Button>\n                    &nbsp;\n                    &nbsp;\n                    {object.data.author == session.auth?.uid ?\n                        <Button size=\"sm\" style={{ marginTop: 8 }} variant='outline-success' onClick={() => {\n                            let replies = 0;\n                            if (object.replies && object.replies.length > 0) {\n                                replies = object.replies.length\n                            }\n                            setEditCollection('comments')\n                            setEditID(object.id)\n                            if (replies == 0 && object.data.selected == 0) {\n                                setFullEdit(true)\n                                setEditText(object.data.comment)\n                            } else {\n                                setFullEdit(false)\n                                setReadOnlyText(object.data.comment)\n                                if (object.data.edit.length > 0) {\n                                    setEditText(object.data.edit)\n                                } else {\n                                    setEditText('EDIT: ')\n                                }\n                            }\n\n                            setEditModalShow(true)\n                        }}>Edit</Button>\n                        :\n                        ''}\n&nbsp;\n                    &nbsp;\n                    {object.data.author == session.auth?.uid && object.data.selected == 0 ?\n                        <Button size=\"sm\" style={{marginTop: 8}} variant='outline-danger' onClick={() => { \n                            let replies = 0;\n                            if (object.replies && object.replies.length > 0) {\n                                replies = object.replies.length\n                            }\n                            setDeleteCollection('comments')\n                            setDeleteID(object.id)\n                            setNumReplies(replies)\n                            setDeleteSelected(object.data.selected)\n                            setDeleteModalShow(true) }}>Delete</Button>\n                    :\n                    ''}\n                    \n                    \n                </p>\n\n\n\n                {reply == object.id ?\n                    <Card>\n                        <Card.Body>\n                            <Form onSubmit={handleReplySubmit}>\n\n                                <Form.Group controlId=\"description\">\n                                    <Form.Control required as=\"textarea\" rows={3} placeholder={`Replying to @${object.data.authorName}...`} onChange={handleReplyChange} />\n                                </Form.Group>\n\n                                {replyHandling ?\n                                    <Button variant=\"primary\" style={{ marginTop: 15 }}>\n                                        <Spinner\n                                            as=\"span\"\n                                            animation=\"border\"\n                                            size=\"sm\"\n                                            role=\"status\"\n                                            aria-hidden=\"true\"\n                                        />\n                                    </Button>\n                                    :\n                                    <Button variant=\"primary\" type=\"submit\" style={{ marginTop: 15 }}>\n                                        Reply\n                                        </Button>\n                                }\n\n                            </Form>\n                        </Card.Body>\n                    </Card>\n                    :\n                    <div></div>\n                }\n                {object.replies && object.replies.length > 0 ?\n                    feedView(object.replies)\n                    :\n                    <div></div>}\n\n            </div>\n\n            //\n        )\n    }\n\n    //list of feed objects\n    const feedView = (feedList: { id: string; data: { comment: string; timestamp: { seconds: number; nanoseconds: number }; author: string; authorName: string; parent: string; thread: string; upvotes: number; selected: number; edit: string }; replies: any[] }[]) => {\n        const feedItems = feedList.map((object: { id: string; data: { comment: string; timestamp: { seconds: number, nanoseconds: number }; author: string; authorName: string; parent: string; thread: string; upvotes: number; selected: number; edit: string }; replies: any[] }) => <div key={object.id} style={{ paddingTop: 15 }}>{feedCard(object)}</div>\n        )\n        return feedItems\n    }\n\n    const channelView = (post: any) => {\n        const subjectObjects = post.channels?.map((d: string) => <p key={d}>{(post.channels.indexOf(d) == 0) ? `#${d}` : `, #${d}`}</p>)\n        return (\n            <div>\n                <Row style={{ marginLeft: 1 }}>{subjectObjects}</Row>\n\n            </div>\n        )\n    }\n\n    //console.log(\"Object.values(item) = \", Object.values(comments))\n\n    return (\n        <div>\n            <NavBar />\n                <Modal show={awardModalShow} onHide={() => { setAwardModalShow(false) }}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Award @{commentAuthorName}!</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        Awards cannot be taken back once submitted.\n                        \n                    </Modal.Body>\n                    <Modal.Footer>\n                        <InputGroup>\n                            <Form.Control placeholder=\"How many credits?\" onChange={handleAwardChange} value={award} />\n                            <Form.Text>{err}</Form.Text>\n                        </InputGroup>\n                        {awardHandling ? \n                            <Button disabled>\n                                <Spinner\n                                as=\"span\"\n                                animation=\"border\"\n                                size=\"sm\"\n                                role=\"status\"\n                                aria-hidden=\"true\"\n                            />\n                            </Button>\n                            :\n                            <Button onClick={() => {\n                                console.log('award = ', award)\n                                if (award > Number(post.bounty) + Number(self.credits)) {\n                                    setErr(`You have ${Number(post.bounty) + Number(self.credits)} credits to give.`)\n                                } else if (awardCheck == false || award < 1) {\n                                    setErr(`Input at least 1 credit.`)\n                                } else {\n                                    setAwardHandling(true)\n                                    functions().httpsCallable('chooseAwardCredits')({ author: commentAuthor, bounty: Number(post.bounty), post: postid, comment: commentID, award: Number(award) }).then(() => {\n                                        setAwardModalShow(false)\n                                        window.location.reload()\n                                    })\n                                }\n                            }}>Award</Button>\n                            }\n                        \n                    </Modal.Footer>\n                </Modal>\n\n                <Modal show={deleteModalShow} onHide={() => {\n                    setDeleteModalShow(false)\n                }}>\n                    <Modal.Header>\n                        <Modal.Title>Delete</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        Are you sure you want to delete this post?\n                    </Modal.Body>\n                    <Modal.Footer>\n                        {\n                            deleteHandling ?\n                            <Button disabled variant=\"danger\">\n                                <Spinner\n                                    as=\"span\"\n                                    animation=\"border\"\n                                    size=\"sm\"\n                                    role=\"status\"\n                                    aria-hidden=\"true\"\n                                />\n                            </Button>\n                            :\n                            <Button variant=\"danger\" onClick={() => {\n                                setDeleteHandling(true)\n                                if (deleteCollection === 'posts') {\n                                    functions().httpsCallable('deletePost')({ collect: 'posts', id: postid, numReplies: Number(numComments), awarded: post.awarded, bounty: post.bounty }).then(() => {\n                                        window.location.reload()\n                                    })\n                                } else {\n                                    functions().httpsCallable('deletePost')({ collect: deleteCollection, id: deleteID, numReplies: Number(numReplies), awarded: Number(deleteSelected) }).then(async () => {\n                                        setDeleteModalShow(false)\n                                        setComments(await getComments(postid))\n                                        setNumComments(numComments - 1)\n                                        setCommentsDone(true);\n                                        setDeleteHandling(false);\n                                    })\n                                }\n\n                            }}\n                            >Confirm</Button>\n                        }\n                        \n                    </Modal.Footer>\n                </Modal>\n\n            <Modal show={editModalShow} onHide={() => {\n                setEditModalShow(false)\n            }}>\n                <Modal.Header>\n                    <Modal.Title>Edit</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    {fullEdit ?\n                    <InputGroup>\n                    {editCollection === 'posts' ?\n                    <div>\n                                    <p style={{marginBottom: 10}}>Edit Title</p>\n                                    <Form.Text className='text-danger'>{titleErr}</Form.Text>\n                                    <Form.Control style={{ marginBottom: 20 }}onChange={handleTitleChange} value={editTitle} />\n                                    <p style={{ marginBottom: 10 }}>Edit Description</p>\n                                    <Form.Control style={{ marginBottom: 20 }} as=\"textarea\" rows={3} onChange={handleEditChange} value={editText} />\n                                    <p style={{ marginBottom: 10 }}>Edit Bounty</p>\n                                    <Form.Control onChange={handleBountyChange} value={editBounty} />\n\n                                    <Form.Text className='text-danger'>{bountyErr}</Form.Text>\n                    </div>\n                                \n                    :\n                                <Form.Control as=\"textarea\" rows={3} onChange={handleEditChange} value={editText} />\n                    }\n                        \n                    </InputGroup>\n                    :\n                    editCollection === 'posts' ?\n                    <div>\n                                <p style={{ marginBottom: 10 }}>Title</p>\n                                <Form.Text className='text-danger'>{titleErr}</Form.Text>\n                                <Form.Control style={{ marginBottom: 20 }} as=\"text\" value={editTitle} readOnly/>\n                                <p style={{ marginBottom: 10 }}>Description</p>\n                                <Form.Control style={{marginBottom: 20}} as=\"textarea\" value={readOnlyText} readOnly />\n                                <p style={{ marginBottom: 10 }}>Edit</p>\n                                <Form.Control style={{ marginBottom: 20 }} as=\"textarea\" rows={3} onChange={handleEditChange} value={editText} />\n                                <p style={{ marginBottom: 10 }}>Edit Bounty</p>\n                                <Form.Control onChange={handleBountyChange} value={editBounty} />\n                                <Form.Text className='text-danger'>{bountyErr}</Form.Text>\n                    </div>\n                    :\n                    <div>\n                            <Form.Control as=\"textarea\" value={readOnlyText} readOnly />\n                            <Form.Control style={{marginTop: 20}} as=\"textarea\" rows={3} onChange={handleEditChange} value={editText} />\n                    </div>\n                                \n                    \n                    }\n                </Modal.Body>\n                <Modal.Footer>\n                    {editHandling ?\n                    <Button disabled variant=\"success\">\n                            <Spinner\n                                as=\"span\"\n                                animation=\"border\"\n                                size=\"sm\"\n                                role=\"status\"\n                                aria-hidden=\"true\"\n                            />\n                    </Button>\n                    :\n                        <Button variant=\"success\" onClick={() => {\n                            setEditHandling(true)\n                            if (editCollection === 'posts') {\n                                if (editBountyCheck && titleErr === '') {\n                                    functions().httpsCallable('editPost')({ collect: editCollection, id: editID, fullEdit: fullEdit, editText: editText, title: editTitle, bounty: editBounty }).then(async () => {\n                                        setEditModalShow(false);\n                                        window.location.reload()\n                                    })\n                                } \n                            } else {\n                                functions().httpsCallable('editPost')({ collect: editCollection, id: editID, fullEdit: fullEdit, editText: editText }).then(async () => {\n                                    setEditModalShow(false);\n                                    setComments(await getComments(postid));\n                                    setCommentsDone(true);\n                                    setEditHandling(false);\n                                })\n                            }\n                            setEditHandling(false);\n                            \n                        }}>Save</Button>\n                    }\n                    \n                </Modal.Footer>\n            </Modal>\n\n            <Modal show={reportModalShow} onHide={() => {\n                setReportModalShow(false)\n                setReportDone(false)\n                setReportMessage('')\n            }}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Report @{reportAuthorName}</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    Let us know if this user is violating community agreements as outlined in our terms of service. Thanks!\n                    </Modal.Body>\n                <Modal.Footer>\n                    <InputGroup>\n                        <Form.Control as=\"textarea\" placeholder=\"What's the reason for reporting this user?\" rows={3} onChange={handleReportChange} value={reportMessage} />\n                    </InputGroup>\n                    {reportHandling ?\n                        <Button disabled variant='danger'>\n                            <Spinner\n                                as=\"span\"\n                                animation=\"border\"\n                                size=\"sm\"\n                                role=\"status\"\n                                aria-hidden=\"true\"\n                            />\n                        </Button>\n                        :\n                        reportDone ?\n                            <Button disabled variant='danger'>Thanks! You can close this window.</Button>\n\n                            :\n                            <Button variant='danger' onClick={async () => {\n                                setReportHandling(true);\n                                await functions().httpsCallable('createReport')({ post: reportID, reportMessage: reportMessage, submittedBy: session.auth?.uid, timestamp: firestore.Timestamp.now() }).then(() => {\n                                    setReportHandling(false);\n                                    setReportDone(true);\n                                })\n                            }}>Report\n                        </Button>\n                    }\n\n                </Modal.Footer>\n            </Modal>\n            {post ?\n                <Container className={styles.paddingTop}>\n                    <Card style={{ marginBottom: 30 }}>\n                        <Card.Body>\n                            <Row>\n                                <Col>\n                                    <Card.Title>{post?.title}</Card.Title>\n                                    <Card.Subtitle>{channelView(post)}</Card.Subtitle>\n                                    <Card.Text>{post?.desc}</Card.Text>\n                                </Col>\n                                <Col xs={3} sm={2} style={{ textAlign: 'center' }}>\n                                    <Button disabled={!session.auth} active={upvoted.includes(postid)} size=\"sm\" variant=\"outline-primary\" onClick={() => {\n                                        handleVote(true, post)\n                                        setChanged(!changed)\n                                    }}>\n                                        ▲\n                                    </Button>\n                                    <p>{post?.upvotes ?\n                                        post?.upvotes\n                                        :\n                                        0\n                                    }\n                                    </p>\n                                    <Button disabled={!session.auth} active={downvoted.includes(postid)} size=\"sm\" variant=\"outline-danger\" onClick={() => {\n                                        handleVote(false, post)\n                                        setChanged(!changed)\n                                    }}>▼</Button>\n\n                                    <Card style={{ marginTop: 15 }}>\n                                        {post?.bounty <= 0 ?\n                                            <Card.Title style={{ paddingTop: 10 }}>Claimed</Card.Title>\n                                            :\n                                            <Card.Title style={{ paddingTop: 10 }}>{post?.bounty} cr.</Card.Title>\n                                        }\n                                        \n                                    </Card>\n                                </Col>\n                            </Row>\n\n\n                            <Card.Text className={styles.fontLess} style={{ paddingTop: 10 }}>\n                                Posted by <a href={`/user/${post?.authorName}`}>{`@${post?.authorName}`}</a> {timeMessage}\n                            {' - '}\n                            &nbsp;\n                            <Button style={{marginTop: 5}} disabled={!session.auth} size=\"sm\" variant='outline-danger' onClick={() => {\n                                    setReportAuthorName(post.authorName)\n                                    setReportID(postid)\n                                    setReportModalShow(true)\n                                }}>\n                                    ⚐\n                            </Button>\n                            &nbsp;\n                            &nbsp;\n                            {postSelf ?\n                                    <Button size=\"sm\" style={{ marginTop: 5 }} variant='outline-success' onClick={() => {\n                                        setEditCollection('posts')\n                                        setEditID(postid)\n                                        if (numComments === 0 && post.awarded === false) {\n                                            setFullEdit(true)\n                                            setEditText(post.desc)\n                                        } else {\n                                            setFullEdit(false)\n                                            setReadOnlyText(post.desc)\n                                            if (post.edit && post.edit.length > 0) {\n                                                setEditText(post.edit)\n                                            } else {\n                                                setEditText('EDIT: ')\n                                            }\n                                        }\n\n                                        setEditTitle(post.title)\n                                        setEditBounty(post.bounty)\n\n                                        setEditModalShow(true)\n                                    }}>Edit</Button>\n                                    :\n                                    ''}\n                                    &nbsp;\n                                    &nbsp;\n                            {postSelf && post.awarded == false ?\n                                    <Button size=\"sm\" style={{marginTop: 5}} variant='outline-danger' onClick={() => {\n                                        setDeleteCollection('posts')\n                                        setDeleteID(postid)\n                                        setNumReplies(numComments)\n                                        setDeleteModalShow(true) }}>Delete Post</Button>\n                                    :\n                                    ''\n                            }\n                            \n                    \n\n                            </Card.Text>\n                        </Card.Body>\n                    </Card>\n\n                    {session.auth ?\n                        activeAnswer ?\n\n                            <Form onSubmit={handleSubmit}>\n\n                                <Form.Group controlId=\"description\">\n                                    <Form.Label>Answer</Form.Label>\n                                    <Form.Control required as=\"textarea\" rows={3} placeholder=\"\" onChange={handleAnswerChange} />\n                                </Form.Group>\n\n                                {handling ?\n                                    <Button variant=\"primary\" style={{ marginTop: 15 }}>\n                                        <Spinner\n                                            as=\"span\"\n                                            animation=\"border\"\n                                            size=\"sm\"\n                                            role=\"status\"\n                                            aria-hidden=\"true\"\n                                        />\n                                    </Button>\n                                    :\n                                    <Button variant=\"primary\" type=\"submit\" style={{ marginTop: 15 }}>\n                                        Comment\n                                </Button>\n                                }\n\n                            </Form>\n                            :\n                            <Button variant=\"primary\" onClick={() => { setActiveAnswer(true) }}>Comment</Button>\n                        :\n                        <div></div>\n                    }\n\n\n                    <hr></hr>\n\n\n\n                    {comments ?\n                        <div>\n                            {numComments == 1 ?\n                                <h3 style={{ paddingTop: 30, paddingLeft: 22, paddingBottom: 15 }}>{numComments} comment</h3>\n                                :\n                                <h3 style={{ paddingTop: 30, paddingLeft: 22, paddingBottom: 15 }}>{numComments} comments</h3>\n                            }\n\n                            {feedView(comments)}\n                        </div>\n                        :\n                        commentsDone ?\n                            <div>\n                                <h3 style={{ paddingTop: 30, paddingLeft: 22, paddingBottom: 15 }}>{numComments} comments</h3>\n                            </div>\n                            :\n                            <Spinner style={{ marginTop: 30, marginLeft: 30 }} animation=\"border\" />\n                    }\n\n                </Container>\n                :\n                loadingDone ?\n                    <Container className={styles.paddingTop}>\n                        <h1>No post found.</h1>\n                    </Container>\n                    :\n                    <Container className={styles.paddingTop}>\n                        <Spinner style={{ marginTop: 30, marginLeft: 30 }} animation=\"border\" />\n                    </Container>\n            }\n\n        </div>\n    )\n}\n\n\nexport { QuestionPage }\n","import React, { useState, useEffect, useContext, useCallback } from 'react'\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n} from \"react-router-dom\"\n\nimport { ROUTES } from '../../constants'\nimport { HomePage } from '../Home'\nimport { ProfilePage } from '../Profile'\nimport { useFirebase } from '../Firebase'\nimport { useSession, SessionContext } from '../Session/'\nimport { QuestionPage } from '../Question'\n\nconst MainApp: React.FC = () => {\n    const session = useSession()\n\n    if (session.initializing) {\n        return (<div></div>)\n    }\n    return (\n        <Router>\n            <Switch>\n                <Route exact path={ROUTES.ROOT}>\n                    <HomePage />\n                </Route>\n                <Route path={ROUTES.USERNAME}>\n                    <ProfilePage />\n                </Route>\n                <Route path={ROUTES.COMMENTS}>\n                    <QuestionPage />\n                </Route>\n            </Switch>\n        </Router>\n    )\n}\n\n\nconst AppWithAuth: React.FC = () => {\n    const firebase = useFirebase()\n    const [authObject, setAuthObject] = useState(() => {\n        const currentUser = firebase.auth.currentUser\n        if (!currentUser) {\n            return {\n                initializing: true,\n                auth: null,\n            }\n        } else {\n            return {\n                initializing: false,\n                auth: currentUser,\n            }\n        }\n\n    })\n\n    useEffect(() => {\n        function onChange(newUser: any) {\n            console.log('New user detected in auth onChange: ', newUser)\n            if (newUser === null) {\n                // Not authenticated\n                console.log('Not authenticated')\n                setAuthObject({ initializing: false, auth: null })\n            } else {\n                // New authentication occurred\n                setAuthObject(prevState => {\n                    if (prevState.auth === null) {\n                        // Went from unauthenticated to authenticated\n                        console.log('Authenticated')\n                        return { initializing: false, auth: newUser }\n                    } else {\n                        // Bug: Went from authenticated to another authentication\n                        console.log('Bug: reauthenticated')\n                        return prevState\n                    }\n                })\n            }\n        }\n\n        // listen for auth state changes\n        const unsubscribe = firebase.auth.onAuthStateChanged(onChange)\n        // unsubscribe to the listener when unmounting\n\n        return () => {\n            unsubscribe()\n            // We loaded a prof and were listening to it\n        }\n    }, [firebase.auth])\n\n    return (\n        <SessionContext.Provider value={authObject}>\n            <MainApp />\n        </SessionContext.Provider>\n    )\n}\n\nconst AppWithTwitter: React.FC = () => {\n    const firebase = useFirebase()\n\n    const getTwitterResult = useCallback(\n        async () => {\n            // If already logged in, no need to check\n            if (firebase.auth.currentUser) {\n                return\n            }\n            try {\n                const result = await firebase.auth.getRedirectResult()\n                console.log('Received Redirect result: ', result)\n                const { user, additionalUserInfo, credential } = result\n                if (!user) {\n                    console.log('No Twitter Redirect Result!')\n                    return\n                }\n                console.log('Current user after redirect: ', firebase.auth.currentUser)\n                // Register user for first time\n            }\n            catch (error) {\n                var errorCode = error.code;\n                var errorMessage = error.message;\n                // The email of the user's account used.\n                var email = error.email;\n                // The firebase.auth.AuthCredential type that was used.\n                var credential = error.credential;\n                console.log(error)\n            }\n\n        }, [firebase.auth])\n\n    useEffect(() => {\n        console.log('Current user in Twitter Checking Component: ', firebase.auth.currentUser)\n        getTwitterResult()\n    }, [getTwitterResult, firebase.auth])\n\n    return (\n        <AppWithAuth />\n    )\n}\n\n\n\nexport default AppWithTwitter ","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { FirebaseContext, Firebase } from './components/Firebase';\n\nconst config = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <FirebaseContext.Provider value={new Firebase()}>\n      <App />\n    </FirebaseContext.Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paddingTop\":\"Question_paddingTop__3SnTv\",\"centerItems\":\"Question_centerItems__2niqs\",\"fontLess\":\"Question_fontLess__1iLQC\",\"opaqueLess\":\"Question_opaqueLess__2kYLQ\",\"refresh\":\"Question_refresh__vU4gl\",\"borderLeft\":\"Question_borderLeft__2Cpjz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paddingTop\":\"FeedView_paddingTop__3m4Xr\",\"centerItems\":\"FeedView_centerItems__1ZPLt\",\"fontLess\":\"FeedView_fontLess__3NchW\",\"opaqueLess\":\"FeedView_opaqueLess__2AvMC\",\"refresh\":\"FeedView_refresh__2WvkY\",\"borderLeft\":\"FeedView_borderLeft__1qHL5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paddingTop\":\"Profile_paddingTop__3kNOc\",\"centerItems\":\"Profile_centerItems__3xB3O\",\"fontLess\":\"Profile_fontLess__1fK0e\",\"opaqueLess\":\"Profile_opaqueLess__DR6mh\",\"refresh\":\"Profile_refresh__Vh51B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paddingTop\":\"Home_paddingTop__lwuR_\",\"centerItems\":\"Home_centerItems__11x6e\",\"fontLess\":\"Home_fontLess__3aF4X\",\"opaqueLess\":\"Home_opaqueLess__1EMYG\",\"refresh\":\"Home_refresh__2Epj3\",\"aNoStyle\":\"Home_aNoStyle__3zzT_\"};"],"sourceRoot":""}