{"version":3,"sources":["constants/routes.tsx","components/Firebase/context.tsx","components/Firebase/firebase.tsx","components/Session/useSession.tsx","components/Login/LoginPage.tsx","components/Signup/SignupPage.tsx","components/Post/Post.tsx","constants/NavBar.tsx","constants/FeedView.tsx","components/Home/Home.tsx","components/Profile/ProfilePage.tsx","components/Question/Question.tsx","components/App/index.tsx","serviceWorker.ts","index.tsx","components/Question/Question.module.css","constants/FeedView.module.css","components/Profile/Profile.module.css","components/Home/Home.module.css"],"names":["ROUTES","FirebaseContext","createContext","useFirebase","useContext","config","apiKey","process","authDomain","databaseURL","projectId","messagingSenderId","SessionContext","auth","initializing","useSession","LoginPage","setLoginModalShow","firebase","useState","validated","setValidated","email","setEmail","password","setPassword","err","setErr","handling","setHandling","handleSubmit","event","a","preventDefault","console","log","currentTarget","checkValidity","stopPropagation","doSignInWithEmailAndPassword","message","Container","Form","onSubmit","Group","controlId","Label","Control","required","type","placeholder","onChange","target","value","Button","variant","disabled","Spinner","as","animation","size","role","aria-hidden","style","marginTop","className","SignupPage","session","name","setName","username","setUsername","emailErr","setEmailErr","usernameErr","setUsernameErr","passCheck","setPassCheck","useEffect","window","location","href","length","checkUsername","createUserWithEmailAndPassword","catch","e","newUser","uid","user","firestore","collection","doc","set","actives","upvoted","downvoted","credits","then","currentUser","sendEmailVerification","where","limit","get","results","paddingBottom","Feedback","Text","match","Check","label","PostPage","setPostModalShow","channels","setChannels","channelList","setChannelList","allChannels","title","setTitle","description","setDescription","bounty","setBounty","bountyCheck","setBountyCheck","bountyErr","setBountyErr","input","setInput","userDoc","setUserDoc","selectBul","setSelectBul","data","getUser","newPost","desc","timestamp","Timestamp","now","author","authorName","bulletin","upvotes","Number","awarded","functions","httpsCallable","db","update","emailVerified","ButtonGroup","active","onClick","Row","marginLeft","subjectObjects","map","d","key","marginRight","marginBottom","array","index","indexOf","splice","selectedView","subjectsView","strKeyword","subjects","i","replace","substr","toLowerCase","push","onBlur","rows","postToView","NavBar","loginModalShow","signupModalShow","setSignupModalShow","postModalShow","Navbar","bg","Brand","Modal","show","onHide","Header","Body","closeButton","Nav","doSignOut","reload","FeedView","feedList","nowSeconds","setUpvoted","setDownvoted","setChanged","changed","commentCard","reportMessage","setReportMessage","reportAuthorName","setReportAuthorName","reportID","setReportID","reportHandling","setReportHandling","reportDone","setReportDone","reportModalShow","setReportModalShow","commentsExpand","setCommentsExpand","commentsDone","setCommentsDone","comments","setComments","postTitle","setPostTitle","postDesc","setPostDesc","postid","setPostid","feedItems","object","id","paddingTop","feedCard","time","seconds","Math","floor","curTime","getComments","docList","orderBy","commentsList","empty","forEach","commentItems","channelView","handleVote","upvoteTrue","upvoteList","downvoteList","upvoteIndex","downvoteIndex","styles","borderLeft","paddingLeft","selected","Col","fontSize","fontLess","comment","xs","md","includes","thread","Card","Title","Subtitle","textAlign","numComments","Footer","InputGroup","post","submittedBy","HomePage","allFeed","setAllFeed","homeFeed","setHomeFeed","academic","setAcademic","setBulletin","undefined","allLoadingDone","setAllLoadingDone","homeLoadingDone","setHomeLoadingDone","acadLoadingDone","setAcadLoadingDone","bulLoadingDone","setBulLoadingDone","setNowSeconds","lastAll","setLastAll","lastHome","setLastHome","lastAcad","setLastAcad","lastBul","setLastBul","allSort","setAllSort","homeSort","setHomeSort","acadSort","setAcadSort","bulSort","setBulSort","getChannels","userData","Object","keys","filter","getPosts","sort","category","categoryFeed","lastCategory","setLastCategory","setCategoryFeed","setLoading","query","posts","lastTime","startAfter","lastPost","loadPosts","Date","getTime","feedLoadingView","sortButton","feedSort","setLastFeed","setFeedLoading","setFeedSort","handleSort","sortType","DropdownButton","Dropdown","Item","Tabs","defaultActiveKey","Tab","eventKey","ProfilePage","useParams","setUser","userid","setUserid","userLoading","setUserLoading","userSelf","setUserSelf","userSelfDoc","setUserSelfDoc","editSubjects","setEditSubjects","lang","setLang","sci","setSci","ss","setSS","history","setHistory","commentHistory","setCommentHistory","historyDone","setHistoryDone","commentHistoryDone","setCommentHistoryDone","setLastPost","lastComment","setLastComment","setSort","verifyMessageModalShow","setVerifyMessageModalShow","sentEmail","setSentEmail","setActives","trues","setTrues","activesErr","setActivesErr","collect","userID","last","lastDoc","numTrues","docs","sub","userResults","self","getSelf","subjectEdit","subject","activesEdit","paddingRight","entries","keyName","QuestionPage","props","setSelf","setPost","postSelf","setPostSelf","answer","setAnswer","setNumComments","activeAnswer","setActiveAnswer","loadingDone","setLoadingDone","timeMessage","setTimeMessage","reply","setReply","replyText","setReplyText","replyHandling","setReplyHandling","awardModalShow","setAwardModalShow","award","setAward","awardCheck","setAwardCheck","awardHandling","setAwardHandling","deleteModalShow","setDeleteModalShow","commentAuthorName","setCommentAuthorName","commentAuthor","setCommentAuthor","commentID","setCommentID","deleteCollection","setDeleteCollection","deleteID","setDeleteID","numReplies","setNumReplies","deleteSelected","setDeleteSelected","deleteHandling","setDeleteHandling","editCollection","setEditCollection","editID","setEditID","fullEdit","setFullEdit","editText","setEditText","readOnlyText","setReadOnlyText","editHandling","setEditHandling","editModalShow","setEditModalShow","editTitle","setEditTitle","editBounty","setEditBounty","editBountyCheck","setEditBountyCheck","titleErr","setTitleErr","replies","allComments","setAllComments","selfDoc","postDoc","commentsTest","getPost","handleReplyChange","handleReplySubmit","newReply","parent","edit","newComment","handleBountyChange","handleEditChange","feedView","readOnly","sm","MainApp","exact","path","AppWithAuth","authObject","setAuthObject","unsubscribe","onAuthStateChanged","prevState","Provider","AppWithTwitter","getTwitterResult","useCallback","getRedirectResult","result","additionalUserInfo","credential","code","Boolean","hostname","ReactDOM","render","StrictMode","provider","doTwitterSignIn","signInWithRedirect","doCreateUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","app","apps","initializeApp","this","TwitterAuthProvider","App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","module","exports"],"mappings":"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","file":"static/js/main.7fb2be4b.chunk.js","sourcesContent":["const ROUTES = {\n    ROOT: \"/\",\n    USERNAME: \"/user/:username\",\n    COMMENTS: \"/post/:postid\"\n}\n\nexport { ROUTES }","import { createContext, useContext } from 'react'\nimport { Firebase } from './firebase'\n\n\nconst FirebaseContext = createContext<Firebase>({} as Firebase)\n\nconst useFirebase = () => {\n    const firebase = useContext(FirebaseContext)\n\n    return firebase\n}\nexport { FirebaseContext, useFirebase }\n","import app from 'firebase/app'\nimport 'firebase/auth'\nimport 'firebase/firestore'\nimport 'firebase/functions'\n\nconst config = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n}\n\nclass Firebase {\n    auth: firebase.auth.Auth\n    db: firebase.firestore.Firestore\n    functions: firebase.functions.Functions\n    provider: firebase.auth.AuthProvider\n\n    constructor() {\n        if (!app.apps.length) {\n            app.initializeApp(config)\n        }\n        this.auth = app.auth()\n        // For ease of access. Note that db normally refers to Firebase Realtime Database.\n        this.db = app.firestore()\n        this.functions = app.functions()\n        this.provider = new app.auth.TwitterAuthProvider()\n    }\n\n    // *** Auth API ***\n\n    // twitter signin handler\n    doTwitterSignIn = async () => {\n        this.auth.signInWithRedirect(this.provider)\n    }\n\n    // email and password signin handlers\n    doCreateUserWithEmailAndPassword = (email: string, password: string) =>\n        this.auth.createUserWithEmailAndPassword(email, password)\n\n    doSignInWithEmailAndPassword = (email: string, password: string) =>\n        this.auth.signInWithEmailAndPassword(email, password)\n\n    doSignOut = () => this.auth.signOut()\n\n}\n\nexport { Firebase }\n","import { createContext, useContext } from 'react'\nimport firebase from 'firebase'\n\ninterface SessionObject {\n    initializing: boolean,\n    auth: firebase.User | null,\n}\n\nconst SessionContext = createContext<SessionObject>({\n    auth: {} as firebase.User,\n    initializing: true\n})\n\nconst useSession = () => {\n    const session = useContext(SessionContext)\n    return session\n}\n\nexport { SessionContext, useSession }\n\n","import React, { useState, useEffect, PropsWithChildren } from 'react';\nimport { Button, Modal, Container, Form, Spinner } from 'react-bootstrap'\nimport { useFirebase } from '../Firebase'\nimport { useSession } from '../Session'\nimport styles from './Login.module.css'\n\nconst LoginPage: React.FC<any> = ({ setLoginModalShow }) => {\n    const firebase = useFirebase()\n    const session = useSession()\n\n    const [validated, setValidated] = useState<boolean>(false);\n    const [email, setEmail] = useState<string>('')\n    const [password, setPassword] = useState<string>('')\n    const [err, setErr] = useState<string>('')\n\n    const [handling, setHandling] = useState<boolean>(false)\n\n\n    const handleSubmit = async (event: any) => {\n        event.preventDefault();\n        setHandling(true);\n        console.log('email = ', email)\n        console.log('password = ', password)\n        console.log(event.currentTarget)\n        if (event.currentTarget.checkValidity() === false) {\n            console.log(validated);\n            event.preventDefault();\n            event.stopPropagation();\n        } else {\n            try {\n                await firebase.doSignInWithEmailAndPassword(email, password)\n                setValidated(true);\n                setHandling(false);\n                setLoginModalShow(false)\n            } catch (e) {\n                console.log(e);\n                setErr(e.message);\n                setHandling(false);\n            }\n        }\n        console.log(validated);\n    }\n\n    const handleChangeEmail = (event: any) => {\n        setEmail(event.target.value)\n    }\n\n    const handleChangePassword = (event: any) => {\n        setPassword(event.target.value)\n    }\n\n    return (\n        <Container>\n            <Form validated={validated} onSubmit={handleSubmit}>\n                <Form.Group controlId=\"formBasicEmail\">\n                    <Form.Label>Email address</Form.Label>\n                    <Form.Control required type=\"email\" placeholder=\"Enter email\" onChange={handleChangeEmail} value={email} />\n                </Form.Group>\n                <Form.Group controlId=\"formBasicPassword\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control required type=\"password\" placeholder=\"Password\" onChange={handleChangePassword} value={password} />\n                </Form.Group>\n                {handling ?\n                    <Button variant=\"primary\" disabled>\n                        <Spinner\n                            as=\"span\"\n                            animation=\"border\"\n                            size=\"sm\"\n                            role=\"status\"\n                            aria-hidden=\"true\"\n                        />\n                    </Button>\n                    :\n                    <Button variant=\"primary\" type=\"submit\" style={{ marginTop: 10 }}>\n                        Log in\n                        </Button>\n                }\n\n            </Form>\n            <p className=\"text-danger\">{err}</p>\n        </Container>\n\n    )\n}\n\nexport { LoginPage }","import React, { useState, useEffect } from 'react';\nimport { Navbar, Nav, Button, ButtonGroup, Container, Row, Col, Form, OverlayTrigger, Spinner } from 'react-bootstrap'\nimport styles from './Signup.module.css'\nimport { auth, firestore } from 'firebase'\nimport { useFirebase, Firebase } from '../Firebase'\nimport { useSession } from '../Session'\nimport { AnyCnameRecord } from 'dns';\n\nconst SignupPage: React.FC = () => {\n    const firebase = useFirebase()\n    const session = useSession()\n\n    const [validated, setValidated] = useState<boolean>(false);\n    const [name, setName] = useState<string>('')\n    const [username, setUsername] = useState<string>('')\n    const [email, setEmail] = useState<string>('')\n    const [emailErr, setEmailErr] = useState<string>('')\n    const [password, setPassword] = useState<string>('')\n    const [err, setErr] = useState<string>('')\n    const [usernameErr, setUsernameErr] = useState<string>('')\n    const [passCheck, setPassCheck] = useState<boolean>(false);\n\n    const [handling, setHandling] = useState<boolean>(false);\n\n\n    useEffect(() => {\n        if (session.auth && (handling == false)) {\n            window.location.href = \"/\"\n        }\n    }, [session, firebase])\n\n    var actionCodeSettings = {\n        // URL you want to redirect back to. The domain (www.example.com) for this\n        // URL must be whitelisted in the Firebase Console.\n        url: 'https://localhost:3000/finishSignUp?cartId=1234',\n        // This must be true.\n        handleCodeInApp: false,\n    }\n\n    const handleSubmit = async (event: any) => {\n        event.preventDefault();\n        setHandling(true)\n        console.log('name = ', name)\n        console.log('username = ', username)\n        console.log('email = ', email)\n        console.log('password = ', password)\n        console.log(event.currentTarget)\n        if (event.currentTarget.checkValidity() === false || passCheck === false || usernameErr.length > 0 || emailErr.length > 0) {\n            console.log(validated);\n            event.preventDefault();\n            event.stopPropagation();\n        } else {\n            const results = await checkUsername(username);\n            if (results > 0) {\n                setUsernameErr('Already taken.')\n            } else {\n                try {\n                    console.log('this is triggered')\n                    const newUser = await auth().createUserWithEmailAndPassword(email, password).catch(e => { console.log(e) })\n                    if (newUser) {\n                        console.log('this is triggered 2')\n                        const uid = newUser?.user?.uid\n                        await firestore().collection('users').doc(uid).set({ name: name, username: username, actives: { 'Arts': false, 'Biology': false, 'Business': false, 'Computer Science': false, 'Economics': false, 'Finance': false, 'French': false, 'General': true, 'Humanities': false, 'Languages (General)': false, 'Mandarin': false, 'Psychology': false, 'Spanish': false, 'bulletin': true }, upvoted: [], downvoted: [], credits: 25 }).then(() => {\n                            window.location.href = `/user/${username}`\n                        })\n\n                        await auth().currentUser?.sendEmailVerification()\n                    }\n                    setValidated(true);\n                } catch (e) {\n                    console.log(e);\n                    setErr(e.message);\n                }\n            }\n        }\n        setHandling(false);\n    }\n\n    const checkUsername = async (username: string) => {\n        const results = await firestore().collection('users').where('username', '==', username).limit(1).get();\n        return results.size;\n    }\n\n    const handleChangeName = (event: any) => {\n        setName(event.target.value)\n    }\n\n    const handleChangeUsername = (event: any) => {\n        setUsername(event.target.value)\n        if (event.target.value.length > 15) {\n            setUsernameErr('Too long. Usernames should be < 15 characters.')\n        } else {\n            setUsernameErr('')\n        }\n    }\n\n    const handleChangeEmail = (event: any) => {\n        var check = /uchicago.edu/\n        setEmail(event.target.value)\n        if (event.target.value.match(check)) {\n            setEmailErr('')\n        } else {\n            setEmailErr('uchicago.edu addresses only.')\n        }\n    }\n\n    const handleChangePassword = (event: any) => {\n        var check = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?!.*\\s).{8,30}$/;\n        setPassword(event.target.value);\n        if (event.target.value.match(check)) {\n            setPassCheck(true);\n            console.log('passCheck')\n        } else {\n            setPassCheck(false);\n            console.log('failCheck')\n        }\n    }\n\n    return (\n        <Container style={{ paddingBottom: 10 }}>\n            <Form validated={validated} onSubmit={handleSubmit}>\n\n                <Form.Group controlId=\"formBasicName\">\n                    <Form.Label>Name</Form.Label>\n                    <Form.Control required type=\"text\" placeholder=\"Jane Doe\" onChange={handleChangeName} value={name} />\n                    <Form.Control.Feedback type=\"invalid\">\n                        Please provide a name.\n                        </Form.Control.Feedback>\n                </Form.Group>\n\n                <Form.Group controlId=\"formBasicName\">\n                    <Form.Label>Username</Form.Label>\n                    <Form.Control required type=\"text\" placeholder=\"username\" onChange={handleChangeUsername} value={username} />\n                    <Form.Text className=\"text-danger\">\n                        {usernameErr}\n                    </Form.Text>\n                </Form.Group>\n\n                <Form.Group controlId=\"formBasicEmail\">\n                    <Form.Label>Email address</Form.Label>\n                    <Form.Control required type=\"email\" placeholder=\"jdoe@email.com\" onChange={handleChangeEmail} value={email} />\n                    <Form.Text className=\"text-danger\">\n                        {emailErr}\n                    </Form.Text>\n                    <Form.Control.Feedback type=\"invalid\">\n                        Please provide an email.\n                        </Form.Control.Feedback>\n                </Form.Group>\n\n                <Form.Group controlId=\"formBasicPassword\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control required type=\"password\" placeholder=\"Password\" onChange={handleChangePassword} value={password} />\n                    {passCheck ?\n                        <Form.Text className=\"text-success\">\n                            Looks good!\n                            </Form.Text>\n                        :\n                        <Form.Text className=\"text-danger\">\n                            At least 8 characters and contain an uppercase letter, lowercase letter, number, and special character.\n                            </Form.Text>\n                    }\n                </Form.Group>\n                <Form.Group controlId=\"formBasicCheckbox\">\n                    <Form.Check required type=\"checkbox\" label=\"I agree to the terms and conditions.\" />\n                </Form.Group>\n\n                {handling ?\n                    <Button variant=\"primary\" disabled>\n                        <Spinner\n                            as=\"span\"\n                            animation=\"border\"\n                            size=\"sm\"\n                            role=\"status\"\n                            aria-hidden=\"true\"\n                        />\n                    </Button>\n                    :\n                    <Button variant=\"primary\" type=\"submit\">\n                        Submit\n                    </Button>\n                }\n\n            </Form>\n            <p className=\"text-danger\">{err}</p>\n        </Container>\n    )\n}\n\nexport { SignupPage }","import React, { useState, useEffect } from 'react'\nimport { useFirebase, Firebase } from '../Firebase'\nimport { functions, auth, firestore } from 'firebase'\nimport { Navbar, Nav, Button, ButtonGroup, Container, Row, Col, Spinner, Jumbotron, Image, ProgressBar, OverlayTrigger, Popover, Carousel, Card, Form } from 'react-bootstrap'\nimport { useSession } from '../Session'\nimport styles from './Post.module.css'\nimport { NavBar } from '../../constants'\n\nconst PostPage: React.FC<any> = ({ setPostModalShow }) => {\n    const firebase = useFirebase()\n    const session = useSession()\n\n    const [channels, setChannels] = useState<Array<string>>([])\n    const [channelList, setChannelList] = useState<Array<string>>([])\n    const [allChannels, setAllChannels] = useState<Array<string>>(['Arts', 'Business', 'Computer Science', 'Economics', 'Finance', 'History', 'Humanities', 'French', 'Mandarin', 'Spanish', 'Languages (General)', 'Mathematics', 'Biology', 'Chemistry', 'Physics', 'Sciences (General)', 'Psychology', 'Sociology', 'Social Sciences (General)', 'General'])\n    const [title, setTitle] = useState<string>(\"\")\n    const [description, setDescription] = useState<string>(\"\")\n    const [bounty, setBounty] = useState<number>(0);\n    const [bountyCheck, setBountyCheck] = useState<boolean>(false);\n\n    const [err, setErr] = useState<string>(\"\")\n    const [bountyErr, setBountyErr] = useState<string>(\"\")\n\n    const [handling, setHandling] = useState<boolean>(false)\n\n    const [input, setInput] = useState<string>(\"\")\n\n    const [name, setName] = useState<string>(\"\")\n    const [userDoc, setUserDoc] = useState<any>(null);\n\n    const [selectBul, setSelectBul] = useState<boolean>(false)\n\n    useEffect(() => {\n        if (!session.auth) {\n            window.location.href = \"/\"\n        } else {\n            const getUser = async () => {\n                const user = await firestore().collection('users').doc(session.auth?.uid).get()\n                setName(user.data()?.username)\n                setUserDoc(user.data())\n            }\n            getUser()\n        }\n    }, [session, firebase])\n\n    const handleChannelChange = (event: any) => {\n        setInput(event.target.value)\n        if (event.target.value.length > 0) {\n            let strKeyword = event.target.value\n            let subjects = []\n            for (let i = 0; i < allChannels.length; i++) {\n                if (allChannels[i].replace(/[^a-zA-Z0-9]/g, \"\").substr(0, strKeyword.length).toLowerCase() == strKeyword.toLowerCase()) {\n                    subjects.push(allChannels[i])\n                }\n            }\n            setChannelList(subjects)\n        } else {\n            setChannelList([])\n        }\n    }\n\n    const subjectsView = () => {\n        const subjectObjects = channelList.map((d) => <Button variant=\"outline-dark\" key={d} style={{ marginRight: 15, marginBottom: 15 }} onClick={() => {\n            if (channels.length > 9) {\n                setErr('Maximum 10 channels')\n            } else {\n                setErr('')\n                setInput('')\n                setChannelList([])\n                if (channels.indexOf(d) != -1) {\n                    return\n                } else {\n                    setChannels([...channels, d])\n                }\n\n            }\n        }}>{d}</Button>)\n        return (\n            <div>\n                {subjectObjects}\n            </div>\n        )\n    }\n\n    const selectedView = () => {\n        const subjectObjects = channels.map((d) => <Button variant=\"dark\" key={d} style={{ marginRight: 15, marginBottom: 15 }} onClick={() => {\n            var array = [...channels]; // make a separate copy of the array\n            var index = array.indexOf(d)\n            if (index !== -1) {\n                array.splice(index, 1);\n                setChannels(array);\n            }\n            if (channels.length < 11) {\n                setErr('')\n            }\n        }}>{d}</Button>)\n        return (\n            <div>\n                {subjectObjects}\n            </div>\n        )\n    }\n\n    const postToView = () => {\n        const subjectObjects = channels.map((d) => <p key={d}>{(channels.indexOf(d) == 0) ? `to ${d}` : `, ${d}`}</p>)\n        return (\n            <Row style={{ marginTop: 15, marginLeft: 15 }}>\n                {subjectObjects}\n            </Row>\n        )\n    }\n\n    const handleTitleChange = (event: any) => {\n        setTitle(event.target.value)\n    }\n\n    const handleDescriptionChange = (event: any) => {\n        setDescription(event.target.value)\n    }\n\n    const handleBountyChange = (event: any) => {\n        const check = /^[0-9\\b]+$/;\n        setBounty(event.target.value);\n        if (event.target.value.match(check)) {\n            setBountyCheck(true);\n            console.log('passCheck')\n        } else {\n            setBountyCheck(false);\n            console.log('failCheck')\n        }\n    }\n\n    const handleSubmit = async (event: any) => {\n        setHandling(true);\n        event.preventDefault()\n        console.log(title)\n        console.log(description)\n        let newPost = null;\n        if (selectBul) {\n            newPost = { title: title, desc: description, timestamp: firestore.Timestamp.now(), author: session?.auth?.uid, channels: [], authorName: name, bulletin: selectBul, upvotes: 0, bounty: Number(bounty), awarded: true }\n        } else {\n            if (bounty == 0 || bountyCheck == false || bounty > userDoc.credits) {\n                event.preventDefault()\n                event.stopPropagation()\n                setHandling(false)\n                if (bounty > userDoc.credits) {\n                    setBountyErr(`You have ${userDoc.credits} credit(s) left.`)\n                }\n                return\n            } else {\n                if (channels.length == 0) {\n                    newPost = { title: title, desc: description, timestamp: firestore.Timestamp.now(), author: session?.auth?.uid, channels: ['General'], authorName: name, bulletin: false, upvotes: 0, bounty: Number(bounty), awarded: false }\n                } else {\n                    newPost = { title: title, desc: description, timestamp: firestore.Timestamp.now(), author: session?.auth?.uid, channels: ['bulletin'], authorName: name, upvotes: 0, bulletin: false, bounty: Number(bounty), awarded: false }\n                }\n            }\n        }\n\n        await functions().httpsCallable('createPost')(newPost).then(async () => {\n            await firebase.db.collection('users').doc(session?.auth?.uid).update({ credits: userDoc.credits - bounty })\n            window.location.href = `/user/${userDoc.username}`\n        })\n    }\n\n\n    return (\n        auth().currentUser?.emailVerified ?\n            <Container>\n\n                <Form onSubmit={handleSubmit}>\n                    <ButtonGroup style={{ paddingBottom: 15 }}>\n                        <Button variant='outline-primary' active={!selectBul} onClick={() => { setSelectBul(false) }}>Academic</Button>\n                        <Button variant='outline-primary' active={selectBul} onClick={() => {\n                            setSelectBul(true)\n                        }}>Bulletin</Button>\n                    </ButtonGroup>\n                    {selectBul ?\n                        <div></div>\n                        :\n                        <div>\n                            <p>Wallet: {userDoc?.credits} credits</p>\n                            <Form.Group controlId=\"channels\">\n                                <Form.Label>Channels</Form.Label>\n                                <Row style={{ marginLeft: 10 }}>\n                                    {selectedView()}\n                                    {subjectsView()}\n                                </Row>\n                                <Form.Control type=\"text\" placeholder={channels.length > 0 ? \"Add additional subjects if necessary.\" : \"What subjects?\"} onChange={handleChannelChange} onBlur={() => {\n                                    if (channelList.length == 1) {\n                                        setChannels([...channels, ...channelList])\n                                        setInput('')\n                                        setChannelList([])\n                                    }\n                                }} value={input} />\n                                <Form.Text className=\"text-danger\">\n                                    {err}\n                                </Form.Text>\n                            </Form.Group>\n                        </div>\n                    }\n\n                    <Form.Group controlId=\"title\">\n                        <Form.Label>Title</Form.Label>\n                        <Form.Control required type=\"text\" placeholder=\"What's up?\" onChange={handleTitleChange} />\n                    </Form.Group>\n\n                    <Form.Group controlId=\"description\">\n                        <Form.Label>Description</Form.Label>\n                        <Form.Control as=\"textarea\" rows={3} placeholder=\"Add more details if necessary.\" onChange={handleDescriptionChange} />\n                    </Form.Group>\n\n                    {selectBul ?\n                        <div></div>\n                        :\n                        <Form.Group controlId=\"bounty\">\n                            <Form.Label>Bounty</Form.Label>\n                            <Form.Control required as=\"input\" placeholder=\"Credits\" onChange={handleBountyChange} value={bounty} />\n                            {bounty > 0 && bountyCheck == true ?\n                                bounty > userDoc.credits ?\n                                    <Form.Text className='text-danger'>\n                                        {bountyErr}\n                                    </Form.Text>\n                                    :\n                                    <Form.Text className=\"text-success\">\n                                        Looks good!\n                                </Form.Text>\n                                :\n                                <Form.Text className=\"text-danger\">\n                                    At least 1 credit must be posted.\n                                </Form.Text>\n                            }\n\n                        </Form.Group>\n                    }\n\n                    {handling ?\n                        <Button variant=\"primary\" disabled style={{ marginTop: 15 }}>\n                            <Spinner\n                                as=\"span\"\n                                animation=\"border\"\n                                size=\"sm\"\n                                role=\"status\"\n                                aria-hidden=\"true\"\n                            />\n                        </Button>\n\n                        :\n                        <Button variant=\"primary\" type=\"submit\" style={{ marginTop: 15 }}>\n                            Post\n                        </Button>\n\n                    }\n\n\n                    {postToView()}\n\n                </Form>\n            </Container>\n            :\n            <Container>\n                <h3>Verify your email in your Profile page.</h3>\n            </Container>\n    )\n}\n\n\nexport { PostPage }\n","import React, { useState, useEffect } from 'react';\nimport { Navbar, Nav, Button, Modal, Container, Row, Col, Form, Spinner, FormControl } from 'react-bootstrap'\nimport { useFirebase, Firebase } from '../components/Firebase'\nimport { useSession } from '../components/Session'\nimport { LoginPage } from '../components/Login'\nimport { SignupPage } from '../components/Signup'\nimport { PostPage } from '../components/Post'\n\nconst NavBar: React.FC = () => {\n    const firebase = useFirebase()\n    const session = useSession()\n\n    const [loginModalShow, setLoginModalShow] = useState<boolean>(false);\n    const [signupModalShow, setSignupModalShow] = useState<boolean>(false);\n    const [postModalShow, setPostModalShow] = useState<boolean>(false);\n\n\n\n    return (\n        <Navbar bg=\"light\" variant=\"light\">\n            <Navbar.Brand href=\"/\">\n                {' '}\n                            ioyou\n                    </Navbar.Brand>\n            <Modal show={loginModalShow} onHide={() => {\n                setLoginModalShow(false)\n            }}>\n                <Modal.Header>Log in</Modal.Header>\n                <Modal.Body>\n                    <LoginPage setLoginModalShow={setLoginModalShow} />\n                </Modal.Body>\n            </Modal>\n            <Modal show={signupModalShow} onHide={() => {\n                setSignupModalShow(false)\n            }}>\n                <Modal.Header closeButton>Sign up</Modal.Header>\n                <Modal.Body>\n                    <SignupPage />\n                </Modal.Body>\n            </Modal>\n            <Modal show={postModalShow} onHide={() => {\n                setPostModalShow(false)\n            }}>\n                <Modal.Header closeButton>New Post</Modal.Header>\n                <Modal.Body>\n                    <PostPage setPostModalShow={setPostModalShow} />\n                </Modal.Body>\n            </Modal>\n            <Nav className=\"ml-auto\">\n                {session.auth ?\n                    <div>\n                        <Button variant=\"light\" onClick={async () => {\n                            const user = await firebase.db.collection('users').doc(session?.auth?.uid).get()\n                            const username = user?.data()?.username\n                            window.location.href = `/user/${username}`\n                        }} style={{ marginRight: 10 }}>\n                            Profile\n                            </Button>\n                        <Button onClick={() => {\n                            setPostModalShow(true)\n                        }} variant=\"outline-dark\" style={{ marginRight: 10 }}>Post</Button>\n                        <Button variant=\"light\" onClick={() => {\n                            firebase.doSignOut()\n                            window.location.reload()\n                        }}>\n                            Sign Out\n                            </Button>\n                    </div>\n\n                    :\n                    <div>\n                        <Button variant=\"outline-dark\" onClick={() => { setLoginModalShow(true) }} style={{ marginRight: 10 }}>\n                            log in\n                                </Button>\n\n                        <Button variant=\"light\" onClick={() => { setSignupModalShow(true) }}>\n                            sign up\n                                </Button>\n                    </div>\n                }\n\n            </Nav>\n        </Navbar>\n    )\n}\n\nexport { NavBar }","import React, { useState, useEffect } from 'react';\nimport { Button, Card, Row, Col, Form, Spinner, Modal, InputGroup } from 'react-bootstrap'\nimport { useFirebase, Firebase } from '../components/Firebase'\nimport { useSession } from '../components/Session'\nimport { functions, auth, firestore } from 'firebase'\nimport styles from './FeedView.module.css'\n\nconst FeedView: React.FC<any> = ({ feedList, nowSeconds, userDoc, upvoted, downvoted, setUpvoted, setDownvoted, setChanged, changed, commentCard }) => {\n    const firebase = useFirebase()\n    const session = useSession()\n\n    const [reportMessage, setReportMessage] = useState<string>('')\n    const [reportAuthorName, setReportAuthorName] = useState<string>('')\n    const [reportID, setReportID] = useState<string>('')\n    const [reportHandling, setReportHandling] = useState<boolean>(false)\n    const [reportDone, setReportDone] = useState<boolean>(false);\n\n    const [reportModalShow, setReportModalShow] = useState<boolean>(false)\n\n    const [commentsExpand, setCommentsExpand] = useState<boolean>(false)\n    const [commentsDone, setCommentsDone] = useState<boolean>(false)\n\n    const [comments, setComments] = useState<any>(<div></div>)\n    const [postTitle, setPostTitle] = useState<string>('')\n    const [postDesc, setPostDesc] = useState<string>('')\n    const [postid, setPostid] = useState<string>('')\n\n    const handleReportChange = (event: any) => {\n        setReportMessage(event.target.value);\n    }\n\n    //a feed object\n    const feedCard = (object: any, commentCard: any) => {\n\n        var time = nowSeconds - object.data.timestamp.seconds;\n        var message = ''\n        if (time < 120) {\n            message = 'about a minute ago'\n        } else if (time < 3600) {\n            message = `${Math.floor(time / 60)} minutes ago`\n        } else if (time < 86400) {\n            let curTime = Math.floor(time / 3600)\n            if (curTime == 1) {\n                message = 'about an hour ago'\n            } else {\n                message = `${curTime} hours ago`\n            }\n        } else {\n            let curTime = Math.floor(time / 86400)\n            if (curTime == 1) {\n                message = 'yesterday'\n            } else {\n                message = `${curTime} days ago`\n            }\n        }\n\n        const getComments = async (id: string) => {\n            try {\n                var docList: any[] = []\n                const commentsList = await firebase.db.collection('comments').where('parent', '==', id).orderBy('upvotes', 'desc').limit(3).get()\n\n                console.log('commentsList = ', commentsList)\n                if (commentsList.empty || commentsList == null) {\n                    console.log('No matching documents')\n                    setCommentsDone(true)\n                    return;\n                }\n\n                commentsList.forEach(doc => {\n                    docList = [...docList, { id: doc.id, data: doc.data() }];\n                });\n\n                const commentItems = docList.map((object: any) => <div key={object.id} style={{ paddingTop: 15 }}>{feedCard(object, true)}</div>\n                )\n\n                setComments(commentItems)\n                setCommentsDone(true)\n                return (docList)\n\n            } catch (e) {\n                console.log(e)\n            }\n        }\n\n        const channelView = () => {\n            const subjectObjects = object.data.channels?.map((d: string) => <p key={d}>{(object.data.channels.indexOf(d) == 0) ? `#${d}` : `, #${d}`}</p>)\n            return (\n                <div>\n                    <Row style={{ marginLeft: 1 }}>{subjectObjects}</Row>\n\n                </div>\n            )\n        }\n\n        const handleVote = (upvoteTrue: boolean) => {\n            var upvoteList: string[] = []\n            var downvoteList: string[] = []\n            var upvoteIndex = -1\n            var downvoteIndex = -1\n            console.log('userDoc = ', userDoc)\n            if (userDoc.upvoted) {\n                upvoteList = upvoted\n                upvoteIndex = upvoteList.indexOf(object.id)\n            }\n            if (userDoc.downvoted) {\n                downvoteList = downvoted\n                downvoteIndex = downvoteList.indexOf(object.id)\n            }\n\n            console.log('upvoteIndex = ', upvoteIndex)\n\n            console.log('upvoteList = ', upvoteList)\n\n            console.log('downvoteIndex = ', downvoteIndex)\n\n            console.log('downvoteList = ', downvoteList)\n\n            var upvotes: number;\n            if (object.data.upvotes) {\n                upvotes = object.data.upvotes\n            } else {\n                upvotes = 0\n            }\n\n            if (upvoteTrue) {\n\n                if (upvoteIndex == -1) {\n                    if (downvoteIndex != -1) {\n                        downvoteList.splice(downvoteIndex, 1)\n                        firebase.db.collection('users').doc(session.auth?.uid).update({ downvoted: downvoteList })\n                        upvotes = upvotes + 1\n                    }\n                    upvoteList = [...upvoteList, object.id]\n                    console.log('upvoteList after adding = ', upvoteList)\n                    upvotes = upvotes + 1\n\n                } else {\n                    upvoteList.splice(upvoteIndex, 1)\n                    console.log('upvoteList after splice = ', upvoteList)\n                    upvotes = upvotes - 1\n                }\n                firebase.db.collection('users').doc(session.auth?.uid).update({ upvoted: upvoteList })\n\n                firebase.db.collection('posts').doc(object.id).update({ upvotes: upvotes })\n                object.data.upvotes = upvotes;\n            } else {\n                if (downvoteIndex == -1) {\n                    if (upvoteIndex != -1) {\n                        upvoteList.splice(upvoteIndex, 1)\n                        firebase.db.collection('users').doc(session.auth?.uid).update({ upvoted: upvoteList })\n                        upvotes = upvotes - 1\n                    }\n                    downvoteList = [...downvoteList, object.id]\n                    console.log('downvoteList after adding = ', downvoteList)\n                    upvotes = upvotes - 1\n                } else {\n                    downvoteList.splice(downvoteIndex, 1)\n                    console.log('downvoteList after splice = ', downvoteList)\n                    upvotes = upvotes + 1\n                }\n\n\n                firebase.db.collection('users').doc(session.auth?.uid).update({ downvoted: downvoteList })\n                firebase.db.collection('posts').doc(object.id).update({ upvotes: upvotes })\n                object.data.upvotes = upvotes;\n            }\n\n\n            if (upvoteList) {\n                setUpvoted(upvoteList)\n            }\n            if (downvoteList) {\n                setDownvoted(downvoteList)\n            }\n        }\n\n        if (commentCard) {\n            return (\n\n                <div className={styles.borderLeft} style={{ marginBottom: 10, paddingLeft: 10, paddingTop: 10 }}>\n\n                    {object.data.selected > 0 ?\n                        <Row>\n                            <Col>\n                                <p style={{ fontSize: 20 }}>{`@${object.data.authorName}`}</p>\n                                <p className={styles.fontLess}> {object.data.comment}</p>\n                            </Col>\n                            <Col xs={3} md={2}>\n                                <Button variant=\"success\" size=\"sm\">{object.data.selected} cr.</Button>\n                            </Col>\n                        </Row>\n                        :\n                        <div>\n                            <p style={{ fontSize: 20 }}>{`@${object.data.authorName}`}</p>\n                            <p className={styles.fontLess}> {object.data.comment}</p>\n                        </div>\n\n                    }\n\n\n\n                    <p className={styles.fontLess}>\n                        <Button disabled={!session.auth} active={upvoted.includes(object.id)} size=\"sm\" variant=\"outline-dark\" onClick={() => {\n                            handleVote(true)\n                            setChanged(!changed)\n                        }}>\n                            ▲\n                    </Button>\n                        {' '}\n                    &nbsp;\n                    {object?.data?.upvotes ?\n                            object.data.upvotes\n                            :\n                            0\n                        }\n                        {' '}\n                    &nbsp;\n                    <Button disabled={!session.auth} active={downvoted.includes(object.id)} size=\"sm\" variant=\"outline-dark\" onClick={() => {\n                            handleVote(false)\n                            setChanged(!changed)\n                        }}>▼</Button>\n                        &nbsp;\n                        {' - '}\n\n                        {message} {' - '} &nbsp;\n                        <Button size=\"sm\" variant='outline-dark' onClick={() => {\n                            window.location.href = `/post/${object.data.thread}`\n                        }}>\n                            See Post\n                    </Button>\n                        {' - '} &nbsp;\n                        <Button disabled={!session.auth} size=\"sm\" variant='outline-danger' onClick={() => {\n                            setReportAuthorName(object.data.authorName)\n                            setReportID(object.id)\n                            setReportModalShow(true)\n                        }}>\n                            ⚐\n                    </Button>\n                    </p>\n\n                </div>\n\n                //\n            )\n        } else {\n            return (\n\n                <Card style={{ marginBottom: 20 }}>\n                    <Card.Body>\n\n                        {object.data.bulletin ?\n                            <div>\n                                <a href={`/post/${object.id}`}>\n                                    <Card.Title>{object.data.title}</Card.Title>\n                                </a>\n                                <Card.Subtitle>{channelView()}</Card.Subtitle>\n                            </div>\n                            :\n                            <Row>\n                                <Col>\n                                    <a href={`/post/${object.id}`}>\n                                        <Card.Title>{object.data.title}</Card.Title>\n                                    </a>\n                                    <Card.Subtitle>{channelView()}</Card.Subtitle>\n\n                                </Col>\n                                <Col xs={3} md={2} style={{ textAlign: 'center' }}>\n                                    <Card>\n                                        {object.data.bounty <= 0 ?\n                                            <Card.Title style={{ paddingTop: 10 }}>Claimed</Card.Title>\n                                            :\n                                            <Card.Title style={{ paddingTop: 10 }}>{object.data.bounty} cr.</Card.Title>\n                                        }\n\n                                    </Card>\n\n                                </Col>\n                            </Row>\n                        }\n\n                        <Card.Text> {object.data.desc}</Card.Text>\n\n\n                        <Card.Text style={{ paddingTop: 10 }}>\n                            <Button disabled={!session.auth} size=\"sm\" active={upvoted.includes(object.id)} variant=\"outline-primary\" onClick={() => {\n                                handleVote(true)\n                                setChanged(!changed)\n                            }}>\n                                ▲\n                            </Button>\n                            {' '}\n                        &nbsp;\n                        {object.data.upvotes ?\n                                object.data.upvotes\n                                :\n                                0\n                            }\n                            {' '}\n                        &nbsp;\n                        <Button disabled={!session.auth} size=\"sm\" active={downvoted.includes(object.id)} variant=\"outline-danger\" onClick={() => {\n                                handleVote(false)\n                                setChanged(!changed)\n                            }}>▼</Button>\n                            {' '}\n                        &nbsp;\n                        {object.numComments == 1 ?\n                                <Button variant=\"light\" onClick={() => {\n                                    getComments(object.id)\n                                    setPostTitle(object.data.title)\n                                    setPostDesc(object.data.desc)\n                                    setPostid(object.id)\n                                    setCommentsExpand(true)\n                                }}>{object.numComments} comment</Button>\n                                :\n                                <Button variant=\"light\" onClick={() => {\n                                    getComments(object.id)\n                                    setPostTitle(object.data.title)\n                                    setPostDesc(object.data.desc)\n                                    setPostid(object.id)\n                                    setCommentsExpand(true)\n                                }}>{object.numComments} comments</Button>\n                            }\n\n                            {' '} - posted by <a href={`/user/${object.data.authorName}`}>{`@${object.data.authorName}`}</a> - {message}\n                            {' - '}\n                        &nbsp;\n                        <Button disabled={!session.auth} size=\"sm\" style={{ marginTop: 8 }} variant='outline-danger' onClick={() => {\n                                setReportAuthorName(object.data.authorName)\n                                setReportID(object.id)\n                                setReportModalShow(true)\n                            }}>\n                                ⚐\n                        </Button>\n                        </Card.Text>\n\n                    </Card.Body>\n                </Card >\n                //\n            )\n        }\n\n\n    }\n\n    const feedItems = feedList.map((object: any) => <div key={object.id} style={{ paddingTop: 15 }}>{feedCard(object, commentCard)}</div>\n    )\n\n    return (\n        <div>\n            <Modal show={reportModalShow} onHide={() => {\n                setReportModalShow(false)\n                setReportDone(false)\n                setReportMessage('')\n            }}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Report @{reportAuthorName}</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    Let us know if this user is violating community agreements as outlined in our terms of service. Thanks!\n                    </Modal.Body>\n                <Modal.Footer>\n                    <InputGroup>\n                        <Form.Control as=\"textarea\" placeholder=\"What's the reason for reporting this user?\" rows={3} onChange={handleReportChange} value={reportMessage} />\n                    </InputGroup>\n                    {reportHandling ?\n                        <Button disabled variant='danger'>\n                            <Spinner\n                                as=\"span\"\n                                animation=\"border\"\n                                size=\"sm\"\n                                role=\"status\"\n                                aria-hidden=\"true\"\n                            />\n                        </Button>\n                        :\n                        reportDone ?\n                            <Button disabled variant='danger'>Thanks! You can close this window.</Button>\n\n                            :\n                            <Button variant='danger' onClick={async () => {\n                                setReportHandling(true);\n                                await functions().httpsCallable('createReport')({ post: reportID, reportMessage: reportMessage, submittedBy: session.auth?.uid, timestamp: firestore.Timestamp.now() }).then(() => {\n                                    setReportHandling(false);\n                                    setReportDone(true);\n                                })\n                            }}>Report\n                        </Button>\n                    }\n\n                </Modal.Footer>\n            </Modal>\n            <Modal show={commentsExpand} onHide={() => {\n                setCommentsExpand(false)\n                setComments([])\n                setCommentsDone(false)\n\n            }}>\n                <Modal.Header closeButton>\n                    <Modal.Title>{postTitle}</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <p>{postDesc}</p>\n                    {commentsDone ?\n                        comments\n                        :\n                        <Spinner animation=\"border\"></Spinner>}\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button href={`/post/${postid}`}>See more</Button>\n                </Modal.Footer>\n            </Modal>\n            {feedItems}\n        </div>\n\n    )\n}\n\nexport { FeedView }","import React, { useState, useCallback, useEffect } from 'react'\nimport { useFirebase, Firebase } from '../Firebase'\nimport { functions, auth, firestore } from 'firebase'\nimport { Navbar, Nav, Button, ButtonGroup, Container, Row, Col, Spinner, Jumbotron, Image, ProgressBar, OverlayTrigger, Popover, Carousel, Card, Tabs, Tab, DropdownButton, Dropdown, Modal, InputGroup, Form } from 'react-bootstrap'\nimport { useSession } from '../Session'\nimport styles from './Home.module.css'\nimport { NavBar } from '../../constants'\nimport { FeedView } from '../../constants'\n\nconst HomePage: React.FC = () => {\n    const firebase = useFirebase()\n    const session = useSession()\n\n    const [allFeed, setAllFeed] = useState<any[]>([])\n    const [homeFeed, setHomeFeed] = useState<any[]>([])\n    const [academic, setAcademic] = useState<any[]>([])\n    const [bulletin, setBulletin] = useState<any[]>([])\n    const [channels, setChannels] = useState<string[] | undefined>(undefined)\n\n    const [userDoc, setUserDoc] = useState<any>(null)\n\n    const [allLoadingDone, setAllLoadingDone] = useState<boolean>(false);\n    const [homeLoadingDone, setHomeLoadingDone] = useState<boolean>(false);\n    const [acadLoadingDone, setAcadLoadingDone] = useState<boolean>(false);\n    const [bulLoadingDone, setBulLoadingDone] = useState<boolean>(false);\n\n    const [nowSeconds, setNowSeconds] = useState<number>(0);\n\n    const [lastAll, setLastAll] = useState<any>(null);\n    const [lastHome, setLastHome] = useState<any>(null);\n    const [lastAcad, setLastAcad] = useState<any>(null);\n    const [lastBul, setLastBul] = useState<any>(null);\n\n    const [allSort, setAllSort] = useState<string>('timestamp.seconds')\n    const [homeSort, setHomeSort] = useState<string>('timestamp.seconds')\n    const [acadSort, setAcadSort] = useState<string>('timestamp.seconds')\n    const [bulSort, setBulSort] = useState<string>('timestamp.seconds')\n\n    const [upvoted, setUpvoted] = useState<string[]>([])\n    const [downvoted, setDownvoted] = useState<string[]>([])\n    const [changed, setChanged] = useState<boolean>(false);\n\n    const getChannels = async () => {\n        try {\n            const user = await firebase.db.collection('users').doc(session.auth?.uid).get()\n            console.log('user = ', user.data())\n            const userData = user.data()\n            setUserDoc(userData)\n            if (userData?.upvoted) {\n                setUpvoted(userData?.upvoted)\n            }\n            if (userData?.downvoted) {\n                setDownvoted(userData?.downvoted)\n            }\n            const channelList = user.data()?.actives\n            console.log('channelList = ', channelList)\n            console.log('object.keys() = ', Object.keys(channelList).filter((key) => {\n                return channelList[key] == true;\n            }))\n            return Object.keys(channelList).filter((key) => {\n                return channelList[key] == true;\n            })\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n    const getPosts = async (sort: string, category: string, categoryFeed: any[], lastCategory: any, setLastCategory: any, setCategoryFeed: any, setLoading: any, subjects: string[] | undefined, update: boolean) => {\n        console.log('lastCategory START = ', lastCategory)\n        try {\n            var docList: any[] = []\n            var query = firebase.db.collection('posts').orderBy(sort, 'desc')\n\n            let posts = null;\n            console.log('subjects =', subjects)\n            if (category === 'all') {\n                console.log('lastCategory')\n                if (lastCategory) {\n                    console.log('lastCategory = ', lastCategory)\n                    const lastTime = sort == 'timestamp.seconds' ? lastCategory.data.timestamp.seconds : lastCategory.data.upvotes\n\n                    console.log('lastTime = ', lastTime)\n                    posts = await query.startAfter(lastTime).limit(10).get()\n                } else {\n                    posts = await query.limit(10).get()\n                    console.log('tHIS POSTS = ', posts.size)\n                }\n\n\n            } else {\n                if (category == 'academic') {\n                    if (subjects == undefined || subjects?.length == 0) {\n                        posts = null\n                        setLoading(true)\n                        return\n                    }\n                    query = query.where('bulletin', '==', false)\n                }\n                if (lastCategory) {\n                    console.log('lastCategory 2 = ', lastCategory)\n                    const lastTime = sort == 'timestamp.seconds' ? lastCategory.data.timestamp.seconds : lastCategory.data.upvotes\n                    console.log('lastTime = ', lastTime)\n                    if (category == 'bulletin') {\n                        posts = await query.startAfter(lastTime).where('bulletin', '==', true).limit(10).get()\n                    } else {\n                        posts = await query.startAfter(lastTime).where('channels', 'array-contains-any', subjects).limit(10).get()\n                    }\n                } else {\n                    if (category == 'bulletin') {\n                        posts = await query.where('bulletin', '==', true).limit(10).get()\n                    } else {\n                        posts = await query.where('channels', 'array-contains-any', subjects).limit(10).get()\n                    }\n                }\n            }\n\n\n            if (posts?.empty || posts == null) {\n                console.log('No matching documents')\n                setLoading(true)\n                return;\n            }\n\n\n            posts?.forEach(doc => {\n                docList = [...docList, { id: doc.id, data: doc.data() }];\n            });\n\n            const lastPost = docList[docList.length - 1]\n            setLastCategory(lastPost)\n\n            for (let i = 0; i < docList.length; i++) {\n                const doc = docList[i]\n                const numComments = await firebase.db.collection('comments').where('thread', '==', doc.id).get()\n                docList[i] = { id: doc.id, data: doc.data, numComments: numComments.size }\n            }\n\n            if (update) {\n                setCategoryFeed([...docList])\n\n            } else {\n                setCategoryFeed([...categoryFeed, ...docList])\n            }\n\n            setLoading(true)\n\n\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n    const loadPosts = async () => {\n        let subjects: string[] | undefined = []\n        if (session.auth) {\n            subjects = await getChannels()\n        }\n\n        setChannels(subjects)\n\n        getPosts('timestamp.seconds', 'all', allFeed, lastAll, setLastAll, setAllFeed, setAllLoadingDone, subjects, false)\n        getPosts('timestamp.seconds', 'home', homeFeed, lastHome, setLastHome, setHomeFeed, setHomeLoadingDone, subjects, false)\n        getPosts('timestamp.seconds', 'academic', academic, lastAcad, setLastAcad, setAcademic, setAcadLoadingDone, subjects, false)\n        getPosts('timestamp.seconds', 'bulletin', bulletin, lastBul, setLastBul, setBulletin, setBulLoadingDone, subjects, false)\n\n        console.log('subjects = ', subjects)\n    }\n\n    useEffect(() => {\n        var now = new Date();\n        var seconds = ((now.getTime()) * .001) >> 0;\n        setNowSeconds(seconds);\n\n        console.log(seconds)\n        //retrieves the most recent 10 posts\n\n\n\n        loadPosts()\n    }, [session, firebase])\n\n\n    //loading animation while retrieving feed\n    const feedLoadingView = () => {\n        return (\n            <div style={{ paddingTop: 15 }}>\n\n                <Card style={{ marginBottom: 20 }}>\n                    <Card.Body>\n                        <Card.Title></Card.Title>\n                        <Card.Text></Card.Text>\n                        <Spinner animation=\"border\" />\n                    </Card.Body>\n                </Card>\n                <Card style={{ marginBottom: 20 }}>\n                    <Card.Body>\n                        <Card.Title></Card.Title>\n                        <Card.Text></Card.Text>\n                        <Spinner animation=\"border\" />\n                    </Card.Body>\n                </Card>\n                <Card style={{ marginBottom: 20 }}>\n                    <Card.Body>\n                        <Card.Title></Card.Title>\n                        <Card.Text></Card.Text>\n                        <Spinner animation=\"border\" />\n                    </Card.Body>\n                </Card>\n                <Card style={{ marginBottom: 20 }}>\n                    <Card.Body>\n                        <Card.Title></Card.Title>\n                        <Card.Text></Card.Text>\n                        <Spinner animation=\"border\" />\n                    </Card.Body>\n                </Card>\n                <Card style={{ marginBottom: 20 }}>\n                    <Card.Body>\n                        <Card.Title></Card.Title>\n                        <Card.Text></Card.Text>\n                        <Spinner animation=\"border\" />\n                    </Card.Body>\n                </Card>\n            </div>\n\n        )\n    }\n\n\n    const sortButton = (category: string, categoryFeed: any[], feedSort: string, setLastFeed: any, setCategoryFeed: any, setFeedLoading: any, setFeedSort: any) => {\n        const handleSort = async (sortType: string) => {\n            setLastFeed(null)\n            setCategoryFeed([])\n            setFeedLoading(false)\n            await getPosts(sortType, category, categoryFeed, null, setLastFeed, setCategoryFeed, setFeedLoading, channels, true)\n            await setFeedSort(sortType)\n        }\n\n        return (\n            <DropdownButton id=\"sort\" title={feedSort == 'bounty' ? 'Highest Bounty' : 'timestamp.seconds' ? 'Most Recent' : 'Top Rated'} variant='light' style={{ paddingTop: 15 }}>\n                <Dropdown.Item active={feedSort == 'timestamp.seconds'}\n                    onClick={async () => {\n                        if (feedSort == 'timestamp.seconds') {\n                            return\n                        } else {\n                            handleSort('timestamp.seconds')\n                        }\n                    }}\n                >\n                    Most Recent\n                                        </Dropdown.Item>\n\n                <Dropdown.Item active={feedSort == 'bounty'}\n                    onClick={async () => {\n                        if (feedSort == 'bounty') {\n                            return\n                        } else {\n                            handleSort('bounty')\n                        }\n                    }}\n                >\n                    Highest Bounty\n                                        </Dropdown.Item>\n\n                <Dropdown.Item active={feedSort == 'upvotes'}\n                    onClick={() => {\n                        if (feedSort == 'upvotes') {\n                            return\n                        } else {\n                            handleSort('upvotes')\n                        }\n                    }}\n                >\n                    Top Rated\n                                        </Dropdown.Item>\n            </DropdownButton>\n        )\n    }\n\n    return (\n        <div>\n            <NavBar />\n            <Container className={styles.paddingTop}>\n                <Row>\n                    <Col>\n                        <h1 style={{ paddingLeft: 22, paddingBottom: 15 }}>Feed</h1>\n                    </Col>\n                    <Col>\n\n                    </Col>\n                </Row>\n                <Tabs defaultActiveKey={session.auth ? 'Home' : 'All'} id=\"feed-nav\">\n                    <Tab eventKey=\"All\" title=\"All\">\n                        {sortButton('all', allFeed, allSort, setLastAll, setAllFeed, setAllLoadingDone, setAllSort)}\n                        {\n\n                            allFeed[0] ?\n                                <div>\n                                    <FeedView feedList={allFeed} nowSeconds={nowSeconds} userDoc={userDoc} upvoted={upvoted} downvoted={downvoted} setUpvoted={setUpvoted} setDownvoted={setDownvoted} setChanged={setChanged} changed={changed} />\n                                    {allLoadingDone ?\n                                        <Button variant='light' onClick={() => {\n                                            setAllLoadingDone(false)\n                                            getPosts(allSort, 'all', allFeed, lastAll, setLastAll, setAllFeed, setAllLoadingDone, [], false)\n                                        }}>Load more</Button>\n                                        :\n                                        <Button disabled variant=\"light\">\n                                            <Spinner\n                                                as=\"span\"\n                                                animation=\"border\"\n                                                size=\"sm\"\n                                                role=\"status\"\n                                                aria-hidden=\"true\"\n                                            />\n                                        </Button>\n                                    }\n\n                                </div>\n\n                                :\n                                allLoadingDone ?\n                                    <Card style={{ marginTop: 15 }}>\n                                        <Card.Body>\n                                            <Card.Text>No new posts.</Card.Text>\n                                        </Card.Body>\n                                    </Card>\n                                    :\n                                    feedLoadingView()\n                        }\n\n                    </Tab>\n                    <Tab eventKey=\"Home\" title=\"Home\">\n                        {sortButton('home', homeFeed, homeSort, setLastHome, setHomeFeed, setHomeLoadingDone, setHomeSort)}\n                        {\n                            homeFeed[0] ?\n                                <div>\n                                    <FeedView feedList={homeFeed} nowSeconds={nowSeconds} userDoc={userDoc} upvoted={upvoted} downvoted={downvoted} setUpvoted={setUpvoted} setDownvoted={setDownvoted} setChanged={setChanged} changed={changed} />\n                                    {homeLoadingDone ?\n                                        <Button variant='light' onClick={() => {\n                                            setHomeLoadingDone(false)\n                                            getPosts(homeSort, 'home', homeFeed, lastHome, setLastHome, setHomeFeed, setHomeLoadingDone, channels, false)\n                                        }}>Load more</Button>\n                                        :\n                                        <Button disabled variant='light'>\n                                            <Spinner\n                                                as=\"span\"\n                                                animation=\"border\"\n                                                size=\"sm\"\n                                                role=\"status\"\n                                                aria-hidden=\"true\"\n                                            />\n                                        </Button>}\n\n                                </div>\n\n                                :\n                                homeLoadingDone ?\n                                    session.auth ?\n                                        <Card style={{ marginTop: 15 }}>\n                                            <Card.Body>\n                                                <Card.Text>No new posts. Subscribe to more channels in your Profile page!</Card.Text>\n                                            </Card.Body>\n                                        </Card>\n                                        :\n                                        <Card style={{ marginTop: 15 }}>\n                                            <Card.Body>\n                                                <Card.Text>Create an account to subscribe to specific channels.</Card.Text>\n                                            </Card.Body>\n                                        </Card>\n                                    :\n                                    feedLoadingView()\n                        }\n\n                    </Tab>\n                    <Tab eventKey=\"Academic\" title=\"Academic\">\n                        {sortButton('academic', academic, acadSort, setLastAcad, setAcademic, setAcadLoadingDone, setAcadSort)}\n                        {\n                            academic[0] ?\n                                <div>\n                                    <FeedView feedList={academic} nowSeconds={nowSeconds} userDoc={userDoc} upvoted={upvoted} downvoted={downvoted} setUpvoted={setUpvoted} setDownvoted={setDownvoted} setChanged={setChanged} changed={changed} />\n                                    {acadLoadingDone ?\n                                        <Button variant='light' onClick={() => {\n                                            setAcadLoadingDone(false)\n                                            getPosts(acadSort, 'academic', academic, lastAcad, setLastAcad, setAcademic, setAcadLoadingDone, channels, false)\n                                        }}>Load more</Button>\n                                        :\n                                        <Button disabled variant='light'>\n                                            <Spinner\n                                                as=\"span\"\n                                                animation=\"border\"\n                                                size=\"sm\"\n                                                role=\"status\"\n                                                aria-hidden=\"true\"\n                                            />\n                                        </Button>}\n\n                                </div>\n\n                                :\n                                acadLoadingDone ?\n                                    session.auth ?\n                                        <Card style={{ marginTop: 15 }}>\n                                            <Card.Body>\n                                                <Card.Text>Subscribe to channels in your Profile page.</Card.Text>\n                                            </Card.Body>\n                                        </Card>\n                                        :\n                                        <Card style={{ marginTop: 15 }}>\n                                            <Card.Body>\n                                                <Card.Text>Create an account to subscribe to specific channels.</Card.Text>\n                                            </Card.Body>\n                                        </Card>\n                                    :\n                                    feedLoadingView()\n                        }\n\n                    </Tab>\n                    <Tab eventKey=\"Bulletin\" title=\"Bulletin\">\n                        {sortButton('bulletin', bulletin, bulSort, setLastBul, setBulletin, setBulLoadingDone, setBulSort)}\n                        {\n                            bulletin[0] ?\n                                <div>\n                                    <FeedView feedList={bulletin} nowSeconds={nowSeconds} userDoc={userDoc} upvoted={upvoted} downvoted={downvoted} setUpvoted={setUpvoted} setDownvoted={setDownvoted} setChanged={setChanged} changed={changed} />\n                                    {bulLoadingDone ?\n                                        <Button variant='light' onClick={() => {\n                                            setBulLoadingDone(false)\n                                            getPosts(bulSort, 'bulletin', bulletin, lastBul, setLastBul, setBulletin, setBulLoadingDone, channels, false)\n                                        }}>Load more</Button>\n                                        :\n                                        <Button disabled variant='light'>\n                                            <Spinner\n                                                as=\"span\"\n                                                animation=\"border\"\n                                                size=\"sm\"\n                                                role=\"status\"\n                                                aria-hidden=\"true\"\n                                            />\n                                        </Button>\n                                    }\n\n                                </div>\n\n                                :\n                                bulLoadingDone ?\n                                    <Card style={{ marginTop: 15 }}>\n                                        <Card.Body>\n                                            <Card.Text>No new posts.</Card.Text>\n                                        </Card.Body>\n                                    </Card>\n                                    :\n                                    feedLoadingView()\n                        }\n\n                    </Tab>\n                </Tabs>\n            </Container>\n        </div>\n    )\n}\n\nexport { HomePage }\n","import React, { useState, useCallback, useEffect } from 'react'\nimport { useParams } from 'react-router-dom';\nimport { useFirebase, Firebase } from '../Firebase'\nimport { firestore } from 'firebase'\nimport { Navbar, Nav, Button, DropdownButton, Dropdown, Container, Row, Col, Spinner, Jumbotron, Image, ProgressBar, OverlayTrigger, Popover, Carousel, Card, Tabs, Tab, Modal } from 'react-bootstrap'\nimport { useSession } from '../Session'\nimport styles from './Profile.module.css'\nimport { StringLocale } from 'yup';\nimport { NavBar } from '../../constants'\nimport { FeedView } from '../../constants'\n\nimport { auth } from 'firebase'\n\nconst ProfilePage: React.FC = () => {\n    const { username } = useParams()\n    const firebase = useFirebase()\n    const session = useSession()\n\n    const [user, setUser] = useState<any>(null);\n    const [userid, setUserid] = useState<string>('')\n    const [userLoading, setUserLoading] = useState<boolean>(true);\n\n    const [userSelf, setUserSelf] = useState<boolean>(false);\n    const [userSelfDoc, setUserSelfDoc] = useState<any>(null);\n    const [upvoted, setUpvoted] = useState<string[]>([])\n    const [downvoted, setDownvoted] = useState<string[]>([])\n    const [editSubjects, setEditSubjects] = useState<boolean>(false);\n\n    const [changed, setChanged] = useState<boolean>(false);\n    const [lang, setLang] = useState<boolean>(false)\n    const [sci, setSci] = useState<boolean>(false)\n    const [ss, setSS] = useState<boolean>(false);\n\n    const [history, setHistory] = useState<any[] | null>(null);\n    const [commentHistory, setCommentHistory] = useState<any[] | null>(null);\n\n    const [historyDone, setHistoryDone] = useState<boolean>(false);\n    const [commentHistoryDone, setCommentHistoryDone] = useState<boolean>(false);\n\n    const [nowSeconds, setNowSeconds] = useState<number>(0);\n\n    const [lastPost, setLastPost] = useState<any>(null)\n    const [lastComment, setLastComment] = useState<any>(null)\n\n    const [sort, setSort] = useState<string>('timestamp.seconds')\n\n    const [verifyMessageModalShow, setVerifyMessageModalShow] = useState<boolean>(false);\n    const [sentEmail, setSentEmail] = useState<boolean>(false);\n\n\n    //list of subjects\n    const [actives, setActives] = useState<any>({});\n    const [trues, setTrues] = useState<number>(0);\n    const [activesErr, setActivesErr] = useState<string>('');\n\n    const sortButton = (collect: string, sort: string) => {\n        const handleSort = async (sort: string) => {\n            setLastPost(null)\n            if (collect === 'posts') {\n                setHistory(null)\n                setHistoryDone(false)\n            } else {\n                setCommentHistory(null)\n                setCommentHistoryDone(false)\n            }\n            await getPosts(collect, sort, userid, null, null)\n            setSort(sort)\n        }\n\n        return (\n            <DropdownButton id=\"sort\" title={sort == 'timestamp.seconds' ? 'Most Recent' : 'Top Rated'} variant='light' style={{ paddingTop: 15, paddingBottom: 15 }}>\n                <Dropdown.Item active={sort == 'timestamp.seconds'}\n                    onClick={async () => {\n                        if (sort == 'timestamp.seconds') {\n                            return\n                        } else {\n                            handleSort('timestamp.seconds')\n                            setChanged(!changed)\n                        }\n                    }}\n                >\n                    Most Recent\n                                        </Dropdown.Item>\n                <Dropdown.Item active={sort == 'upvotes'}\n                    onClick={async () => {\n                        if (sort == 'upvotes') {\n                            return\n                        } else {\n                            handleSort('upvotes')\n                            setChanged(!changed)\n                        }\n                    }}\n                >\n                    Top of All Time\n                                        </Dropdown.Item>\n\n            </DropdownButton>\n        )\n    }\n\n    const getPosts = async (collect: string, sort: string, userID: string, last: any | null, history: any[] | null) => {\n        try {\n            var docList: any[] = []\n            var query = firebase.db.collection(collect).where('author', '==', userID).orderBy(sort, \"desc\");\n\n            if (last) {\n                console.log('lastPost = ', last)\n                const lastTime = sort == 'timestamp.seconds' ? last.data.timestamp.seconds : last.data.upvotes\n\n                console.log('lastTime = ', lastTime)\n                query = query.startAfter(lastTime)\n            }\n\n            const posts = await query.limit(10).get()\n\n\n            if (posts.empty || posts == null) {\n                console.log('No matching documents')\n                setHistoryDone(true);\n                setCommentHistoryDone(true);\n                return;\n            }\n            posts.forEach(doc => {\n                docList = [...docList, { id: doc.id, data: doc.data() }];\n            });\n\n            const lastDoc = docList[docList.length - 1]\n\n            if (collect === 'posts') {\n                for (let i = 0; i < docList.length; i++) {\n                    const doc = docList[i]\n                    const numComments = await firebase.db.collection('comments').where('thread', '==', doc.id).get()\n                    docList[i] = { id: doc.id, data: doc.data, numComments: numComments.size }\n                }\n                setLastPost(lastDoc)\n                if (history) {\n                    await setHistory([...history, ...docList])\n                } else {\n                    await setHistory(docList)\n                }\n                console.log('docList = ', docList)\n                setHistoryDone(true)\n            } else {\n                setLastComment(lastDoc)\n                if (history) {\n                    await setCommentHistory([...history, ...docList])\n                } else {\n                    await setCommentHistory(docList)\n                }\n                console.log('docList = ', docList)\n                setCommentHistoryDone(true)\n            }\n\n\n        } catch (e) {\n            console.log(e)\n            setHistoryDone(true)\n            setCommentHistoryDone(true)\n        }\n    }\n\n    useEffect(() => {\n\n        var now = new Date();\n        var seconds = ((now.getTime()) * .001) >> 0;\n        setNowSeconds(seconds);\n\n        const getUser = async () => {\n            const results = await firestore().collection('users').where('username', '==', username).limit(1).get();\n            if (results.empty) {\n                console.log('empty');\n                setUserLoading(false);\n            } else {\n                let numTrues = 0;\n                const userID = await results.docs[0].id\n                setUserid(userID)\n                const userResults = await results.docs[0].data()\n                setUser(userResults)\n                setActives(userResults.actives)\n                for (let sub in userResults.actives) {\n                    if (userResults.actives[sub] === true) {\n                        numTrues += 1\n                    }\n                }\n                setTrues(numTrues);\n                console.log('numTrues = ', numTrues);\n\n                if (userResults.actives) {\n                    if (userResults.actives['French'] || userResults.actives['Mandarin'] || userResults.actives['Spanish'] || userResults.actives['Languages (General)']) {\n                        setLang(true)\n                    }\n\n                    if (userResults.actives['Biology'] || userResults.actives['Chemistry'] || userResults.actives['Physics'] || userResults.actives['Sciences (General)']) {\n                        setSci(true)\n                    }\n\n                    if (userResults.actives['Psychology'] || userResults.actives['Sociology'] || userResults.actives['Social Sciences (General)']) {\n                        setSS(true)\n                    }\n                }\n\n\n                getPosts('posts', 'timestamp.seconds', userID, lastPost, history);\n                getPosts('comments', 'timestamp.seconds', userID, lastComment, commentHistory);\n                setUserLoading(false);\n            }\n        }\n\n        getUser();\n\n        if (session.auth) {\n            const getSelf = async () => {\n                const self = await firestore().collection('users').doc(session?.auth?.uid).get()\n                if (self?.data()?.username == username) {\n                    setUserSelf(true);\n                }\n\n                setUserSelfDoc(self.data());\n                setUpvoted(self.data()?.upvoted)\n                setDownvoted(self.data()?.downvoted)\n\n            }\n\n\n            getSelf();\n        }\n\n    }, [session, firebase])\n\n    const subjectsView = () => {\n\n        const subjectObjects = Object.entries(actives).map(([keyName, keyIndex]) =>\n            // use keyName to get current key's name\n            // and a[keyName] to get its value\n            actives[keyName] ?\n                keyName == 'bulletin' ?\n                    <div key={keyName}></div>\n                    :\n                    <Button key={keyName} active variant='outline-dark' style={{ marginRight: 15, marginBottom: 15 }}>{keyName}</Button>\n                :\n                <div key={keyName}></div>\n\n        )\n\n        return (\n            <Row style={{ paddingTop: 15, paddingLeft: 15 }}>\n                {subjectObjects}\n            </Row>\n        )\n    }\n\n    const subjectEdit = (subject: string) => {\n        let activesEdit = actives;\n\n        if (actives[subject] == true) {\n            setActivesErr('');\n            activesEdit[subject] = false;\n            setTrues(trues - 1)\n            setActives(activesEdit)\n        } else {\n            if (trues >= 9) {\n                setActivesErr('Maximum 9 channels.')\n                return\n            }\n            activesEdit[subject] = true;\n            setTrues(trues + 1)\n            setActives(activesEdit);\n        }\n    }\n\n\n    const editSubjectsView = () => {\n\n        return (\n            <Row style={{ paddingTop: 15, paddingLeft: 15 }}>\n                <Button active={actives['Arts']} variant='outline-dark' style={{ marginRight: 15, marginBottom: 15 }}\n                    onClick={() => {\n                        subjectEdit('Arts')\n                        setChanged(!changed);\n                    }}\n                >\n                    Arts\n                </Button>\n                <Button active={actives['Business']} variant='outline-dark' style={{ marginRight: 15, marginBottom: 15 }}\n                    onClick={() => {\n                        subjectEdit('Business')\n                        setChanged(!changed);\n                    }}\n                >\n                    Business</Button>\n                <Button variant='outline-dark' active={actives['Computer Science']} style={{ marginRight: 15, marginBottom: 15 }}\n                    onClick={() => {\n                        subjectEdit('Computer Science')\n                        setChanged(!changed);\n                    }}\n                >\n                    Computer Science\n                </Button>\n                <Button variant='outline-dark' active={actives['Economics']} style={{ marginRight: 15, marginBottom: 15 }}\n                    onClick={() => {\n                        subjectEdit('Economics')\n                        setChanged(!changed);\n                    }}\n                >\n                    Economics</Button>\n                <Button variant='outline-dark' active={actives['Finance']} style={{ marginRight: 15, marginBottom: 15 }}\n                    onClick={() => {\n                        subjectEdit('Finance')\n                        setChanged(!changed);\n                    }}\n                >\n                    Finance</Button>\n                <Button variant='outline-dark' active={actives['History']} style={{ marginRight: 15, marginBottom: 15 }}\n                    onClick={() => {\n                        subjectEdit('History')\n                        setChanged(!changed);\n                    }}\n                >\n                    History</Button>\n                <Button variant='outline-dark' active={actives['Humanities']} style={{ marginRight: 15, marginBottom: 15 }}\n                    onClick={() => {\n                        subjectEdit('Humanities')\n                        setChanged(!changed);\n                    }}\n                >\n                    Humanities</Button>\n                <DropdownButton id=\"lang\" title=\"Languages\" variant={lang ? 'dark' : 'outline-dark'} style={{ marginRight: 15, marginBottom: 15 }}>\n                    <Dropdown.Item active={actives['French']} onClick={() => {\n                        subjectEdit('French')\n                        setChanged(!changed);\n                        if (actives['French'] || actives['Mandarin'] || actives['Spanish'] || actives['Languages (General)']) {\n                            setLang(true)\n                        } else {\n                            setLang(false)\n                        }\n                    }}>\n                        French\n                    </Dropdown.Item>\n                    <Dropdown.Item active={actives['Mandarin']} onClick={() => {\n                        subjectEdit('Mandarin')\n                        setChanged(!changed);\n                        if (actives['French'] || actives['Mandarin'] || actives['Spanish'] || actives['Languages (General)']) {\n                            setLang(true)\n                        } else {\n                            setLang(false)\n                        }\n                    }}>\n                        Mandarin\n                    </Dropdown.Item >\n                    <Dropdown.Item active={actives['Spanish']} onClick={() => {\n                        subjectEdit('Spanish')\n                        setChanged(!changed);\n                        if (actives['French'] || actives['Mandarin'] || actives['Spanish'] || actives['Languages (General)']) {\n                            setLang(true)\n                        } else {\n                            setLang(false)\n                        }\n                    }}>\n                        Spanish\n                    </Dropdown.Item>\n                    <Dropdown.Item active={actives['Languages (General)']} onClick={() => {\n                        subjectEdit('Languages (General)')\n                        setChanged(!changed);\n                        if (actives['French'] || actives['Mandarin'] || actives['Spanish'] || actives['Languages (General)']) {\n                            setLang(true)\n                        } else {\n                            setLang(false)\n                        }\n                    }}>\n                        General\n                    </Dropdown.Item>\n                </DropdownButton>\n                <Button variant='outline-dark' style={{ marginRight: 15, marginBottom: 15 }} active={actives['Mathematics']} onClick={() => {\n                    subjectEdit('Mathematics')\n                    setChanged(!changed);\n                }}>\n                    Mathematics\n                </Button>\n                <DropdownButton id=\"sci\" title=\"Sciences\" variant={sci ? 'dark' : 'outline-dark'} style={{ marginRight: 15, marginBottom: 15 }}>\n                    <Dropdown.Item active={actives['Biology']} onClick={() => {\n                        subjectEdit('Biology')\n                        setChanged(!changed);\n                        if (actives['Biology'] || actives['Chemistry'] || actives['Physics'] || actives['Sciences (General)']) {\n                            setSci(true)\n                        } else {\n                            setSci(false)\n                        }\n                    }}>\n                        Biology\n                    </Dropdown.Item>\n                    <Dropdown.Item active={actives['Chemistry']} onClick={() => {\n                        subjectEdit('Chemistry')\n                        setChanged(!changed);\n                        if (actives['Biology'] || actives['Chemistry'] || actives['Physics'] || actives['Sciences (General)']) {\n                            setSci(true)\n                        } else {\n                            setSci(false)\n                        }\n                    }}>\n                        Chemistry\n                    </Dropdown.Item>\n                    <Dropdown.Item active={actives['Physics']} onClick={() => {\n                        subjectEdit('Physics')\n                        setChanged(!changed);\n                        if (actives['Biology'] || actives['Chemistry'] || actives['Physics'] || actives['Sciences (General)']) {\n                            setSci(true)\n                        } else {\n                            setSci(false)\n                        }\n                    }}>\n                        Physics\n                    </Dropdown.Item>\n                    <Dropdown.Item active={actives['Sciences (General)']} onClick={() => {\n                        subjectEdit('Sciences (General)')\n                        setChanged(!changed);\n                        if (actives['Biology'] || actives['Chemistry'] || actives['Physics'] || actives['Sciences (General)']) {\n                            setSci(true)\n                        } else {\n                            setSci(false)\n                        }\n                    }}>\n                        General\n                    </Dropdown.Item>\n                </DropdownButton>\n                <DropdownButton id=\"lang\" title=\"Social Sciences\" variant={ss ? 'dark' : 'outline-dark'} style={{ marginRight: 15, marginBottom: 15 }} >\n                    <Dropdown.Item active={actives['Psychology']} onClick={() => {\n                        subjectEdit('Psychology')\n                        setChanged(!changed);\n                        if (actives['Psychology'] || actives['Sociology'] || actives['Social Sciences (General)']) {\n                            setSS(true)\n                        } else {\n                            setSS(false)\n                        }\n                    }}>\n                        Psychology\n                    </Dropdown.Item>\n                    <Dropdown.Item active={actives['Sociology']} onClick={() => {\n                        subjectEdit('Sociology')\n                        setChanged(!changed);\n                        if (actives['Psychology'] || actives['Sociology'] || actives['Social Sciences (General)']) {\n                            setSS(true)\n                        } else {\n                            setSS(false)\n                        }\n                    }}>\n                        Sociology\n                    </Dropdown.Item>\n                    <Dropdown.Item active={actives['Social Sciences (General)']} onClick={() => {\n                        subjectEdit('Social Sciences (General)')\n                        setChanged(!changed);\n                        if (actives['Psychology'] || actives['Sociology'] || actives['Social Sciences (General)']) {\n                            setSS(true)\n                        } else {\n                            setSS(false)\n                        }\n                    }}>\n                        General\n                    </Dropdown.Item>\n                </DropdownButton>\n                <Button variant='outline-dark' style={{ marginRight: 15, marginBottom: 15 }} active={actives['General']} onClick={() => {\n                    subjectEdit('General')\n                    setChanged(!changed);\n                }}>General</Button>\n            </Row>\n        )\n    }\n\n\n    return (\n        <div>\n            <NavBar />\n            <Modal show={verifyMessageModalShow} onHide={() => {\n                setVerifyMessageModalShow(false)\n                setSentEmail(false)\n            }}>\n                <Modal.Header closeButton>\n                    <Modal.Title>\n                        Verify your email\n                        </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    Check your email for a verification link. You cannot post without having verified your email, and your account will be deleted in 3 days without verification.\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button disabled={sentEmail} onClick={() => { if (userSelf) { auth().currentUser?.sendEmailVerification().then(() => setSentEmail(true)) } }}>{sentEmail ? 'Sent!' : 'Resend Email'}</Button>\n                </Modal.Footer>\n            </Modal>\n            {userLoading ?\n                <Container className={styles.paddingTop}>\n                    <Spinner style={{ marginTop: 30, marginLeft: 30 }} animation=\"border\" />\n                </Container>\n                :\n                user ?\n                    <Container className={styles.paddingTop}>\n                        <Card>\n                            <Card.Body>\n                                <Row>\n                                    <Col>\n                                        <h2>@{username}</h2>\n                                        <h2>{user.name}</h2>\n                                    </Col>\n                                    <Col>\n                                        {user.credits == 1 ?\n                                            <h3>1 credit</h3>\n                                            :\n                                            <h3>{user.credits} credits</h3>\n                                        }\n                                        {userSelf ?\n                                            auth().currentUser?.emailVerified ?\n                                                <div></div>\n                                                :\n                                                <Button variant='warning' onClick={() => { setVerifyMessageModalShow(true) }}>Verify Email</Button>\n                                            :\n                                            <div></div>\n                                        }\n                                    </Col>\n                                </Row>\n\n\n                                <hr></hr>\n\n                                <Row style={{ paddingLeft: 15 }}>\n                                    <h3 style={{ paddingRight: 15 }}>Channels</h3>\n                                    {userSelf ?\n                                        editSubjects ?\n                                            <div>\n                                                <Button variant=\"primary\" onClick={async () => {\n                                                    setEditSubjects(false)\n                                                    await firestore().collection('users').doc(session.auth?.uid).update({ actives: actives })\n\n                                                }}>Save</Button>\n                                                <p className=\"text-danger\">{activesErr}</p>\n                                            </div>\n                                            :\n                                            <Button variant=\"outline-dark\" onClick={() => { setEditSubjects(true) }}>Edit</Button>\n                                        :\n                                        <div></div>\n                                    }\n                                </Row>\n                                {\n                                    editSubjects ?\n                                        editSubjectsView()\n                                        :\n                                        actives ?\n                                            subjectsView()\n                                            :\n                                            <div></div>\n                                }\n                            </Card.Body>\n\n                        </Card>\n\n                        <h2 style={{ paddingTop: 50, paddingLeft: 22, paddingBottom: 15 }}> History</h2>\n\n                        <Tabs defaultActiveKey={'Comments'} id=\"feed-nav\">\n                            <Tab eventKey=\"Posts\" title=\"Posts\">\n                                {sortButton('posts', sort)}\n                                {history\n                                    ?\n                                    <div>\n\n                                        <FeedView feedList={history} nowSeconds={nowSeconds} userDoc={userSelfDoc} upvoted={upvoted} downvoted={downvoted} setUpvoted={setUpvoted} setDownvoted={setDownvoted} setChanged={setChanged} changed={changed} />\n                                        <Button variant='light' onClick={() => { getPosts('posts', sort, userid, lastPost, history) }}>Load more</Button>\n                                    </div>\n                                    :\n                                    historyDone ?\n                                        <h3 style={{ paddingTop: 15 }}>No posts.</h3>\n                                        :\n                                        <div style={{ marginTop: 15 }}>\n                                            <Spinner style={{ marginTop: 30, marginLeft: 30 }} animation=\"border\" />\n                                        </div>\n\n                                }\n                            </Tab>\n                            <Tab eventKey=\"Comments\" title=\"Comments\">\n                                {sortButton('comments', sort)}\n                                {commentHistory\n                                    ?\n                                    <div>\n\n                                        <FeedView feedList={commentHistory} nowSeconds={nowSeconds} userDoc={userSelfDoc} upvoted={upvoted} downvoted={downvoted} setUpvoted={setUpvoted} setDownvoted={setDownvoted} setChanged={setChanged} changed={changed} commentCard={true} />\n                                        <Button variant='light' onClick={() => { getPosts('comments', sort, userid, lastComment, commentHistory) }}>Load more</Button>\n                                    </div>\n                                    :\n                                    commentHistoryDone ?\n                                        <h3 style={{ paddingTop: 15 }}>No posts.</h3>\n                                        :\n                                        <div style={{ marginTop: 15 }}>\n                                            <Spinner style={{ marginTop: 30, marginLeft: 30 }} animation=\"border\" />\n                                        </div>\n                                }\n                            </Tab>\n                        </Tabs>\n\n\n                    </Container>\n                    :\n                    <Container className={styles.paddingTop}>\n                        <h1>User does not exist.</h1>\n                    </Container>\n            }\n\n\n\n        </div>\n    )\n}\n\nexport { ProfilePage }\n","import React, { useState, useEffect } from 'react'\nimport { useParams } from 'react-router-dom';\nimport { useFirebase, Firebase } from '../Firebase'\nimport { functions, auth, firestore } from 'firebase'\nimport { Navbar, Nav, Button, ButtonGroup, Container, Row, Col, Spinner, Jumbotron, Image, ProgressBar, OverlayTrigger, Popover, Carousel, Card, Form, Modal, InputGroup, FormControl } from 'react-bootstrap'\nimport { useSession } from '../Session'\nimport styles from './Question.module.css'\nimport { NavBar } from '../../constants'\n\nconst QuestionPage: React.FC = (props) => {\n    const firebase = useFirebase()\n    const session = useSession()\n\n    const { postid } = useParams()\n\n    const [self, setSelf] = useState<any>(null);\n    const [post, setPost] = useState<any>(null);\n    const [postSelf, setPostSelf] = useState<boolean>(false);\n\n    const [answer, setAnswer] = useState<string>(\"\")\n    const [comments, setComments] = useState<any[] | undefined>(undefined)\n    const [numComments, setNumComments] = useState<number>(0);\n\n    const [activeAnswer, setActiveAnswer] = useState<boolean>(false);\n\n    const [loadingDone, setLoadingDone] = useState<boolean>(false);\n    const [commentsDone, setCommentsDone] = useState<boolean>(false);\n\n    const [handling, setHandling] = useState<boolean>(false);\n\n    const [nowSeconds, setNowSeconds] = useState<number>(0);\n\n    const [timeMessage, setTimeMessage] = useState<string>('')\n\n    const [reply, setReply] = useState<string>('')\n    const [replyText, setReplyText] = useState<string>('')\n    const [replyHandling, setReplyHandling] = useState<boolean>(false);\n\n    const [changed, setChanged] = useState<boolean>(false);\n\n    const [upvoted, setUpvoted] = useState<string[]>([])\n    const [downvoted, setDownvoted] = useState<string[]>([])\n\n    const [awardModalShow, setAwardModalShow] = useState<boolean>(false)\n    const [award, setAward] = useState<number>(0)\n    const [awardCheck, setAwardCheck] = useState<boolean>(false)\n    const [awardHandling, setAwardHandling] = useState<boolean>(false)\n    const [err, setErr] = useState<string>('')\n\n    const [reportMessage, setReportMessage] = useState<string>('')\n    const [reportAuthorName, setReportAuthorName] = useState<string>('')\n    const [reportID, setReportID] = useState<string>('')\n    const [reportHandling, setReportHandling] = useState<boolean>(false)\n    const [reportDone, setReportDone] = useState<boolean>(false);\n\n    const [reportModalShow, setReportModalShow] = useState<boolean>(false)\n\n    const [deleteModalShow, setDeleteModalShow] = useState<boolean>(false)\n\n    const [commentAuthorName, setCommentAuthorName] = useState<string>('')\n    const [commentAuthor, setCommentAuthor] = useState<string>('')\n    const [commentID, setCommentID] = useState<string>('')\n\n    const [deleteCollection, setDeleteCollection] = useState<string>('')\n    const [deleteID, setDeleteID] = useState<string>('')\n    const [numReplies, setNumReplies] = useState<number>(0)\n    const [deleteSelected, setDeleteSelected] = useState<number>(0)\n    const [deleteHandling, setDeleteHandling] = useState<boolean>(false)\n\n    const [editCollection, setEditCollection] = useState<string>('')\n    const [editID, setEditID] = useState<string>('')\n    const [fullEdit, setFullEdit] = useState<boolean>(false);\n    const [editText, setEditText] = useState<string>('')\n    const [readOnlyText, setReadOnlyText] = useState<string>('')\n    const [editHandling, setEditHandling] = useState<boolean>(false);\n    const [editModalShow, setEditModalShow] = useState<boolean>(false);\n\n    const [editTitle, setEditTitle] = useState<string>('')\n    const [editBounty, setEditBounty] = useState<number>(0)\n    const [editBountyCheck, setEditBountyCheck] = useState<boolean>(true);\n\n    const [bountyErr, setBountyErr] = useState<string>('')\n    const [titleErr, setTitleErr] = useState<string>('')\n\n    const getComments = async (id: string) => {\n        try {\n            var docList: any[] = []\n            const commentsList = await firebase.db.collection('comments').where('parent', '==', id).orderBy('upvotes', 'desc').limit(10).get()\n\n            console.log('commentsList = ', commentsList)\n            if (commentsList.empty || commentsList == null) {\n                console.log('No matching documents')\n                setCommentsDone(true)\n                return;\n            }\n\n            commentsList.forEach(doc => {\n                docList = [...docList, { id: doc.id, data: doc.data() }];\n            });\n\n            for (let i = 0; i < docList.length; i++) {\n                const doc = docList[i]\n                const replies = await getComments(doc.id)\n                docList[i] = { id: doc.id, data: doc.data, replies: replies }\n            }\n\n            return (docList)\n\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n    const handleAwardChange = (event: any) => {\n        const check = /^[0-9\\b]+$/;\n        setAward(event.target.value);\n        if (event.target.value.match(check)) {\n            setAwardCheck(true);\n            console.log('passCheck')\n        } else {\n            setAwardCheck(false);\n            console.log('failCheck')\n        }\n    }\n\n    const handleVote = (upvoteTrue: boolean, object: any) => {\n        var collect = 'comments'\n        if (object == post) {\n            const newObject = { data: post, id: postid }\n            object = newObject\n            collect = 'posts'\n        }\n        var upvoteList: string[] = []\n        var downvoteList: string[] = []\n        var upvoteIndex = -1\n        var downvoteIndex = -1\n        console.log('userDoc = ', self)\n        if (self.upvoted) {\n            upvoteList = upvoted\n            upvoteIndex = upvoteList.indexOf(object.id)\n        }\n        if (self.downvoted) {\n            downvoteList = downvoted\n            downvoteIndex = downvoteList.indexOf(object.id)\n        }\n\n        console.log('upvoteIndex = ', upvoteIndex)\n\n        console.log('upvoteList = ', upvoteList)\n\n        console.log('downvoteIndex = ', downvoteIndex)\n\n        console.log('downvoteList = ', downvoteList)\n\n        var upvotes: number;\n        if (object.data.upvotes) {\n            upvotes = object.data.upvotes\n        } else {\n            upvotes = 0\n        }\n\n        if (upvoteTrue) {\n\n            if (upvoteIndex == -1) {\n                if (downvoteIndex != -1) {\n                    downvoteList.splice(downvoteIndex, 1)\n                    firebase.db.collection('users').doc(session.auth?.uid).update({ downvoted: downvoteList })\n                    upvotes = upvotes + 1\n                }\n                upvoteList = [...upvoteList, object.id]\n                console.log('upvoteList after adding = ', upvoteList)\n                upvotes = upvotes + 1\n\n            } else {\n                upvoteList.splice(upvoteIndex, 1)\n                console.log('upvoteList after splice = ', upvoteList)\n                upvotes = upvotes - 1\n            }\n            firebase.db.collection('users').doc(session.auth?.uid).update({ upvoted: upvoteList })\n\n            firebase.db.collection(collect).doc(object.id).update({ upvotes: upvotes })\n            object.data.upvotes = upvotes;\n        } else {\n            if (downvoteIndex == -1) {\n                if (upvoteIndex != -1) {\n                    upvoteList.splice(upvoteIndex, 1)\n                    firebase.db.collection('users').doc(session.auth?.uid).update({ upvoted: upvoteList })\n                    upvotes = upvotes - 1\n                }\n                downvoteList = [...downvoteList, object.id]\n                console.log('downvoteList after adding = ', downvoteList)\n                upvotes = upvotes - 1\n            } else {\n                downvoteList.splice(downvoteIndex, 1)\n                console.log('downvoteList after splice = ', downvoteList)\n                upvotes = upvotes + 1\n            }\n\n\n            firebase.db.collection('users').doc(session.auth?.uid).update({ downvoted: downvoteList })\n            firebase.db.collection(collect).doc(object.id).update({ upvotes: upvotes })\n            object.data.upvotes = upvotes;\n        }\n\n\n        if (upvoteList) {\n            setUpvoted(upvoteList)\n        }\n        if (downvoteList) {\n            setDownvoted(downvoteList)\n        }\n    }\n\n    useEffect(() => {\n\n        const setAllComments = async () => {\n            const allComments = await firebase.db.collection('comments').where('thread', '==', postid).get()\n            setNumComments(allComments.size)\n        }\n\n        setAllComments()\n\n        var now = new Date();\n        var seconds = ((now.getTime()) * .001) >> 0;\n        setNowSeconds(seconds);\n\n        if (session.auth) {\n            const getSelf = async () => {\n                const selfDoc = await (await firestore().collection('users').doc(session.auth?.uid).get()).data()\n                setSelf(selfDoc)\n                if (selfDoc?.upvoted) {\n                    setUpvoted(selfDoc?.upvoted)\n                }\n                if (selfDoc?.downvoted) {\n                    setDownvoted(selfDoc?.downvoted)\n                }\n            }\n            getSelf();\n        }\n\n\n        const getPost = async () => {\n            try {\n                const postDoc = await (await firestore().collection('posts').doc(postid).get()).data()\n                console.log('postDoc = ', postDoc)\n\n                if (postDoc) {\n                    var time = seconds - postDoc?.timestamp.seconds;\n                    console.log('time = ', time)\n                    var message = ''\n                    if (time < 120) {\n                        message = 'about a minute ago'\n                    } else if (time < 3600) {\n                        message = `${Math.floor(time / 60)} minutes ago`\n                    } else if (time < 86400) {\n                        let curTime = Math.floor(time / 3600)\n                        if (curTime == 1) {\n                            message = 'about an hour ago'\n                        } else {\n                            message = `${curTime} hours ago`\n                        }\n                    } else {\n                        let curTime = Math.floor(time / 86400)\n                        if (curTime == 1) {\n                            message = 'yesterday'\n                        } else {\n                            message = `${curTime} days ago`\n                        }\n                    }\n\n                    setTimeMessage(message)\n                }\n\n                setPost(postDoc)\n                if (postDoc?.author == session?.auth?.uid) {\n                    setPostSelf(true)\n                }\n                const commentsTest = await getComments(postid);\n                console.log(commentsTest)\n                setComments(commentsTest)\n                setCommentsDone(true);\n                setLoadingDone(true)\n            } catch (e) {\n                console.log(e)\n                setLoadingDone(true)\n            }\n\n        }\n\n        getPost();\n    }, [session, firebase])\n\n\n    const handleAnswerChange = (event: any) => {\n        setAnswer(event.target.value)\n    }\n\n    const handleReplyChange = (event: any) => {\n        setReplyText(event.target.value)\n    }\n\n    const handleReplySubmit = async (event: any) => {\n        event.preventDefault()\n        setReplyHandling(true);\n        console.log(replyText)\n        const newReply = { comment: replyText, parent: reply, thread: postid, timestamp: firestore.Timestamp.now(), author: session?.auth?.uid, authorName: self.username, upvotes: 0, selected: 0, edit: '' }\n        await functions().httpsCallable('createComment')(newReply).then(async () => {\n            setComments(await getComments(postid))\n            setNumComments(numComments + 1)\n            setCommentsDone(true);\n            setReplyHandling(false);\n            setReply('');\n        })\n    }\n\n    const handleSubmit = async (event: any) => {\n        event.preventDefault()\n        setHandling(true);\n        console.log(answer)\n        const newComment = { comment: answer, parent: postid, thread: postid, timestamp: firestore.Timestamp.now(), author: session?.auth?.uid, authorName: self.username, upvotes: 0, selected: 0 }\n        await functions().httpsCallable('createComment')(newComment).then(async () => {\n            setComments(await getComments(postid))\n            setNumComments(numComments + 1)\n            setCommentsDone(true);\n            setHandling(false);\n            setActiveAnswer(false);\n        })\n    }\n\n    const handleReportChange = (event: any) => {\n        setReportMessage(event.target.value);\n    }\n\n    const handleTitleChange = (event: any) => {\n        setEditTitle(event.target.value)\n        if (event.target.value.length <= 0) {\n            setTitleErr('Title Required.')\n        } else {\n            setTitleErr('')\n        }\n    }\n\n    const handleBountyChange = (event: any) => {\n        const check = /^[0-9\\b]+$/;\n        setEditBounty(event.target.value);\n        if (event.target.value.match(check) && Number(event.target.value) >= Number(post.bounty)) {\n            setEditBountyCheck(true);\n            setBountyErr('')\n            console.log('passCheck')\n        } else {\n            setEditBountyCheck(false);\n            setBountyErr('Cannot decrease bounty.')\n            console.log('failCheck')\n        }\n    }\n\n    const handleEditChange = (event: any) => {\n        setEditText(event.target.value)\n    }\n\n    /*\n    <Button variant=\"primary\" size=\"sm\" onClick={() => { functions().httpsCallable('chooseAwardCredits')({ author: object.data.author, bounty: post.bounty, post: postid, comment: object.id }) }}>Award</Button>\n    */\n    //a feed object\n    const feedCard = (object: { id: string; data: { comment: string; timestamp: { seconds: number, nanoseconds: number }; author: string; authorName: string; parent: string; thread: string; upvotes: number; selected: number; edit: string }; replies: any[] }) => {\n        var time = nowSeconds - object.data.timestamp.seconds;\n        var message = ''\n        if (time < 120) {\n            message = 'about a minute ago'\n        } else if (time < 3600) {\n            message = `${Math.floor(time / 60)} minutes ago`\n        } else if (time < 86400) {\n            let curTime = Math.floor(time / 3600)\n            if (curTime == 1) {\n                message = 'about an hour ago'\n            } else {\n                message = `${curTime} hours ago`\n            }\n        } else {\n            let curTime = Math.floor(time / 86400)\n            if (curTime == 1) {\n                message = 'yesterday'\n            } else {\n                message = `${curTime} days ago`\n            }\n        }\n\n\n        return (\n\n            <div className={styles.borderLeft} style={{ marginBottom: 10, paddingLeft: 10, paddingTop: 10 }}>\n                \n                {object.data.selected > 0 ?\n                    <Row>\n                        <Col>\n                            <p style={{ fontSize: 20 }}>{`@${object.data.authorName}`}</p>\n                            <p className={styles.fontLess}> {object.data.comment}</p>\n                            <p className={styles.fontLess}> {object.data.edit}</p>\n                        </Col>\n                        <Col xs={3} md={2}>\n                            <Button variant=\"success\" size=\"sm\">{object.data.selected} cr.</Button>\n                        </Col>\n                    </Row>\n                    :\n                    postSelf ?\n                        object.data.author !== session.auth?.uid ?\n                        <Row>\n                            <Col>\n                                <p style={{ fontSize: 20 }}>{`@${object.data.authorName}`}</p>\n                                <p className={styles.fontLess}> {object.data.comment}</p>\n                                <p className={styles.fontLess}> {object.data.edit}</p>\n                            </Col>\n                            <Col xs={3} md={2}>\n                                <Button variant=\"primary\" size=\"sm\" onClick={() => { \n                                    setCommentAuthorName(object.data.authorName)\n                                    setCommentAuthor(object.data.author)\n                                    setCommentID(object.id)\n                                    setAwardModalShow(true) }}>Award</Button>\n                            </Col>\n                        </Row>\n                        :\n                            <div>\n                                <p style={{ fontSize: 20 }}>{`@${object.data.authorName}`}</p>\n                                <p className={styles.fontLess}> {object.data.comment}</p>\n                                <p className={styles.fontLess}> {object.data.edit}</p>\n                            </div>\n                        :\n                        <div>\n                            <p style={{ fontSize: 20 }}>{`@${object.data.authorName}`}</p>\n                            <p className={styles.fontLess}> {object.data.comment}</p>\n                            <p className={styles.fontLess}> {object.data.edit}</p>\n                        </div>\n\n                }\n\n\n\n                <p className={styles.fontLess}>\n                    <Button disabled={!session.auth} active={upvoted.includes(object.id)} size=\"sm\" variant=\"outline-dark\" onClick={() => {\n                        handleVote(true, object)\n                        setChanged(!changed)\n                    }}>\n                        ▲\n                    </Button>\n                    {' '}\n                    &nbsp;\n                    {object?.data?.upvotes ?\n                        object.data.upvotes\n                        :\n                        0\n                    }\n                    {' '}\n                    &nbsp;\n                    <Button disabled={!session.auth} active={downvoted.includes(object.id)} size=\"sm\" variant=\"outline-dark\" onClick={() => {\n                        handleVote(false, object)\n                        setChanged(!changed)\n                    }}>▼</Button>\n                    {' - '}\n                        <Button disabled={auth().currentUser?.emailVerified === false} variant=\"light\" size=\"sm\" onClick={() => { setReply(object.id) }}>Reply</Button>\n                    \n                    {' '} - {message}\n                    {' - '}\n                    &nbsp;\n                    <Button style={{marginTop: 8}} disabled={!session.auth} size=\"sm\" variant='outline-danger' onClick={() => {\n                        setReportAuthorName(object.data.authorName)\n                        setReportID(object.id)\n                        setReportModalShow(true)\n                    }}>\n                        ⚐\n                    </Button>\n                    &nbsp;\n                    &nbsp;\n                    {object.data.author == session.auth?.uid ?\n                        <Button size=\"sm\" style={{ marginTop: 8 }} variant='outline-success' onClick={() => {\n                            let replies = 0;\n                            if (object.replies && object.replies.length > 0) {\n                                replies = object.replies.length\n                            }\n                            setEditCollection('comments')\n                            setEditID(object.id)\n                            if (replies == 0 && object.data.selected == 0) {\n                                setFullEdit(true)\n                                setEditText(object.data.comment)\n                            } else {\n                                setFullEdit(false)\n                                setReadOnlyText(object.data.comment)\n                                if (object.data.edit.length > 0) {\n                                    setEditText(object.data.edit)\n                                } else {\n                                    setEditText('EDIT: ')\n                                }\n                            }\n\n                            setEditModalShow(true)\n                        }}>Edit</Button>\n                        :\n                        ''}\n&nbsp;\n                    &nbsp;\n                    {object.data.author == session.auth?.uid && object.data.selected == 0 ?\n                        <Button size=\"sm\" style={{marginTop: 8}} variant='outline-danger' onClick={() => { \n                            let replies = 0;\n                            if (object.replies && object.replies.length > 0) {\n                                replies = object.replies.length\n                            }\n                            setDeleteCollection('comments')\n                            setDeleteID(object.id)\n                            setNumReplies(replies)\n                            setDeleteSelected(object.data.selected)\n                            setDeleteModalShow(true) }}>Delete</Button>\n                    :\n                    ''}\n                    \n                    \n                </p>\n\n\n\n                {reply == object.id ?\n                    <Card>\n                        <Card.Body>\n                            <Form onSubmit={handleReplySubmit}>\n\n                                <Form.Group controlId=\"description\">\n                                    <Form.Control required as=\"textarea\" rows={3} placeholder={`Replying to @${object.data.authorName}...`} onChange={handleReplyChange} />\n                                </Form.Group>\n\n                                {replyHandling ?\n                                    <Button variant=\"primary\" style={{ marginTop: 15 }}>\n                                        <Spinner\n                                            as=\"span\"\n                                            animation=\"border\"\n                                            size=\"sm\"\n                                            role=\"status\"\n                                            aria-hidden=\"true\"\n                                        />\n                                    </Button>\n                                    :\n                                    <Button variant=\"primary\" type=\"submit\" style={{ marginTop: 15 }}>\n                                        Reply\n                                        </Button>\n                                }\n\n                            </Form>\n                        </Card.Body>\n                    </Card>\n                    :\n                    <div></div>\n                }\n                {object.replies && object.replies.length > 0 ?\n                    feedView(object.replies)\n                    :\n                    <div></div>}\n\n            </div>\n\n            //\n        )\n    }\n\n    //list of feed objects\n    const feedView = (feedList: { id: string; data: { comment: string; timestamp: { seconds: number; nanoseconds: number }; author: string; authorName: string; parent: string; thread: string; upvotes: number; selected: number; edit: string }; replies: any[] }[]) => {\n        const feedItems = feedList.map((object: { id: string; data: { comment: string; timestamp: { seconds: number, nanoseconds: number }; author: string; authorName: string; parent: string; thread: string; upvotes: number; selected: number; edit: string }; replies: any[] }) => <div key={object.id} style={{ paddingTop: 15 }}>{feedCard(object)}</div>\n        )\n        return feedItems\n    }\n\n    const channelView = (post: any) => {\n        const subjectObjects = post.channels?.map((d: string) => <p key={d}>{(post.channels.indexOf(d) == 0) ? `#${d}` : `, #${d}`}</p>)\n        return (\n            <div>\n                <Row style={{ marginLeft: 1 }}>{subjectObjects}</Row>\n\n            </div>\n        )\n    }\n\n    //console.log(\"Object.values(item) = \", Object.values(comments))\n\n    return (\n        <div>\n            <NavBar />\n                <Modal show={awardModalShow} onHide={() => { setAwardModalShow(false) }}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Award @{commentAuthorName}!</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        Awards cannot be taken back once submitted.\n                        \n                    </Modal.Body>\n                    <Modal.Footer>\n                        <InputGroup>\n                            <Form.Control placeholder=\"How many credits?\" onChange={handleAwardChange} value={award} />\n                            <Form.Text>{err}</Form.Text>\n                        </InputGroup>\n                        {awardHandling ? \n                            <Button disabled>\n                                <Spinner\n                                as=\"span\"\n                                animation=\"border\"\n                                size=\"sm\"\n                                role=\"status\"\n                                aria-hidden=\"true\"\n                            />\n                            </Button>\n                            :\n                            <Button onClick={() => {\n                                console.log('award = ', award)\n                                if (award > Number(post.bounty) + Number(self.credits)) {\n                                    setErr(`You have ${Number(post.bounty) + Number(self.credits)} credits to give.`)\n                                } else if (awardCheck == false || award < 1) {\n                                    setErr(`Input at least 1 credit.`)\n                                } else {\n                                    setAwardHandling(true)\n                                    functions().httpsCallable('chooseAwardCredits')({ author: commentAuthor, bounty: Number(post.bounty), post: postid, comment: commentID, award: Number(award) }).then(() => {\n                                        setAwardModalShow(false)\n                                        window.location.reload()\n                                    })\n                                }\n                            }}>Award</Button>\n                            }\n                        \n                    </Modal.Footer>\n                </Modal>\n\n                <Modal show={deleteModalShow} onHide={() => {\n                    setDeleteModalShow(false)\n                }}>\n                    <Modal.Header>\n                        <Modal.Title>Delete</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        Are you sure you want to delete this post?\n                    </Modal.Body>\n                    <Modal.Footer>\n                        {\n                            deleteHandling ?\n                            <Button disabled variant=\"danger\">\n                                <Spinner\n                                    as=\"span\"\n                                    animation=\"border\"\n                                    size=\"sm\"\n                                    role=\"status\"\n                                    aria-hidden=\"true\"\n                                />\n                            </Button>\n                            :\n                            <Button variant=\"danger\" onClick={() => {\n                                setDeleteHandling(true)\n                                if (deleteCollection === 'posts') {\n                                    functions().httpsCallable('deletePost')({ collect: 'posts', id: postid, numReplies: Number(numComments), awarded: post.awarded, bounty: post.bounty }).then(() => {\n                                        window.location.reload()\n                                    })\n                                } else {\n                                    functions().httpsCallable('deletePost')({ collect: deleteCollection, id: deleteID, numReplies: Number(numReplies), awarded: Number(deleteSelected) }).then(async () => {\n                                        setDeleteModalShow(false)\n                                        setComments(await getComments(postid))\n                                        setNumComments(numComments - 1)\n                                        setCommentsDone(true);\n                                        setDeleteHandling(false);\n                                    })\n                                }\n\n                            }}\n                            >Confirm</Button>\n                        }\n                        \n                    </Modal.Footer>\n                </Modal>\n\n            <Modal show={editModalShow} onHide={() => {\n                setEditModalShow(false)\n            }}>\n                <Modal.Header>\n                    <Modal.Title>Edit</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    {fullEdit ?\n                    <InputGroup>\n                    {editCollection === 'posts' ?\n                    <div>\n                                    <p style={{marginBottom: 10}}>Edit Title</p>\n                                    <Form.Text className='text-danger'>{titleErr}</Form.Text>\n                                    <Form.Control style={{ marginBottom: 20 }}onChange={handleTitleChange} value={editTitle} />\n                                    <p style={{ marginBottom: 10 }}>Edit Description</p>\n                                    <Form.Control style={{ marginBottom: 20 }} as=\"textarea\" rows={3} onChange={handleEditChange} value={editText} />\n                                    <p style={{ marginBottom: 10 }}>Edit Bounty</p>\n                                    <Form.Control onChange={handleBountyChange} value={editBounty} />\n\n                                    <Form.Text className='text-danger'>{bountyErr}</Form.Text>\n                    </div>\n                                \n                    :\n                                <Form.Control as=\"textarea\" rows={3} onChange={handleEditChange} value={editText} />\n                    }\n                        \n                    </InputGroup>\n                    :\n                    editCollection === 'posts' ?\n                    <div>\n                                <p style={{ marginBottom: 10 }}>Title</p>\n                                <Form.Text className='text-danger'>{titleErr}</Form.Text>\n                                <Form.Control style={{ marginBottom: 20 }} as=\"text\" value={editTitle} readOnly/>\n                                <p style={{ marginBottom: 10 }}>Description</p>\n                                <Form.Control style={{marginBottom: 20}} as=\"textarea\" value={readOnlyText} readOnly />\n                                <p style={{ marginBottom: 10 }}>Edit</p>\n                                <Form.Control style={{ marginBottom: 20 }} as=\"textarea\" rows={3} onChange={handleEditChange} value={editText} />\n                                <p style={{ marginBottom: 10 }}>Edit Bounty</p>\n                                <Form.Control onChange={handleBountyChange} value={editBounty} />\n                                <Form.Text className='text-danger'>{bountyErr}</Form.Text>\n                    </div>\n                    :\n                    <div>\n                            <Form.Control as=\"textarea\" value={readOnlyText} readOnly />\n                            <Form.Control style={{marginTop: 20}} as=\"textarea\" rows={3} onChange={handleEditChange} value={editText} />\n                    </div>\n                                \n                    \n                    }\n                </Modal.Body>\n                <Modal.Footer>\n                    {editHandling ?\n                    <Button disabled variant=\"success\">\n                            <Spinner\n                                as=\"span\"\n                                animation=\"border\"\n                                size=\"sm\"\n                                role=\"status\"\n                                aria-hidden=\"true\"\n                            />\n                    </Button>\n                    :\n                        <Button variant=\"success\" onClick={() => {\n                            setEditHandling(true)\n                            if (editCollection === 'posts') {\n                                if (editBountyCheck && titleErr === '') {\n                                    functions().httpsCallable('editPost')({ collect: editCollection, id: editID, fullEdit: fullEdit, editText: editText, title: editTitle, bounty: editBounty }).then(async () => {\n                                        setEditModalShow(false);\n                                        window.location.reload()\n                                    })\n                                } \n                            } else {\n                                functions().httpsCallable('editPost')({ collect: editCollection, id: editID, fullEdit: fullEdit, editText: editText }).then(async () => {\n                                    setEditModalShow(false);\n                                    setComments(await getComments(postid));\n                                    setCommentsDone(true);\n                                    setEditHandling(false);\n                                })\n                            }\n                            setEditHandling(false);\n                            \n                        }}>Save</Button>\n                    }\n                    \n                </Modal.Footer>\n            </Modal>\n\n            <Modal show={reportModalShow} onHide={() => {\n                setReportModalShow(false)\n                setReportDone(false)\n                setReportMessage('')\n            }}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Report @{reportAuthorName}</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    Let us know if this user is violating community agreements as outlined in our terms of service. Thanks!\n                    </Modal.Body>\n                <Modal.Footer>\n                    <InputGroup>\n                        <Form.Control as=\"textarea\" placeholder=\"What's the reason for reporting this user?\" rows={3} onChange={handleReportChange} value={reportMessage} />\n                    </InputGroup>\n                    {reportHandling ?\n                        <Button disabled variant='danger'>\n                            <Spinner\n                                as=\"span\"\n                                animation=\"border\"\n                                size=\"sm\"\n                                role=\"status\"\n                                aria-hidden=\"true\"\n                            />\n                        </Button>\n                        :\n                        reportDone ?\n                            <Button disabled variant='danger'>Thanks! You can close this window.</Button>\n\n                            :\n                            <Button variant='danger' onClick={async () => {\n                                setReportHandling(true);\n                                await functions().httpsCallable('createReport')({ post: reportID, reportMessage: reportMessage, submittedBy: session.auth?.uid, timestamp: firestore.Timestamp.now() }).then(() => {\n                                    setReportHandling(false);\n                                    setReportDone(true);\n                                })\n                            }}>Report\n                        </Button>\n                    }\n\n                </Modal.Footer>\n            </Modal>\n            {post ?\n                <Container className={styles.paddingTop}>\n                    <Card style={{ marginBottom: 30 }}>\n                        <Card.Body>\n                            <Row>\n                                <Col>\n                                    <Card.Title>{post?.title}</Card.Title>\n                                    <Card.Subtitle>{channelView(post)}</Card.Subtitle>\n                                    <Card.Text>{post?.desc}</Card.Text>\n                                </Col>\n                                <Col xs={3} sm={2} style={{ textAlign: 'center' }}>\n                                    <Button disabled={!session.auth} active={upvoted.includes(postid)} size=\"sm\" variant=\"outline-primary\" onClick={() => {\n                                        handleVote(true, post)\n                                        setChanged(!changed)\n                                    }}>\n                                        ▲\n                                    </Button>\n                                    <p>{post?.upvotes ?\n                                        post?.upvotes\n                                        :\n                                        0\n                                    }\n                                    </p>\n                                    <Button disabled={!session.auth} active={downvoted.includes(postid)} size=\"sm\" variant=\"outline-danger\" onClick={() => {\n                                        handleVote(false, post)\n                                        setChanged(!changed)\n                                    }}>▼</Button>\n\n                                    <Card style={{ marginTop: 15 }}>\n                                        {post?.bounty <= 0 ?\n                                            <Card.Title style={{ paddingTop: 10 }}>Claimed</Card.Title>\n                                            :\n                                            <Card.Title style={{ paddingTop: 10 }}>{post?.bounty} cr.</Card.Title>\n                                        }\n                                        \n                                    </Card>\n                                </Col>\n                            </Row>\n\n\n                            <Card.Text className={styles.fontLess} style={{ paddingTop: 10 }}>\n                                Posted by <a href={`/user/${post?.authorName}`}>{`@${post?.authorName}`}</a> {timeMessage}\n                            {' - '}\n                            &nbsp;\n                            <Button style={{marginTop: 5}} disabled={!session.auth} size=\"sm\" variant='outline-danger' onClick={() => {\n                                    setReportAuthorName(post.authorName)\n                                    setReportID(postid)\n                                    setReportModalShow(true)\n                                }}>\n                                    ⚐\n                            </Button>\n                            &nbsp;\n                            &nbsp;\n                            {postSelf ?\n                                    <Button size=\"sm\" style={{ marginTop: 5 }} variant='outline-success' onClick={() => {\n                                        setEditCollection('posts')\n                                        setEditID(postid)\n                                        if (numComments === 0 && post.awarded === false) {\n                                            setFullEdit(true)\n                                            setEditText(post.desc)\n                                        } else {\n                                            setFullEdit(false)\n                                            setReadOnlyText(post.desc)\n                                            if (post.edit && post.edit.length > 0) {\n                                                setEditText(post.edit)\n                                            } else {\n                                                setEditText('EDIT: ')\n                                            }\n                                        }\n\n                                        setEditTitle(post.title)\n                                        setEditBounty(post.bounty)\n\n                                        setEditModalShow(true)\n                                    }}>Edit</Button>\n                                    :\n                                    ''}\n                                    &nbsp;\n                                    &nbsp;\n                            {postSelf && post.awarded == false ?\n                                    <Button size=\"sm\" style={{marginTop: 5}} variant='outline-danger' onClick={() => {\n                                        setDeleteCollection('posts')\n                                        setDeleteID(postid)\n                                        setNumReplies(numComments)\n                                        setDeleteModalShow(true) }}>Delete Post</Button>\n                                    :\n                                    ''\n                            }\n                            \n                    \n\n                            </Card.Text>\n                        </Card.Body>\n                    </Card>\n\n                    {session.auth ?\n                        activeAnswer ?\n\n                            <Form onSubmit={handleSubmit}>\n\n                                <Form.Group controlId=\"description\">\n                                    <Form.Label>Answer</Form.Label>\n                                    <Form.Control required as=\"textarea\" rows={3} placeholder=\"\" onChange={handleAnswerChange} />\n                                </Form.Group>\n\n                                {handling ?\n                                    <Button variant=\"primary\" style={{ marginTop: 15 }}>\n                                        <Spinner\n                                            as=\"span\"\n                                            animation=\"border\"\n                                            size=\"sm\"\n                                            role=\"status\"\n                                            aria-hidden=\"true\"\n                                        />\n                                    </Button>\n                                    :\n                                    <Button variant=\"primary\" type=\"submit\" style={{ marginTop: 15 }}>\n                                        Comment\n                                </Button>\n                                }\n\n                            </Form>\n                            :\n                            auth().currentUser?.emailVerified ?\n                            <Button variant=\"primary\" onClick={() => { setActiveAnswer(true) }}>Comment</Button>\n                            :\n                                <Button disabled variant=\"primary\" onClick={() => { setActiveAnswer(true) }}>Verify Email to Comment</Button>\n                        :\n                        <div></div>\n                    }\n\n\n                    <hr></hr>\n\n\n\n                    {comments ?\n                        <div>\n                            {numComments == 1 ?\n                                <h3 style={{ paddingTop: 30, paddingLeft: 22, paddingBottom: 15 }}>{numComments} comment</h3>\n                                :\n                                <h3 style={{ paddingTop: 30, paddingLeft: 22, paddingBottom: 15 }}>{numComments} comments</h3>\n                            }\n\n                            {feedView(comments)}\n                        </div>\n                        :\n                        commentsDone ?\n                            <div>\n                                <h3 style={{ paddingTop: 30, paddingLeft: 22, paddingBottom: 15 }}>{numComments} comments</h3>\n                            </div>\n                            :\n                            <Spinner style={{ marginTop: 30, marginLeft: 30 }} animation=\"border\" />\n                    }\n\n                </Container>\n                :\n                loadingDone ?\n                    <Container className={styles.paddingTop}>\n                        <h1>No post found.</h1>\n                    </Container>\n                    :\n                    <Container className={styles.paddingTop}>\n                        <Spinner style={{ marginTop: 30, marginLeft: 30 }} animation=\"border\" />\n                    </Container>\n            }\n\n        </div>\n    )\n}\n\n\nexport { QuestionPage }\n","import React, { useState, useEffect, useContext, useCallback } from 'react'\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n} from \"react-router-dom\"\n\nimport { ROUTES } from '../../constants'\nimport { HomePage } from '../Home'\nimport { ProfilePage } from '../Profile'\nimport { useFirebase } from '../Firebase'\nimport { useSession, SessionContext } from '../Session/'\nimport { QuestionPage } from '../Question'\n\nconst MainApp: React.FC = () => {\n    const session = useSession()\n\n    if (session.initializing) {\n        return (<div></div>)\n    }\n    return (\n        <Router>\n            <Switch>\n                <Route exact path={ROUTES.ROOT}>\n                    <HomePage />\n                </Route>\n                <Route path={ROUTES.USERNAME}>\n                    <ProfilePage />\n                </Route>\n                <Route path={ROUTES.COMMENTS}>\n                    <QuestionPage />\n                </Route>\n            </Switch>\n        </Router>\n    )\n}\n\n\nconst AppWithAuth: React.FC = () => {\n    const firebase = useFirebase()\n    const [authObject, setAuthObject] = useState(() => {\n        const currentUser = firebase.auth.currentUser\n        if (!currentUser) {\n            return {\n                initializing: true,\n                auth: null,\n            }\n        } else {\n            return {\n                initializing: false,\n                auth: currentUser,\n            }\n        }\n\n    })\n\n    useEffect(() => {\n        function onChange(newUser: any) {\n            console.log('New user detected in auth onChange: ', newUser)\n            if (newUser === null) {\n                // Not authenticated\n                console.log('Not authenticated')\n                setAuthObject({ initializing: false, auth: null })\n            } else {\n                // New authentication occurred\n                setAuthObject(prevState => {\n                    if (prevState.auth === null) {\n                        // Went from unauthenticated to authenticated\n                        console.log('Authenticated')\n                        return { initializing: false, auth: newUser }\n                    } else {\n                        // Bug: Went from authenticated to another authentication\n                        console.log('Bug: reauthenticated')\n                        return prevState\n                    }\n                })\n            }\n        }\n\n        // listen for auth state changes\n        const unsubscribe = firebase.auth.onAuthStateChanged(onChange)\n        // unsubscribe to the listener when unmounting\n\n        return () => {\n            unsubscribe()\n            // We loaded a prof and were listening to it\n        }\n    }, [firebase.auth])\n\n    return (\n        <SessionContext.Provider value={authObject}>\n            <MainApp />\n        </SessionContext.Provider>\n    )\n}\n\nconst AppWithTwitter: React.FC = () => {\n    const firebase = useFirebase()\n\n    const getTwitterResult = useCallback(\n        async () => {\n            // If already logged in, no need to check\n            if (firebase.auth.currentUser) {\n                return\n            }\n            try {\n                const result = await firebase.auth.getRedirectResult()\n                console.log('Received Redirect result: ', result)\n                const { user, additionalUserInfo, credential } = result\n                if (!user) {\n                    console.log('No Twitter Redirect Result!')\n                    return\n                }\n                console.log('Current user after redirect: ', firebase.auth.currentUser)\n                // Register user for first time\n            }\n            catch (error) {\n                var errorCode = error.code;\n                var errorMessage = error.message;\n                // The email of the user's account used.\n                var email = error.email;\n                // The firebase.auth.AuthCredential type that was used.\n                var credential = error.credential;\n                console.log(error)\n            }\n\n        }, [firebase.auth])\n\n    useEffect(() => {\n        console.log('Current user in Twitter Checking Component: ', firebase.auth.currentUser)\n        getTwitterResult()\n    }, [getTwitterResult, firebase.auth])\n\n    return (\n        <AppWithAuth />\n    )\n}\n\n\n\nexport default AppWithTwitter ","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { FirebaseContext, Firebase } from './components/Firebase';\n\nconst config = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <FirebaseContext.Provider value={new Firebase()}>\n      <App />\n    </FirebaseContext.Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paddingTop\":\"Question_paddingTop__3SnTv\",\"centerItems\":\"Question_centerItems__2niqs\",\"fontLess\":\"Question_fontLess__1iLQC\",\"opaqueLess\":\"Question_opaqueLess__2kYLQ\",\"refresh\":\"Question_refresh__vU4gl\",\"borderLeft\":\"Question_borderLeft__2Cpjz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paddingTop\":\"FeedView_paddingTop__3m4Xr\",\"centerItems\":\"FeedView_centerItems__1ZPLt\",\"fontLess\":\"FeedView_fontLess__3NchW\",\"opaqueLess\":\"FeedView_opaqueLess__2AvMC\",\"refresh\":\"FeedView_refresh__2WvkY\",\"borderLeft\":\"FeedView_borderLeft__1qHL5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paddingTop\":\"Profile_paddingTop__3kNOc\",\"centerItems\":\"Profile_centerItems__3xB3O\",\"fontLess\":\"Profile_fontLess__1fK0e\",\"opaqueLess\":\"Profile_opaqueLess__DR6mh\",\"refresh\":\"Profile_refresh__Vh51B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paddingTop\":\"Home_paddingTop__lwuR_\",\"centerItems\":\"Home_centerItems__11x6e\",\"fontLess\":\"Home_fontLess__3aF4X\",\"opaqueLess\":\"Home_opaqueLess__1EMYG\",\"refresh\":\"Home_refresh__2Epj3\",\"aNoStyle\":\"Home_aNoStyle__3zzT_\"};"],"sourceRoot":""}