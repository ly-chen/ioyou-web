{"version":3,"sources":["constants/routes.tsx","components/Firebase/context.tsx","components/Firebase/firebase.tsx","components/Session/useSession.tsx","components/Home/Home.tsx","components/Profile/ProfilePage.tsx","components/Signup/SignupPage.tsx","components/Login/LoginPage.tsx","components/Post/Post.tsx","components/Question/Question.tsx","components/App/index.tsx","serviceWorker.ts","index.tsx","components/Question/Question.module.css","components/Profile/Profile.module.css","components/Home/Home.module.css","components/Signup/Signup.module.css","components/Login/Login.module.css","components/Post/Post.module.css"],"names":["ROUTES","FirebaseContext","createContext","useFirebase","useContext","config","apiKey","process","authDomain","databaseURL","projectId","messagingSenderId","SessionContext","auth","initializing","useSession","HomePage","firebase","session","useState","allFeed","setAllFeed","homeFeed","setHomeFeed","academic","setAcademic","bulletin","setBulletin","useEffect","getChannels","a","db","collection","doc","uid","get","user","console","log","data","channelList","actives","Object","keys","filter","key","getPosts","sort","category","subjects","docList","query","orderBy","posts","where","limit","empty","forEach","id","i","length","numComments","size","loadPosts","feedLoadingView","style","paddingTop","Card","marginBottom","Body","Title","Text","Spinner","animation","feedView","feedList","map","object","href","title","Subtitle","subjectObjects","channels","d","indexOf","Row","marginLeft","channelView","className","styles","fontLess","desc","authorName","timestamp","seconds","feedCard","Navbar","bg","variant","Brand","Nav","Button","onClick","username","window","location","marginRight","doSignOut","Container","Col","paddingLeft","paddingBottom","Tabs","defaultActiveKey","Tab","eventKey","ProfilePage","useParams","setUser","userLoading","setUserLoading","userSelf","setUserSelf","editSubjects","setEditSubjects","change","setChange","lang","setLang","sci","setSci","ss","setSS","history","setHistory","historyDone","setHistoryDone","setActives","firestore","results","docs","userID","userResults","getUser","self","getSelf","subjectEdit","subject","activesEdit","name","paddingRight","update","active","DropdownButton","Dropdown","Item","editSubjectsView","entries","subjectsView","SignupPage","validated","setValidated","setName","setUsername","email","setEmail","password","setPassword","err","setErr","usernameErr","setUsernameErr","passCheck","setPassCheck","handling","setHandling","handleSubmit","event","preventDefault","currentTarget","checkValidity","stopPropagation","checkUsername","createUserWithEmailAndPassword","catch","e","newUser","set","then","message","Form","onSubmit","Group","controlId","Label","Control","required","type","placeholder","onChange","target","value","Feedback","match","Check","label","disabled","as","role","aria-hidden","LoginPage","doSignInWithEmailAndPassword","marginTop","PostPage","setChannels","setChannelList","allChannels","setTitle","description","setDescription","input","setInput","newPost","Timestamp","now","author","functions","httpsCallable","array","index","splice","selectedView","strKeyword","replace","substr","toLowerCase","push","rows","postToView","QuestionPage","props","postid","setSelf","post","setPost","answer","setAnswer","comments","setComments","loadingDone","setLoadingDone","commentsDone","setCommentsDone","getComments","commentsList","selfDoc","postDoc","getPost","newComment","comment","parent","thread","MainApp","exact","path","AppWithAuth","currentUser","authObject","setAuthObject","unsubscribe","onAuthStateChanged","prevState","Provider","AppWithTwitter","getTwitterResult","useCallback","getRedirectResult","result","additionalUserInfo","credential","code","Boolean","hostname","ReactDOM","render","StrictMode","provider","doTwitterSignIn","signInWithRedirect","doCreateUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","app","apps","initializeApp","this","TwitterAuthProvider","App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","module","exports"],"mappings":"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","file":"static/js/main.597544ec.chunk.js","sourcesContent":["const ROUTES = {\n    ROOT: \"/\",\n    SIGNUP: \"/signup\",\n    LOGIN: \"/login\",\n    POST: \"/new\",\n    USERNAME: \"/user/:username\",\n    COMMENTS: \"/post/:postid\"\n}\n\nexport { ROUTES }","import { createContext, useContext } from 'react'\nimport { Firebase } from './firebase'\n\n\nconst FirebaseContext = createContext<Firebase>({} as Firebase)\n\nconst useFirebase = () => {\n    const firebase = useContext(FirebaseContext)\n\n    return firebase\n}\nexport { FirebaseContext, useFirebase }\n","import app from 'firebase/app'\nimport 'firebase/auth'\nimport 'firebase/firestore'\nimport 'firebase/functions'\n\nconst config = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n}\n\nclass Firebase {\n    auth: firebase.auth.Auth\n    db: firebase.firestore.Firestore\n    functions: firebase.functions.Functions\n    provider: firebase.auth.AuthProvider\n\n    constructor() {\n        if (!app.apps.length) {\n            app.initializeApp(config)\n        }\n        this.auth = app.auth()\n        // For ease of access. Note that db normally refers to Firebase Realtime Database.\n        this.db = app.firestore()\n        this.functions = app.functions()\n        this.provider = new app.auth.TwitterAuthProvider()\n    }\n\n    // *** Auth API ***\n\n    // twitter signin handler\n    doTwitterSignIn = async () => {\n        this.auth.signInWithRedirect(this.provider)\n    }\n\n    // email and password signin handlers\n    doCreateUserWithEmailAndPassword = (email: string, password: string) =>\n        this.auth.createUserWithEmailAndPassword(email, password)\n\n    doSignInWithEmailAndPassword = (email: string, password: string) =>\n        this.auth.signInWithEmailAndPassword(email, password)\n\n    doSignOut = () => this.auth.signOut()\n\n}\n\nexport { Firebase }\n","import { createContext, useContext } from 'react'\nimport firebase from 'firebase'\n\ninterface SessionObject {\n    initializing: boolean,\n    auth: firebase.User | null,\n}\n\nconst SessionContext = createContext<SessionObject>({\n    auth: {} as firebase.User,\n    initializing: true\n})\n\nconst useSession = () => {\n    const session = useContext(SessionContext)\n    return session\n}\n\nexport { SessionContext, useSession }\n\n","import React, { useState, useCallback, useEffect } from 'react'\nimport { useFirebase, Firebase } from '../Firebase'\nimport { Navbar, Nav, Button, ButtonGroup, Container, Row, Col, Spinner, Jumbotron, Image, ProgressBar, OverlayTrigger, Popover, Carousel, Card, Tabs, Tab } from 'react-bootstrap'\nimport { useSession } from '../Session'\nimport styles from './Home.module.css'\n\nconst HomePage: React.FC = () => {\n    const firebase = useFirebase()\n    const session = useSession()\n\n    const [allFeed, setAllFeed] = useState<any>(null)\n    const [homeFeed, setHomeFeed] = useState<any>(null)\n    const [academic, setAcademic] = useState<any>(null)\n    const [bulletin, setBulletin] = useState<any>(null)\n    const [channels, setChannels] = useState<Array<string>>([])\n\n    useEffect(() => {\n        //retrieves the most recent 10 posts\n        const getChannels = async () => {\n            try {\n                const user = await firebase.db.collection('users').doc(session.auth?.uid).get()\n                console.log('user = ', user.data())\n                const channelList = user.data()?.actives\n                console.log('channelList = ', channelList)\n                console.log('object.keys() = ', Object.keys(channelList).filter((key) => {\n                    return channelList[key] == true;\n                }))\n                return Object.keys(channelList).filter((key) => {\n                    return channelList[key] == true;\n                })\n            } catch (e) {\n                console.log(e)\n            }\n        }\n\n        const getPosts = async (sort: string, category: string, subjects: string[] | undefined) => {\n            try {\n                var docList: any[] = []\n                const query = firebase.db.collection('posts').orderBy(sort, \"desc\")\n\n                let posts = null;\n                if (category === 'home') {\n                    posts = await query.where('channels', 'array-contains-any', subjects).limit(10).get()\n                    console.log('posts = ', posts)\n                } else {\n                    posts = await query.limit(10).get()\n                }\n\n                if (posts.empty || posts == null) {\n                    console.log('No matching documents')\n                    return;\n                }\n\n                posts.forEach(doc => {\n                    docList = [...docList, { id: doc.id, data: doc.data() }];\n                });\n\n                for (let i = 0; i < docList.length; i++) {\n                    const doc = docList[i]\n                    const numComments = await firebase.db.collection('comments').where('parent', '==', doc.id).get()\n                    docList[i] = { id: doc.id, data: doc.data, numComments: numComments.size }\n                }\n\n                if (category === 'all') {\n                    setAllFeed(docList)\n                }\n                if (category === 'home') {\n                    setHomeFeed(docList)\n                }\n                if (category === 'academic') {\n                    setAcademic(docList)\n                }\n                if (category === 'bulletin') {\n                    setBulletin(docList)\n                }\n            } catch (e) {\n                console.log(e)\n            }\n        }\n\n        const loadPosts = async () => {\n            const subjects = await getChannels()\n            console.log('subjects = ', subjects)\n            getPosts('timestamp.seconds', 'all', subjects)\n            getPosts('timestamp.seconds', 'home', subjects)\n            getPosts('timestamp.seconds', 'academic', subjects)\n            getPosts('timestamp.seconds', 'bulletin', subjects)\n        }\n\n        loadPosts()\n    }, [session, firebase])\n\n    //a feed object\n    const feedCard = (object: { id: string | number | undefined; data: { title: string; desc: string; timestamp: { seconds: number, nanoseconds: number }; author: string; channels: Array<string>; authorName: string }; numComments: number }) => {\n\n        const channelView = () => {\n            const subjectObjects = object.data.channels?.map((d) => <p key={d}>{(object.data.channels.indexOf(d) == 0) ? `#${d}` : `, #${d}`}</p>)\n            return (\n                <div>\n                    <Row style={{ marginLeft: 1 }}>{subjectObjects}</Row>\n\n                </div>\n            )\n        }\n\n        return (\n\n            <Card style={{ marginBottom: 20 }}>\n                <Card.Body>\n                    <a href={`/post/${object.id}`}>\n                        <Card.Title>{object.data.title}</Card.Title>\n                    </a>\n                    <Card.Subtitle>{channelView()}</Card.Subtitle>\n                    <Card.Text className={styles.fontLess}> {object.data.desc}</Card.Text>\n                    <Card.Text className={styles.fontLess}>\n                        <a href={`/post/${object.id}`}>{object.numComments} comments</a>\n                        {' '} - Posted by <a href={`/user/${object.data.authorName}`}>{`@${object.data.authorName}`}</a> at {object.data.timestamp.seconds}\n                    </Card.Text>\n                </Card.Body>\n            </Card>\n\n            //\n        )\n    }\n\n    //loading animation while retrieving feed\n    const feedLoadingView = () => {\n        return (\n            <div style={{ paddingTop: 15 }}>\n\n                <Card style={{ marginBottom: 20 }}>\n                    <Card.Body>\n                        <Card.Title></Card.Title>\n                        <Card.Text></Card.Text>\n                        <Spinner animation=\"border\" />\n                    </Card.Body>\n                </Card>\n                <Card style={{ marginBottom: 20 }}>\n                    <Card.Body>\n                        <Card.Title></Card.Title>\n                        <Card.Text></Card.Text>\n                        <Spinner animation=\"border\" />\n                    </Card.Body>\n                </Card>\n                <Card style={{ marginBottom: 20 }}>\n                    <Card.Body>\n                        <Card.Title></Card.Title>\n                        <Card.Text></Card.Text>\n                        <Spinner animation=\"border\" />\n                    </Card.Body>\n                </Card>\n                <Card style={{ marginBottom: 20 }}>\n                    <Card.Body>\n                        <Card.Title></Card.Title>\n                        <Card.Text></Card.Text>\n                        <Spinner animation=\"border\" />\n                    </Card.Body>\n                </Card>\n                <Card style={{ marginBottom: 20 }}>\n                    <Card.Body>\n                        <Card.Title></Card.Title>\n                        <Card.Text></Card.Text>\n                        <Spinner animation=\"border\" />\n                    </Card.Body>\n                </Card>\n            </div>\n\n        )\n    }\n\n    //list of feed objects\n    const feedView = (feedList: { id: string | number | undefined; data: { title: string; desc: string; timestamp: { seconds: number; nanoseconds: number }; author: string; channels: string[]; authorName: string }; numComments: number }[]) => {\n        const feedItems = feedList.map((object: { id: string | number | undefined; data: { title: string; desc: string; timestamp: { seconds: number, nanoseconds: number }; author: string; channels: Array<string>; authorName: string }; numComments: number }) => <div key={object.id} style={{ paddingTop: 15 }}>{feedCard(object)}</div>\n        )\n        return feedItems\n    }\n\n    return (\n        <div>\n            <Navbar bg=\"light\" variant=\"light\">\n                <Navbar.Brand href=\"/\">\n                    {' '}\n                            ioyou\n                    </Navbar.Brand>\n                <Nav className=\"ml-auto\">\n                    {session.auth ?\n                        <div>\n                            <Button variant=\"light\" onClick={async () => {\n                                const user = await firebase.db.collection('users').doc(session?.auth?.uid).get()\n                                const username = user?.data()?.username\n                                window.location.href = `/user/${username}`\n                            }} style={{ marginRight: 10 }}>\n                                Profile\n                            </Button>\n                            <Button href=\"/new\" variant=\"outline-dark\" style={{ marginRight: 10 }}>Create Post</Button>\n                            <Button variant=\"light\" onClick={() => { firebase.doSignOut() }}>\n                                sign out\n                            </Button>\n                        </div>\n\n                        :\n                        <div>\n                            <Button variant=\"outline-dark\" href=\"/login\" style={{ marginRight: 10 }}>\n                                log in\n                                </Button>\n\n                            <Button variant=\"light\" href=\"/signup\">\n                                sign up\n                                </Button>\n                        </div>\n                    }\n\n                </Nav>\n            </Navbar>\n            <Container className={styles.paddingTop}>\n                <Row>\n                    <Col>\n                        <h1 style={{ paddingLeft: 22, paddingBottom: 15 }}>Feed</h1>\n                    </Col>\n                    <Col>\n\n                    </Col>\n                </Row>\n                <Tabs defaultActiveKey=\"Home\" id=\"feed-nav\">\n                    <Tab eventKey=\"All\" title=\"All\">\n                        {\n                            allFeed ?\n                                feedView(allFeed)\n                                :\n                                feedLoadingView()\n                        }\n                    </Tab>\n                    <Tab eventKey=\"Home\" title=\"Home\">\n                        {\n                            homeFeed ?\n                                feedView(homeFeed)\n                                :\n                                feedLoadingView()\n                        }\n                    </Tab>\n                    <Tab eventKey=\"Academic\" title=\"Academic\">\n                        {\n                            academic ?\n                                feedView(academic)\n                                :\n                                feedLoadingView()\n                        }\n                    </Tab>\n                    <Tab eventKey=\"Bulletin\" title=\"Bulletin\">\n                        {\n                            bulletin ?\n                                feedView(bulletin)\n                                :\n                                feedLoadingView()\n                        }\n                    </Tab>\n                </Tabs>\n            </Container>\n        </div>\n    )\n}\n\nexport { HomePage }\n","import React, { useState, useCallback, useEffect } from 'react'\nimport { useParams } from 'react-router-dom';\nimport { useFirebase, Firebase } from '../Firebase'\nimport { firestore } from 'firebase'\nimport { Navbar, Nav, Button, DropdownButton, Dropdown, Container, Row, Col, Spinner, Jumbotron, Image, ProgressBar, OverlayTrigger, Popover, Carousel, Card } from 'react-bootstrap'\nimport { useSession } from '../Session'\nimport styles from './Profile.module.css'\n\nconst ProfilePage: React.FC = () => {\n    const { username } = useParams()\n    const firebase = useFirebase()\n    const session = useSession()\n\n    const [user, setUser] = useState<any>(null);\n    const [userLoading, setUserLoading] = useState<boolean>(true);\n\n    const [userSelf, setUserSelf] = useState<boolean>(false);\n    const [editSubjects, setEditSubjects] = useState<boolean>(false);\n\n    const [change, setChange] = useState<boolean>(false);\n    const [lang, setLang] = useState<boolean>(false)\n    const [sci, setSci] = useState<boolean>(false)\n    const [ss, setSS] = useState<boolean>(false);\n\n    const [history, setHistory] = useState<any>(null);\n\n    const [historyDone, setHistoryDone] = useState<boolean>(false);\n\n\n    //list of subjects\n    const [actives, setActives] = useState<any>({});\n\n    useEffect(() => {\n        const getUser = async () => {\n            const results = await firestore().collection('users').where('username', '==', username).limit(1).get();\n            if (results.empty) {\n                console.log('empty');\n                setUserLoading(false);\n            } else {\n\n                const userID = await results.docs[0].id\n                const userResults = await results.docs[0].data()\n                setUser(userResults)\n                setActives(userResults.actives)\n\n                if (userResults.actives) {\n                    if (userResults.actives['French'] || userResults.actives['Mandarin'] || userResults.actives['Spanish'] || userResults.actives['Languages (General)']) {\n                        setLang(true)\n                    }\n\n                    if (userResults.actives['Biology'] || userResults.actives['Chemistry'] || userResults.actives['Physics'] || userResults.actives['Sciences (General)']) {\n                        setSci(true)\n                    }\n\n                    if (userResults.actives['Psychology'] || userResults.actives['Sociology'] || userResults.actives['Social Sciences (General)']) {\n                        setSS(true)\n                    }\n                }\n                console.log('userResults = ', userResults)\n                console.log('userResults.uid = ', userResults.uid)\n\n                const getPosts = async (sort: string) => {\n                    try {\n                        var docList: any[] = []\n                        const posts = await firebase.db.collection('posts').orderBy(sort, \"desc\").where('author', '==', userID).limit(10).get()\n\n\n                        if (posts.empty || posts == null) {\n                            console.log('No matching documents')\n                            return;\n                        }\n                        posts.forEach(doc => {\n                            docList = [...docList, { id: doc.id, data: doc.data() }];\n                        });\n\n                        setHistory(docList)\n                        console.log('docList = ', docList)\n                        setHistoryDone(true)\n                    } catch (e) {\n                        console.log(e)\n                        setHistoryDone(true)\n                    }\n                }\n\n\n                getPosts('timestamp.seconds');\n                setUserLoading(false);\n            }\n        }\n\n        getUser();\n\n        if (session.auth) {\n            const getSelf = async () => {\n                const self = await firestore().collection('users').doc(session?.auth?.uid).get()\n                if (self?.data()?.username == username) {\n                    setUserSelf(true);\n                }\n            }\n\n\n            getSelf();\n        }\n\n    }, [session, firebase])\n\n    const subjectsView = () => {\n        const subjectObjects = Object.entries(actives).map(([keyName, keyIndex]) =>\n            // use keyName to get current key's name\n            // and a[keyName] to get its value\n            <div key={keyName}>\n                {actives[keyName] ?\n                    <Button active variant='outline-dark' style={{ marginRight: 15, marginBottom: 15 }}>{keyName}</Button>\n                    :\n                    <div></div>\n                }\n\n            </div>\n        )\n        return (\n            <Row style={{ paddingTop: 15, paddingLeft: 15 }}>\n                {subjectObjects}\n            </Row>\n        )\n    }\n\n    const subjectEdit = (subject: string) => {\n        let activesEdit = actives;\n        if (actives[subject] == true) {\n            activesEdit[subject] = false;\n            setActives(activesEdit)\n        } else {\n            activesEdit[subject] = true;\n            setActives(activesEdit);\n        }\n    }\n\n\n    const editSubjectsView = () => {\n\n        var bus = actives['Business']\n        return (\n            <Row style={{ paddingTop: 15, paddingLeft: 15 }}>\n                <Button active={actives['Arts']} variant='outline-dark' style={{ marginRight: 15, marginBottom: 15 }}\n                    onClick={() => {\n                        subjectEdit('Arts')\n                        setChange(!change);\n                    }}\n                >\n                    Arts\n                </Button>\n                <Button active={actives['Business']} variant='outline-dark' style={{ marginRight: 15, marginBottom: 15 }}\n                    onClick={() => {\n                        subjectEdit('Business')\n                        setChange(!change);\n                    }}\n                >\n                    Business</Button>\n                <Button variant='outline-dark' active={actives['Computer Science']} style={{ marginRight: 15, marginBottom: 15 }}\n                    onClick={() => {\n                        subjectEdit('Computer Science')\n                        setChange(!change);\n                    }}\n                >\n                    Computer Science\n                </Button>\n                <Button variant='outline-dark' active={actives['Economics']} style={{ marginRight: 15, marginBottom: 15 }}\n                    onClick={() => {\n                        subjectEdit('Economics')\n                        setChange(!change);\n                    }}\n                >\n                    Economics</Button>\n                <Button variant='outline-dark' active={actives['Finance']} style={{ marginRight: 15, marginBottom: 15 }}\n                    onClick={() => {\n                        subjectEdit('Finance')\n                        setChange(!change);\n                    }}\n                >\n                    Finance</Button>\n                <Button variant='outline-dark' active={actives['History']} style={{ marginRight: 15, marginBottom: 15 }}\n                    onClick={() => {\n                        subjectEdit('History')\n                        setChange(!change);\n                    }}\n                >\n                    History</Button>\n                <Button variant='outline-dark' active={actives['Humanities']} style={{ marginRight: 15, marginBottom: 15 }}\n                    onClick={() => {\n                        subjectEdit('Humanities')\n                        setChange(!change);\n                    }}\n                >\n                    Humanities</Button>\n                <DropdownButton id=\"lang\" title=\"Languages\" variant={lang ? 'dark' : 'outline-dark'} style={{ marginRight: 15, marginBottom: 15 }}>\n                    <Dropdown.Item active={actives['French']} onClick={() => {\n                        subjectEdit('French')\n                        setChange(!change);\n                        if (actives['French'] || actives['Mandarin'] || actives['Spanish'] || actives['Languages (General)']) {\n                            setLang(true)\n                        } else {\n                            setLang(false)\n                        }\n                    }}>\n                        French\n                    </Dropdown.Item>\n                    <Dropdown.Item active={actives['Mandarin']} onClick={() => {\n                        subjectEdit('Mandarin')\n                        setChange(!change);\n                        if (actives['French'] || actives['Mandarin'] || actives['Spanish'] || actives['Languages (General)']) {\n                            setLang(true)\n                        } else {\n                            setLang(false)\n                        }\n                    }}>\n                        Mandarin\n                    </Dropdown.Item >\n                    <Dropdown.Item active={actives['Spanish']} onClick={() => {\n                        subjectEdit('Spanish')\n                        setChange(!change);\n                        if (actives['French'] || actives['Mandarin'] || actives['Spanish'] || actives['Languages (General)']) {\n                            setLang(true)\n                        } else {\n                            setLang(false)\n                        }\n                    }}>\n                        Spanish\n                    </Dropdown.Item>\n                    <Dropdown.Item active={actives['Languages (General)']} onClick={() => {\n                        subjectEdit('Languages (General)')\n                        setChange(!change);\n                        if (actives['French'] || actives['Mandarin'] || actives['Spanish'] || actives['Languages (General)']) {\n                            setLang(true)\n                        } else {\n                            setLang(false)\n                        }\n                    }}>\n                        General\n                    </Dropdown.Item>\n                </DropdownButton>\n                <Button variant='outline-dark' style={{ marginRight: 15, marginBottom: 15 }} active={actives['Mathematics']} onClick={() => {\n                    subjectEdit('Mathematics')\n                    setChange(!change);\n                }}>\n                    Mathematics\n                </Button>\n                <DropdownButton id=\"sci\" title=\"Sciences\" variant={sci ? 'dark' : 'outline-dark'} style={{ marginRight: 15, marginBottom: 15 }}>\n                    <Dropdown.Item active={actives['Biology']} onClick={() => {\n                        subjectEdit('Biology')\n                        setChange(!change);\n                        if (actives['Biology'] || actives['Chemistry'] || actives['Physics'] || actives['Sciences (General)']) {\n                            setSci(true)\n                        } else {\n                            setSci(false)\n                        }\n                    }}>\n                        Biology\n                    </Dropdown.Item>\n                    <Dropdown.Item active={actives['Chemistry']} onClick={() => {\n                        subjectEdit('Chemistry')\n                        setChange(!change);\n                        if (actives['Biology'] || actives['Chemistry'] || actives['Physics'] || actives['Sciences (General)']) {\n                            setSci(true)\n                        } else {\n                            setSci(false)\n                        }\n                    }}>\n                        Chemistry\n                    </Dropdown.Item>\n                    <Dropdown.Item active={actives['Physics']} onClick={() => {\n                        subjectEdit('Physics')\n                        setChange(!change);\n                        if (actives['Biology'] || actives['Chemistry'] || actives['Physics'] || actives['Sciences (General)']) {\n                            setSci(true)\n                        } else {\n                            setSci(false)\n                        }\n                    }}>\n                        Physics\n                    </Dropdown.Item>\n                    <Dropdown.Item active={actives['Sciences (General)']} onClick={() => {\n                        subjectEdit('Sciences (General)')\n                        setChange(!change);\n                        if (actives['Biology'] || actives['Chemistry'] || actives['Physics'] || actives['Sciences (General)']) {\n                            setSci(true)\n                        } else {\n                            setSci(false)\n                        }\n                    }}>\n                        General\n                    </Dropdown.Item>\n                </DropdownButton>\n                <DropdownButton id=\"lang\" title=\"Social Sciences\" variant={ss ? 'dark' : 'outline-dark'} style={{ marginRight: 15, marginBottom: 15 }} >\n                    <Dropdown.Item active={actives['Psychology']} onClick={() => {\n                        subjectEdit('Psychology')\n                        setChange(!change);\n                        if (actives['Psychology'] || actives['Sociology'] || actives['Social Sciences (General)']) {\n                            setSS(true)\n                        } else {\n                            setSS(false)\n                        }\n                    }}>\n                        Psychology\n                    </Dropdown.Item>\n                    <Dropdown.Item active={actives['Sociology']} onClick={() => {\n                        subjectEdit('Sociology')\n                        setChange(!change);\n                        if (actives['Psychology'] || actives['Sociology'] || actives['Social Sciences (General)']) {\n                            setSS(true)\n                        } else {\n                            setSS(false)\n                        }\n                    }}>\n                        Sociology\n                    </Dropdown.Item>\n                    <Dropdown.Item active={actives['Social Sciences (General)']} onClick={() => {\n                        subjectEdit('Social Sciences (General)')\n                        setChange(!change);\n                        if (actives['Psychology'] || actives['Sociology'] || actives['Social Sciences (General)']) {\n                            setSS(true)\n                        } else {\n                            setSS(false)\n                        }\n                    }}>\n                        General\n                    </Dropdown.Item>\n                </DropdownButton>\n                <Button variant='outline-dark' style={{ marginRight: 15, marginBottom: 15 }} active={actives['General']} onClick={() => {\n                    subjectEdit('General')\n                    setChange(!change);\n                }}>General</Button>\n            </Row>\n        )\n    }\n\n    //a feed object\n    const feedCard = (object: { id: string | number | undefined; data: { title: string; desc: string; timestamp: { seconds: number, nanoseconds: number }; author: string; channels: Array<string>; authorName: string } }) => {\n\n        const channelView = () => {\n            const subjectObjects = object.data.channels?.map((d) => <p key={d}>{(object.data.channels.indexOf(d) == 0) ? `#${d}` : `, #${d}`}</p>)\n            return (\n                <div>\n                    <Row style={{ marginLeft: 1 }}>{subjectObjects}</Row>\n\n                </div>\n            )\n        }\n\n        return (\n\n            <Card style={{ marginBottom: 20 }}>\n                <Card.Body>\n                    <a href={`/post/${object.id}`}>\n                        <Card.Title>{object.data.title}</Card.Title>\n                    </a>\n                    <Card.Subtitle>{channelView()}</Card.Subtitle>\n                    <Card.Text className={styles.fontLess}> {object.data.desc}</Card.Text>\n                    <Card.Text className={styles.fontLess}>Posted by {`@${object.data.authorName}`} at {object.data.timestamp.seconds}</Card.Text>\n                </Card.Body>\n            </Card>\n\n            //\n        )\n    }\n\n    //list of feed objects\n    const feedView = (feedList: { id: string | number | undefined; data: { title: string; desc: string; timestamp: { seconds: number; nanoseconds: number }; author: string; channels: string[]; authorName: string } }[]) => {\n        const feedItems = feedList.map((object: { id: string | number | undefined; data: { title: string; desc: string; timestamp: { seconds: number, nanoseconds: number }; author: string; channels: Array<string>; authorName: string } }) => <div key={object.id} style={{ paddingTop: 15 }}>{feedCard(object)}</div>\n        )\n        return feedItems\n    }\n\n    return (\n        <div>\n            <Navbar bg=\"light\" variant=\"light\">\n                <Navbar.Brand href=\"/\">\n                    {' '}\n                            ioyou\n                    </Navbar.Brand>\n                <Nav className=\"ml-auto\">\n                    {session.auth ?\n                        <div>\n                            <Button variant=\"light\" onClick={async () => {\n                                const user = await firebase.db.collection('users').doc(session?.auth?.uid).get()\n                                const username = user?.data()?.username\n                                window.location.href = `/user/${username}`\n                            }} style={{ marginRight: 10 }}>\n                                Profile\n                            </Button>\n                            <Button href=\"/post\" variant=\"outline-dark\" style={{ marginRight: 10 }}>Create Post</Button>\n                            <Button variant=\"light\" onClick={() => { firebase.doSignOut() }}>\n                                sign out\n                            </Button>\n                        </div>\n\n                        :\n                        <div>\n                            <Button variant=\"outline-dark\" href=\"/login\" style={{ marginRight: 10 }}>\n                                log in\n                                </Button>\n\n                            <Button variant=\"light\" href=\"/signup\">\n                                sign up\n                                </Button>\n                        </div>\n                    }\n\n                </Nav>\n            </Navbar>\n            {userLoading ?\n                <Container className={styles.paddingTop}>\n                    <Spinner animation=\"border\" />\n                </Container>\n                :\n                user ?\n                    <Container className={styles.paddingTop}>\n                        <Card>\n                            <Card.Body>\n                                <Row>\n                                    <Col>\n                                        <h2>@{username}</h2>\n                                        <h2>{user.name}</h2>\n                                    </Col>\n                                    <Col>\n                                        <h3>Credits: </h3>\n                                    </Col>\n                                </Row>\n\n\n                                <hr></hr>\n\n                                <Row style={{ paddingLeft: 15 }}>\n                                    <h3 style={{ paddingRight: 15 }}>Channels</h3>\n                                    {userSelf ?\n                                        editSubjects ?\n                                            <Button variant=\"outline-dark\" onClick={async () => {\n                                                setEditSubjects(false)\n                                                await firestore().collection('users').doc(session.auth?.uid).update({ actives: actives })\n\n                                            }}>Save</Button>\n                                            :\n                                            <Button variant=\"outline-dark\" onClick={() => { setEditSubjects(true) }}>Edit</Button>\n                                        :\n                                        <div></div>\n                                    }\n                                </Row>\n                                {\n                                    editSubjects ?\n                                        editSubjectsView()\n                                        :\n                                        actives ?\n                                            subjectsView()\n                                            :\n                                            <div></div>\n                                }\n                            </Card.Body>\n\n                        </Card>\n\n                        <h2 style={{ paddingTop: 50, paddingLeft: 22 }}>Post History</h2>\n\n                        {history\n                            ?\n                            <div>\n\n                                {feedView(history)}\n                            </div>\n                            :\n                            historyDone ?\n                                <h3>No posts.</h3>\n                                :\n                                <Spinner animation=\"border\" />\n                        }\n\n                    </Container>\n                    :\n                    <Container className={styles.paddingTop}>\n                        <h1>User does not exist.</h1>\n                    </Container>\n            }\n\n\n\n        </div>\n    )\n}\n\nexport { ProfilePage }\n","import React, { useState, useEffect } from 'react';\nimport { Navbar, Nav, Button, ButtonGroup, Container, Row, Col, Form, OverlayTrigger, Spinner } from 'react-bootstrap'\nimport styles from './Signup.module.css'\nimport { auth, firestore } from 'firebase'\nimport { useFirebase, Firebase } from '../Firebase'\nimport { useSession } from '../Session'\nimport { AnyCnameRecord } from 'dns';\n\nconst SignupPage: React.FC = () => {\n    const firebase = useFirebase()\n    const session = useSession()\n\n    const [validated, setValidated] = useState<boolean>(false);\n    const [name, setName] = useState<string>('')\n    const [username, setUsername] = useState<string>('')\n    const [email, setEmail] = useState<string>('')\n    const [password, setPassword] = useState<string>('')\n    const [err, setErr] = useState<string>('')\n    const [usernameErr, setUsernameErr] = useState<string>('')\n    const [passCheck, setPassCheck] = useState<boolean>(false);\n\n    const [handling, setHandling] = useState<boolean>(false);\n\n    const handleSubmit = async (event: any) => {\n        event.preventDefault();\n        setHandling(true)\n        console.log('name = ', name)\n        console.log('username = ', username)\n        console.log('email = ', email)\n        console.log('password = ', password)\n        console.log(event.currentTarget)\n        if (event.currentTarget.checkValidity() === false || passCheck === false || usernameErr.length > 0) {\n            console.log(validated);\n            event.preventDefault();\n            event.stopPropagation();\n        } else {\n            const results = await checkUsername(username);\n            if (results > 0) {\n                setUsernameErr('Already taken.')\n            } else {\n                try {\n                    console.log('this is triggered')\n                    const newUser = await auth().createUserWithEmailAndPassword(email, password).catch(e => { console.log(e) })\n                    if (newUser) {\n                        console.log('this is triggered 2')\n                        const uid = newUser?.user?.uid\n                        await firestore().collection('users').doc(uid).set({ name: name, username: username, email: email }).then(() => {\n                            window.location.href = `/user/${username}`\n                        })\n                    }\n                    setValidated(true);\n                } catch (e) {\n                    console.log(e);\n                    setErr(e.message);\n                }\n            }\n        }\n    }\n\n    const checkUsername = async (username: string) => {\n        const results = await firestore().collection('users').where('username', '==', username).limit(1).get();\n        return results.size;\n    }\n\n    const handleChangeName = (event: any) => {\n        setName(event.target.value)\n    }\n\n    const handleChangeUsername = (event: any) => {\n        setUsername(event.target.value)\n        if (event.target.value.length > 15) {\n            setUsernameErr('Too long. Usernames should be < 15 characters.')\n        } else {\n            setUsernameErr('')\n        }\n    }\n\n    const handleChangeEmail = (event: any) => {\n        setEmail(event.target.value)\n    }\n\n    const handleChangePassword = (event: any) => {\n        var check = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?!.*\\s).{8,30}$/;\n        setPassword(event.target.value);\n        if (event.target.value.match(check)) {\n            setPassCheck(true);\n            console.log('passCheck')\n        } else {\n            setPassCheck(false);\n            console.log('failCheck')\n        }\n    }\n\n    return (\n        <div>\n            <Navbar bg=\"light\" variant=\"light\">\n                <Navbar.Brand href=\"/\">\n                    {' '}\n                            ioyou\n                    </Navbar.Brand>\n                <Nav className='ml-auto'></Nav>\n                <Button variant=\"outline-dark\">\n                    log in\n                        </Button>\n            </Navbar>\n            <Container className={styles.paddingTop} style={{ paddingBottom: 10 }}>\n                <Form validated={validated} onSubmit={handleSubmit}>\n\n                    <Form.Group controlId=\"formBasicName\">\n                        <Form.Label>Name</Form.Label>\n                        <Form.Control required type=\"text\" placeholder=\"Jane Doe\" onChange={handleChangeName} value={name} />\n                        <Form.Control.Feedback type=\"invalid\">\n                            Please provide a name.\n                        </Form.Control.Feedback>\n                    </Form.Group>\n\n                    <Form.Group controlId=\"formBasicName\">\n                        <Form.Label>Username</Form.Label>\n                        <Form.Control required type=\"text\" placeholder=\"username\" onChange={handleChangeUsername} value={username} />\n                        <Form.Text className=\"text-danger\">\n                            {usernameErr}\n                        </Form.Text>\n                    </Form.Group>\n\n                    <Form.Group controlId=\"formBasicEmail\">\n                        <Form.Label>Email address</Form.Label>\n                        <Form.Control required type=\"email\" placeholder=\"jdoe@email.com\" onChange={handleChangeEmail} value={email} />\n                        <Form.Control.Feedback type=\"invalid\">\n                            Please provide an email.\n                        </Form.Control.Feedback>\n                    </Form.Group>\n\n                    <Form.Group controlId=\"formBasicPassword\">\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control required type=\"password\" placeholder=\"Password\" onChange={handleChangePassword} value={password} />\n                        {passCheck ?\n                            <Form.Text className=\"text-success\">\n                                Looks good!\n                            </Form.Text>\n                            :\n                            <Form.Text className=\"text-danger\">\n                                At least 8 characters and contain an uppercase letter, lowercase letter, number, and special character.\n                            </Form.Text>\n                        }\n                    </Form.Group>\n                    <Form.Group controlId=\"formBasicCheckbox\">\n                        <Form.Check required type=\"checkbox\" label=\"I agree to the terms and conditions.\" />\n                    </Form.Group>\n\n                    {handling ?\n                        <Button variant=\"primary\" disabled>\n                            <Spinner\n                                as=\"span\"\n                                animation=\"border\"\n                                size=\"sm\"\n                                role=\"status\"\n                                aria-hidden=\"true\"\n                            />\n                        </Button>\n                        :\n                        <Button variant=\"primary\" type=\"submit\">\n                            Submit\n                    </Button>\n                    }\n\n                </Form>\n                <p className=\"text-danger\">{err}</p>\n            </Container>\n        </div>\n    )\n}\n\nexport { SignupPage }","import React, { useState, useEffect } from 'react';\nimport { Navbar, Nav, Button, ButtonGroup, Container, Row, Col, Form, Spinner, FormControl } from 'react-bootstrap'\nimport { useFirebase, Firebase } from '../Firebase'\nimport { useSession } from '../Session'\nimport styles from './Login.module.css'\n\nconst LoginPage: React.FC = () => {\n    const firebase = useFirebase()\n    const session = useSession()\n\n    const [validated, setValidated] = useState<boolean>(false);\n    const [email, setEmail] = useState<string>('')\n    const [password, setPassword] = useState<string>('')\n    const [err, setErr] = useState<string>('')\n\n    const [handling, setHandling] = useState<boolean>(false)\n\n    useEffect(() => {\n        if (session.auth && validated) {\n            window.location.href = '/'\n        }\n    }, [session, firebase])\n\n    const handleSubmit = async (event: any) => {\n        event.preventDefault();\n        setHandling(true);\n        console.log('email = ', email)\n        console.log('password = ', password)\n        console.log(event.currentTarget)\n        if (event.currentTarget.checkValidity() === false) {\n            console.log(validated);\n            event.preventDefault();\n            event.stopPropagation();\n        } else {\n            try {\n                await firebase.doSignInWithEmailAndPassword(email, password)\n                setValidated(true);\n                window.location.href = \"/\"\n            } catch (e) {\n                console.log(e);\n                setErr(e.message);\n            }\n        }\n        console.log(validated);\n    }\n\n    const handleChangeEmail = (event: any) => {\n        setEmail(event.target.value)\n    }\n\n    const handleChangePassword = (event: any) => {\n        setPassword(event.target.value)\n    }\n\n    return (\n        <div>\n            <Navbar bg=\"light\" variant=\"light\">\n                <Navbar.Brand href=\"/\">\n                    {' '}\n                            ioyou\n                    </Navbar.Brand>\n                <Nav className='ml-auto'>\n                    <Button variant=\"outline-dark\" href=\"/signup\">\n                        sign up\n                    </Button>\n                </Nav>\n\n            </Navbar>\n            <Container className={styles.paddingTop}>\n                <Form validated={validated} onSubmit={handleSubmit}>\n                    <Form.Group controlId=\"formBasicEmail\">\n                        <Form.Label>Email address</Form.Label>\n                        <Form.Control required type=\"email\" placeholder=\"Enter email\" onChange={handleChangeEmail} value={email} />\n                    </Form.Group>\n                    <Form.Group controlId=\"formBasicPassword\">\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control required type=\"password\" placeholder=\"Password\" onChange={handleChangePassword} value={password} />\n                    </Form.Group>\n                    {handling ?\n                        <Button variant=\"primary\" disabled>\n                            <Spinner\n                                as=\"span\"\n                                animation=\"border\"\n                                size=\"sm\"\n                                role=\"status\"\n                                aria-hidden=\"true\"\n                            />\n                        </Button>\n                        :\n                        <Button variant=\"primary\" type=\"submit\" style={{ marginTop: 10 }}>\n                            Log in\n                        </Button>\n                    }\n\n                </Form>\n                <p className=\"text-danger\">{err}</p>\n            </Container>\n        </div>\n    )\n}\n\nexport { LoginPage }","import React, { useState, useEffect } from 'react'\nimport { useFirebase, Firebase } from '../Firebase'\nimport { functions, auth, firestore } from 'firebase'\nimport { Navbar, Nav, Button, ButtonGroup, Container, Row, Col, Spinner, Jumbotron, Image, ProgressBar, OverlayTrigger, Popover, Carousel, Card, Form } from 'react-bootstrap'\nimport { useSession } from '../Session'\nimport styles from './Post.module.css'\n\nconst PostPage: React.FC = () => {\n    const firebase = useFirebase()\n    const session = useSession()\n\n    const [channels, setChannels] = useState<Array<string>>([])\n    const [channelList, setChannelList] = useState<Array<string>>([])\n    const [allChannels, setAllChannels] = useState<Array<string>>(['Arts', 'Business', 'Computer Science', 'Economics', 'Finance', 'History', 'Humanities', 'French', 'Mandarin', 'Spanish', 'Languages (General)', 'Mathematics', 'Biology', 'Chemistry', 'Physics', 'Sciences (General)', 'Psychology', 'Sociology', 'Social Sciences (General)', 'General'])\n    const [title, setTitle] = useState<string>(\"\")\n    const [description, setDescription] = useState<string>(\"\")\n\n    const [err, setErr] = useState<string>(\"\")\n\n    const [handling, setHandling] = useState<boolean>(false)\n\n    const [input, setInput] = useState<string>(\"\")\n\n    const [name, setName] = useState<string>(\"\")\n\n    useEffect(() => {\n        if (!session.auth) {\n            window.location.href = \"/\"\n        } else {\n            const getUser = async () => {\n                const user = await firestore().collection('users').doc(session.auth?.uid).get()\n                setName(user.data()?.username)\n            }\n            getUser()\n        }\n    }, [session, firebase])\n\n    const handleChannelChange = (event: any) => {\n        setInput(event.target.value)\n        if (event.target.value.length > 0) {\n            let strKeyword = event.target.value\n            let subjects = []\n            for (let i = 0; i < allChannels.length; i++) {\n                if (allChannels[i].replace(/[^a-zA-Z0-9]/g, \"\").substr(0, strKeyword.length).toLowerCase() == strKeyword.toLowerCase()) {\n                    subjects.push(allChannels[i])\n                }\n            }\n            setChannelList(subjects)\n        } else {\n            setChannelList([])\n        }\n    }\n\n    const subjectsView = () => {\n        const subjectObjects = channelList.map((d) => <Button variant=\"outline-dark\" key={d} style={{ marginRight: 15, marginBottom: 15 }} onClick={() => {\n            if (channels.length > 9) {\n                setErr('Maximum 10 channels')\n            } else {\n                setErr('')\n                setInput('')\n                setChannelList([])\n                if (channels.indexOf(d) != -1) {\n                    return\n                } else {\n                    setChannels([...channels, d])\n                }\n\n            }\n        }}>{d}</Button>)\n        return (\n            <div>\n                {subjectObjects}\n            </div>\n        )\n    }\n\n    const selectedView = () => {\n        const subjectObjects = channels.map((d) => <Button variant=\"dark\" key={d} style={{ marginRight: 15, marginBottom: 15 }} onClick={() => {\n            var array = [...channels]; // make a separate copy of the array\n            var index = array.indexOf(d)\n            if (index !== -1) {\n                array.splice(index, 1);\n                setChannels(array);\n            }\n            if (channels.length < 11) {\n                setErr('')\n            }\n        }}>{d}</Button>)\n        return (\n            <div>\n                {subjectObjects}\n            </div>\n        )\n    }\n\n    const postToView = () => {\n        const subjectObjects = channels.map((d) => <p key={d}>{(channels.indexOf(d) == 0) ? `to ${d}` : `, ${d}`}</p>)\n        return (\n            <Row style={{ marginTop: 15, marginLeft: 15 }}>\n                {subjectObjects}\n            </Row>\n        )\n    }\n\n    const handleTitleChange = (event: any) => {\n        setTitle(event.target.value)\n    }\n\n    const handleDescriptionChange = (event: any) => {\n        setDescription(event.target.value)\n    }\n\n    const handleSubmit = async (event: any) => {\n        setHandling(true);\n        event.preventDefault()\n        console.log(title)\n        console.log(description)\n        let newPost = null;\n        if (channels.length == 0) {\n            newPost = { title: title, desc: description, timestamp: firestore.Timestamp.now(), author: session?.auth?.uid, channels: ['General'], authorName: name }\n        } else {\n            newPost = { title: title, desc: description, timestamp: firestore.Timestamp.now(), author: session?.auth?.uid, channels: channels, authorName: name }\n        }\n        await functions().httpsCallable('createPost')(newPost)\n        window.location.href = \"/\"\n    }\n\n\n    return (\n        <div>\n            <Navbar bg=\"light\" variant=\"light\">\n                <Navbar.Brand href=\"/\">\n                    {' '}\n                            ioyou\n                    </Navbar.Brand>\n                <Nav className=\"ml-auto\">\n                    <Button variant=\"light\" onClick={async () => {\n                        const user = await firebase.db.collection('users').doc(session?.auth?.uid).get()\n                        const username = user?.data()?.username\n                        window.location.href = `/user/${username}`\n                    }} style={{ marginRight: 10 }}>\n                        Profile\n                    </Button>\n                    <Button variant=\"light\" onClick={() => { firebase.doSignOut() }}>\n                        sign out\n                    </Button>\n                </Nav>\n            </Navbar>\n            <Container className={styles.paddingTop}>\n                <div>\n                    <h1 style={{ paddingBottom: 15 }}>Create a new post</h1>\n                    <Form onSubmit={handleSubmit}>\n                        <Form.Group controlId=\"channels\">\n                            <Form.Label>Channels</Form.Label>\n                            <Row style={{ marginLeft: 10 }}>\n                                {selectedView()}\n                                {subjectsView()}\n                            </Row>\n\n                            <Form.Control type=\"text\" placeholder=\"What subjects?\" onChange={handleChannelChange} value={input} />\n                            <Form.Text className=\"text-danger\">\n                                {err}\n                            </Form.Text>\n                        </Form.Group>\n\n                        <Form.Group controlId=\"title\">\n                            <Form.Label>Title</Form.Label>\n                            <Form.Control required type=\"text\" placeholder=\"What question?\" onChange={handleTitleChange} />\n                        </Form.Group>\n\n                        <Form.Group controlId=\"description\">\n                            <Form.Label>Description</Form.Label>\n                            <Form.Control as=\"textarea\" rows={3} placeholder=\"Add more details if necessary.\" onChange={handleDescriptionChange} />\n                        </Form.Group>\n\n                        {handling ?\n                            <Button variant=\"primary\" disabled style={{ marginTop: 15 }}>\n                                <Spinner\n                                    as=\"span\"\n                                    animation=\"border\"\n                                    size=\"sm\"\n                                    role=\"status\"\n                                    aria-hidden=\"true\"\n                                />\n                            </Button>\n\n                            :\n                            <Button variant=\"primary\" type=\"submit\" style={{ marginTop: 15 }}>\n                                Post\n                        </Button>\n\n                        }\n\n\n                        {postToView()}\n\n                    </Form>\n                </div>\n            </Container>\n        </div>\n    )\n}\n\n\nexport { PostPage }\n","import React, { useState, useEffect } from 'react'\nimport { useParams } from 'react-router-dom';\nimport { useFirebase, Firebase } from '../Firebase'\nimport { functions, auth, firestore } from 'firebase'\nimport { Navbar, Nav, Button, ButtonGroup, Container, Row, Col, Spinner, Jumbotron, Image, ProgressBar, OverlayTrigger, Popover, Carousel, Card, Form } from 'react-bootstrap'\nimport { useSession } from '../Session'\nimport styles from './Question.module.css'\n\nconst QuestionPage: React.FC = (props) => {\n    const firebase = useFirebase()\n    const session = useSession()\n\n    const { postid } = useParams()\n\n    const [self, setSelf] = useState<any>(null);\n    const [post, setPost] = useState<any>(null);\n\n    const [answer, setAnswer] = useState<string>(\"\")\n    const [comments, setComments] = useState<any>(null)\n\n    const [loadingDone, setLoadingDone] = useState<boolean>(false);\n    const [commentsDone, setCommentsDone] = useState<boolean>(false);\n\n    const getComments = async () => {\n        try {\n            var docList: any[] = []\n            const commentsList = await firebase.db.collection('comments').where('parent', '==', postid).get()\n\n\n            if (commentsList.empty || commentsList == null) {\n                console.log('No matching documents')\n                setCommentsDone(true)\n                return;\n            }\n            commentsList.forEach(doc => {\n                docList = [...docList, { id: doc.id, data: doc.data() }];\n            });\n\n            setComments(docList)\n            console.log('docList = ', docList)\n            setCommentsDone(true)\n        } catch (e) {\n            console.log(e)\n            setCommentsDone(true)\n        }\n    }\n\n    useEffect(() => {\n        if (session.auth) {\n            const getSelf = async () => {\n                const selfDoc = await (await firestore().collection('users').doc(session.auth?.uid).get()).data()\n                setSelf(selfDoc)\n            }\n            getSelf();\n        }\n\n\n        const getPost = async () => {\n            try {\n                const postDoc = await (await firestore().collection('posts').doc(postid).get()).data()\n                console.log('postDoc = ', postDoc)\n\n                setPost(postDoc)\n                getComments()\n                setLoadingDone(true)\n            } catch (e) {\n                console.log(e)\n                setLoadingDone(true)\n            }\n\n        }\n\n        getPost();\n    }, [session, firebase])\n\n\n    const handleAnswerChange = (event: any) => {\n        setAnswer(event.target.value)\n    }\n\n    const handleSubmit = async (event: any) => {\n        event.preventDefault()\n        console.log(answer)\n        const newComment = { comment: answer, parent: postid, thread: postid, timestamp: firestore.Timestamp.now(), author: session?.auth?.uid, authorName: self.username }\n        await firestore().collection('comments').doc().set(newComment).then(() => {\n            getComments()\n        })\n    }\n\n    //a feed object\n    const feedCard = (object: { id: string | number | undefined; data: { comment: string; timestamp: { seconds: number, nanoseconds: number }; author: string; authorName: string; parent: string; thread: string } }) => {\n\n        return (\n\n            <Card style={{ marginBottom: 20 }}>\n                <Card.Body>\n                    <Card.Title>{`@${object.data.authorName}`}</Card.Title>\n                    <Card.Text className={styles.fontLess}> {object.data.comment}</Card.Text>\n                    <Card.Text className={styles.fontLess}>{object.data.timestamp.seconds}</Card.Text>\n                </Card.Body>\n            </Card>\n\n            //\n        )\n    }\n\n    //list of feed objects\n    const feedView = (feedList: { id: string | number | undefined; data: { comment: string; timestamp: { seconds: number; nanoseconds: number }; author: string; authorName: string; parent: string; thread: string } }[]) => {\n        const feedItems = feedList.map((object: { id: string | number | undefined; data: { comment: string; timestamp: { seconds: number, nanoseconds: number }; author: string; authorName: string; parent: string; thread: string } }) => <div key={object.id} style={{ paddingTop: 15 }}>{feedCard(object)}</div>\n        )\n        return feedItems\n    }\n\n\n    return (\n        <div>\n            <Navbar bg=\"light\" variant=\"light\">\n                <Navbar.Brand href=\"/\">\n                    {' '}\n                            ioyou\n                    </Navbar.Brand>\n                <Nav className=\"ml-auto\">\n                    <Button variant=\"light\" onClick={async () => {\n                        const user = await firebase.db.collection('users').doc(session?.auth?.uid).get()\n                        const username = user?.data()?.username\n                        window.location.href = `/user/${username}`\n                    }} style={{ marginRight: 10 }}>\n                        Profile\n                            </Button>\n                    <Button variant=\"outline-dark\" onClick={() => { firebase.doSignOut() }}>\n                        sign out\n                    </Button>\n                </Nav>\n            </Navbar>\n            {post ?\n                <Container className={styles.paddingTop}>\n                    <Card style={{ marginBottom: 30 }}>\n                        <Card.Body>\n                            <Card.Title>{post?.title}</Card.Title>\n                            <Card.Text>{post?.desc}</Card.Text>\n                            <Card.Text className={styles.fontLess}>Posted by {`@${post?.authorName}`} at {post?.timestamp.seconds}</Card.Text>\n                        </Card.Body>\n                    </Card>\n\n                    <Form onSubmit={handleSubmit}>\n\n                        <Form.Group controlId=\"description\">\n                            <Form.Label>Answer</Form.Label>\n                            <Form.Control as=\"textarea\" rows={3} placeholder=\"\" onChange={handleAnswerChange} />\n                        </Form.Group>\n\n                        <Button variant=\"primary\" type=\"submit\" style={{ marginTop: 15 }}>\n                            Comment\n                        </Button>\n                    </Form>\n\n                    <hr></hr>\n\n\n\n                    {comments\n                        ?\n                        <div>\n                            <h3 style={{ paddingTop: 50, paddingLeft: 22, paddingBottom: 15 }}>{comments.length} comments</h3>\n                            {feedView(comments)}\n                        </div>\n                        :\n                        commentsDone ?\n                            <h3 style={{ paddingTop: 50, paddingLeft: 22, paddingBottom: 15 }}>0 comments</h3>\n                            :\n                            <Spinner animation=\"border\" />\n                    }\n                </Container>\n                :\n                loadingDone ?\n                    <Container className={styles.paddingTop}>\n                        <h1>No post found.</h1>\n                    </Container>\n                    :\n                    <Container className={styles.paddingTop}>\n                        <Spinner animation=\"border\" />\n                    </Container>\n            }\n\n        </div>\n    )\n}\n\n\nexport { QuestionPage }\n","import React, { useState, useEffect, useContext, useCallback } from 'react'\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n} from \"react-router-dom\"\n\nimport { ROUTES } from '../../constants'\nimport { HomePage } from '../Home'\nimport { ProfilePage } from '../Profile'\nimport { SignupPage } from '../Signup'\nimport { LoginPage } from '../Login'\nimport { PostPage } from '../Post'\nimport { useFirebase } from '../Firebase'\nimport { useSession, SessionContext } from '../Session/'\nimport { QuestionPage } from '../Question'\n\nconst MainApp: React.FC = () => {\n    const session = useSession()\n\n    if (session.initializing) {\n        return (<div></div>)\n    }\n    return (\n        <Router>\n            <Switch>\n                <Route exact path={ROUTES.ROOT}>\n                    <HomePage />\n                </Route>\n                <Route path={ROUTES.SIGNUP}>\n                    <SignupPage />\n                </Route>\n                <Route path={ROUTES.LOGIN}>\n                    <LoginPage />\n                </Route>\n                <Route path={ROUTES.POST}>\n                    <PostPage />\n                </Route>\n                <Route path={ROUTES.USERNAME}>\n                    <ProfilePage />\n                </Route>\n                <Route path={ROUTES.COMMENTS}>\n                    <QuestionPage />\n                </Route>\n            </Switch>\n        </Router>\n    )\n}\n\n\nconst AppWithAuth: React.FC = () => {\n    const firebase = useFirebase()\n    const [authObject, setAuthObject] = useState(() => {\n        const currentUser = firebase.auth.currentUser\n        if (!currentUser) {\n            return {\n                initializing: true,\n                auth: null,\n            }\n        } else {\n            return {\n                initializing: false,\n                auth: currentUser,\n            }\n        }\n\n    })\n\n    useEffect(() => {\n        function onChange(newUser: any) {\n            console.log('New user detected in auth onChange: ', newUser)\n            if (newUser === null) {\n                // Not authenticated\n                console.log('Not authenticated')\n                setAuthObject({ initializing: false, auth: null })\n            } else {\n                // New authentication occurred\n                setAuthObject(prevState => {\n                    if (prevState.auth === null) {\n                        // Went from unauthenticated to authenticated\n                        console.log('Authenticated')\n                        return { initializing: false, auth: newUser }\n                    } else {\n                        // Bug: Went from authenticated to another authentication\n                        console.log('Bug: reauthenticated')\n                        return prevState\n                    }\n                })\n            }\n        }\n\n        // listen for auth state changes\n        const unsubscribe = firebase.auth.onAuthStateChanged(onChange)\n        // unsubscribe to the listener when unmounting\n\n        return () => {\n            unsubscribe()\n            // We loaded a prof and were listening to it\n        }\n    }, [firebase.auth])\n\n    return (\n        <SessionContext.Provider value={authObject}>\n            <MainApp />\n        </SessionContext.Provider>\n    )\n}\n\nconst AppWithTwitter: React.FC = () => {\n    const firebase = useFirebase()\n\n    const getTwitterResult = useCallback(\n        async () => {\n            // If already logged in, no need to check\n            if (firebase.auth.currentUser) {\n                return\n            }\n            try {\n                const result = await firebase.auth.getRedirectResult()\n                console.log('Received Redirect result: ', result)\n                const { user, additionalUserInfo, credential } = result\n                if (!user) {\n                    console.log('No Twitter Redirect Result!')\n                    return\n                }\n                console.log('Current user after redirect: ', firebase.auth.currentUser)\n                // Register user for first time\n            }\n            catch (error) {\n                var errorCode = error.code;\n                var errorMessage = error.message;\n                // The email of the user's account used.\n                var email = error.email;\n                // The firebase.auth.AuthCredential type that was used.\n                var credential = error.credential;\n                console.log(error)\n            }\n\n        }, [firebase.auth])\n\n    useEffect(() => {\n        console.log('Current user in Twitter Checking Component: ', firebase.auth.currentUser)\n        getTwitterResult()\n    }, [getTwitterResult, firebase.auth])\n\n    return (\n        <AppWithAuth />\n    )\n}\n\n\n\nexport default AppWithTwitter ","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { FirebaseContext, Firebase } from './components/Firebase';\n\nconst config = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <FirebaseContext.Provider value={new Firebase()}>\n      <App />\n    </FirebaseContext.Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paddingTop\":\"Question_paddingTop__3SnTv\",\"centerItems\":\"Question_centerItems__2niqs\",\"fontLess\":\"Question_fontLess__1iLQC\",\"opaqueLess\":\"Question_opaqueLess__2kYLQ\",\"refresh\":\"Question_refresh__vU4gl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paddingTop\":\"Profile_paddingTop__3kNOc\",\"centerItems\":\"Profile_centerItems__3xB3O\",\"fontLess\":\"Profile_fontLess__1fK0e\",\"opaqueLess\":\"Profile_opaqueLess__DR6mh\",\"refresh\":\"Profile_refresh__Vh51B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paddingTop\":\"Home_paddingTop__lwuR_\",\"centerItems\":\"Home_centerItems__11x6e\",\"fontLess\":\"Home_fontLess__3aF4X\",\"opaqueLess\":\"Home_opaqueLess__1EMYG\",\"refresh\":\"Home_refresh__2Epj3\",\"aNoStyle\":\"Home_aNoStyle__3zzT_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paddingTop\":\"Signup_paddingTop__3HXmM\",\"centerItems\":\"Signup_centerItems__k192t\",\"fontLess\":\"Signup_fontLess__X2EvG\",\"opaqueLess\":\"Signup_opaqueLess__1t1Dw\",\"refresh\":\"Signup_refresh__26-ho\",\"errMessage\":\"Signup_errMessage__2DZ-o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paddingTop\":\"Login_paddingTop__217cV\",\"centerItems\":\"Login_centerItems__1sObU\",\"fontLess\":\"Login_fontLess__30mul\",\"opaqueLess\":\"Login_opaqueLess__3Bk5N\",\"refresh\":\"Login_refresh__3VAKS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paddingTop\":\"Post_paddingTop__MEynF\",\"centerItems\":\"Post_centerItems__2dmyQ\",\"fontLess\":\"Post_fontLess__hqyhX\",\"opaqueLess\":\"Post_opaqueLess__1M4G5\",\"refresh\":\"Post_refresh__1fCFf\"};"],"sourceRoot":""}