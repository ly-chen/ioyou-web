{"version":3,"sources":["constants/routes.tsx","components/Firebase/context.tsx","components/Firebase/firebase.tsx","components/Session/useSession.tsx","components/Home/Home.tsx","components/Profile/ProfilePage.tsx","components/Signup/SignupPage.tsx","components/Login/LoginPage.tsx","components/Post/Post.tsx","components/Question/Question.tsx","components/App/index.tsx","serviceWorker.ts","index.tsx","components/Question/Question.module.css","components/Profile/Profile.module.css","components/Home/Home.module.css","components/Signup/Signup.module.css","components/Login/Login.module.css","components/Post/Post.module.css"],"names":["ROUTES","FirebaseContext","createContext","useFirebase","useContext","config","apiKey","process","authDomain","databaseURL","projectId","messagingSenderId","SessionContext","auth","initializing","useSession","HomePage","firebase","session","useState","allFeed","setAllFeed","homeFeed","setHomeFeed","academic","setAcademic","bulletin","setBulletin","allLoadingDone","setAllLoadingDone","homeLoadingDone","setHomeLoadingDone","acadLoadingDone","setAcadLoadingDone","bulLoadingDone","setBulLoadingDone","nowSeconds","setNowSeconds","useEffect","seconds","Date","getTime","console","log","getChannels","a","db","collection","doc","uid","get","user","data","channelList","actives","Object","keys","filter","key","getPosts","sort","category","subjects","docList","query","orderBy","posts","undefined","length","limit","where","empty","forEach","id","i","numComments","size","loadPosts","feedLoadingView","style","paddingTop","Card","marginBottom","Body","Title","Text","Spinner","animation","feedView","feedList","map","object","time","timestamp","message","Math","floor","curTime","href","title","Subtitle","subjectObjects","channels","d","indexOf","Row","marginLeft","channelView","className","styles","fontLess","desc","authorName","feedCard","Navbar","bg","variant","Brand","Nav","Button","onClick","username","window","location","marginRight","doSignOut","reload","Container","Col","paddingLeft","paddingBottom","Tabs","defaultActiveKey","Tab","eventKey","marginTop","ProfilePage","useParams","setUser","userLoading","setUserLoading","userSelf","setUserSelf","editSubjects","setEditSubjects","change","setChange","lang","setLang","sci","setSci","ss","setSS","history","setHistory","historyDone","setHistoryDone","setActives","firestore","results","docs","userID","userResults","getUser","self","getSelf","subjectEdit","subject","activesEdit","name","paddingRight","update","active","DropdownButton","Dropdown","Item","entries","keyName","subjectsView","SignupPage","validated","setValidated","setName","setUsername","email","setEmail","password","setPassword","err","setErr","usernameErr","setUsernameErr","passCheck","setPassCheck","handling","setHandling","handleSubmit","event","preventDefault","currentTarget","checkValidity","stopPropagation","checkUsername","createUserWithEmailAndPassword","catch","e","newUser","set","then","Form","onSubmit","Group","controlId","Label","Control","required","type","placeholder","onChange","target","value","Feedback","match","Check","label","disabled","as","role","aria-hidden","LoginPage","doSignInWithEmailAndPassword","PostPage","setChannels","setChannelList","allChannels","setTitle","description","setDescription","input","setInput","newPost","Timestamp","now","author","functions","httpsCallable","array","index","splice","selectedView","strKeyword","replace","substr","toLowerCase","push","rows","postToView","QuestionPage","props","postid","setSelf","post","setPost","answer","setAnswer","comments","setComments","loadingDone","setLoadingDone","commentsDone","setCommentsDone","getComments","commentsList","selfDoc","postDoc","getPost","newComment","comment","parent","thread","MainApp","exact","path","AppWithAuth","currentUser","authObject","setAuthObject","unsubscribe","onAuthStateChanged","prevState","Provider","AppWithTwitter","getTwitterResult","useCallback","getRedirectResult","result","additionalUserInfo","credential","code","Boolean","hostname","ReactDOM","render","StrictMode","provider","doTwitterSignIn","signInWithRedirect","doCreateUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","app","apps","initializeApp","this","TwitterAuthProvider","App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","module","exports"],"mappings":"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","file":"static/js/main.b392b582.chunk.js","sourcesContent":["const ROUTES = {\n    ROOT: \"/\",\n    SIGNUP: \"/signup\",\n    LOGIN: \"/login\",\n    POST: \"/new\",\n    USERNAME: \"/user/:username\",\n    COMMENTS: \"/post/:postid\"\n}\n\nexport { ROUTES }","import { createContext, useContext } from 'react'\nimport { Firebase } from './firebase'\n\n\nconst FirebaseContext = createContext<Firebase>({} as Firebase)\n\nconst useFirebase = () => {\n    const firebase = useContext(FirebaseContext)\n\n    return firebase\n}\nexport { FirebaseContext, useFirebase }\n","import app from 'firebase/app'\nimport 'firebase/auth'\nimport 'firebase/firestore'\nimport 'firebase/functions'\n\nconst config = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n}\n\nclass Firebase {\n    auth: firebase.auth.Auth\n    db: firebase.firestore.Firestore\n    functions: firebase.functions.Functions\n    provider: firebase.auth.AuthProvider\n\n    constructor() {\n        if (!app.apps.length) {\n            app.initializeApp(config)\n        }\n        this.auth = app.auth()\n        // For ease of access. Note that db normally refers to Firebase Realtime Database.\n        this.db = app.firestore()\n        this.functions = app.functions()\n        this.provider = new app.auth.TwitterAuthProvider()\n    }\n\n    // *** Auth API ***\n\n    // twitter signin handler\n    doTwitterSignIn = async () => {\n        this.auth.signInWithRedirect(this.provider)\n    }\n\n    // email and password signin handlers\n    doCreateUserWithEmailAndPassword = (email: string, password: string) =>\n        this.auth.createUserWithEmailAndPassword(email, password)\n\n    doSignInWithEmailAndPassword = (email: string, password: string) =>\n        this.auth.signInWithEmailAndPassword(email, password)\n\n    doSignOut = () => this.auth.signOut()\n\n}\n\nexport { Firebase }\n","import { createContext, useContext } from 'react'\nimport firebase from 'firebase'\n\ninterface SessionObject {\n    initializing: boolean,\n    auth: firebase.User | null,\n}\n\nconst SessionContext = createContext<SessionObject>({\n    auth: {} as firebase.User,\n    initializing: true\n})\n\nconst useSession = () => {\n    const session = useContext(SessionContext)\n    return session\n}\n\nexport { SessionContext, useSession }\n\n","import React, { useState, useCallback, useEffect } from 'react'\nimport { useFirebase, Firebase } from '../Firebase'\nimport { Navbar, Nav, Button, ButtonGroup, Container, Row, Col, Spinner, Jumbotron, Image, ProgressBar, OverlayTrigger, Popover, Carousel, Card, Tabs, Tab, CardColumns } from 'react-bootstrap'\nimport { useSession } from '../Session'\nimport styles from './Home.module.css'\n\nconst HomePage: React.FC = () => {\n    const firebase = useFirebase()\n    const session = useSession()\n\n    const [allFeed, setAllFeed] = useState<any>(null)\n    const [homeFeed, setHomeFeed] = useState<any>(null)\n    const [academic, setAcademic] = useState<any>(null)\n    const [bulletin, setBulletin] = useState<any>(null)\n    const [channels, setChannels] = useState<Array<string>>([])\n\n    const [allLoadingDone, setAllLoadingDone] = useState<boolean>(false);\n    const [homeLoadingDone, setHomeLoadingDone] = useState<boolean>(false);\n    const [acadLoadingDone, setAcadLoadingDone] = useState<boolean>(false);\n    const [bulLoadingDone, setBulLoadingDone] = useState<boolean>(false);\n\n    const [nowSeconds, setNowSeconds] = useState<number>(0);\n\n    useEffect(() => {\n        var now = new Date();\n        var seconds = ((now.getTime()) * .001) >> 0;\n        setNowSeconds(seconds);\n\n        console.log(seconds)\n        //retrieves the most recent 10 posts\n        const getChannels = async () => {\n            try {\n                const user = await firebase.db.collection('users').doc(session.auth?.uid).get()\n                console.log('user = ', user.data())\n                const channelList = user.data()?.actives\n                console.log('channelList = ', channelList)\n                console.log('object.keys() = ', Object.keys(channelList).filter((key) => {\n                    return channelList[key] == true;\n                }))\n                return Object.keys(channelList).filter((key) => {\n                    return channelList[key] == true;\n                })\n            } catch (e) {\n                console.log(e)\n            }\n        }\n\n        const getPosts = async (sort: string, category: string, subjects: string[] | undefined) => {\n            try {\n                var docList: any[] = []\n                const query = firebase.db.collection('posts').orderBy(sort, \"desc\")\n\n                let posts = null;\n                console.log('subjects =', subjects)\n                if (subjects == undefined || subjects?.length == 0) {\n                    if (category === 'home') {\n                        posts = null\n                        setHomeLoadingDone(true)\n                    } else {\n                        posts = await query.limit(10).get()\n                    }\n\n\n                } else {\n                    if (category === 'home') {\n                        posts = await query.where('channels', 'array-contains-any', subjects).limit(10).get()\n                        console.log('posts = ', posts)\n                    } else {\n                        posts = await query.limit(10).get()\n                    }\n                }\n\n                if (posts?.empty || posts == null) {\n                    console.log('No matching documents')\n                    return;\n                }\n\n                posts.forEach(doc => {\n                    docList = [...docList, { id: doc.id, data: doc.data() }];\n                });\n\n                for (let i = 0; i < docList.length; i++) {\n                    const doc = docList[i]\n                    const numComments = await firebase.db.collection('comments').where('parent', '==', doc.id).get()\n                    docList[i] = { id: doc.id, data: doc.data, numComments: numComments.size }\n                }\n\n                if (category === 'all') {\n                    setAllFeed(docList)\n                    setAllLoadingDone(true)\n                }\n                if (category === 'home') {\n                    setHomeFeed(docList)\n                    setHomeLoadingDone(true)\n                }\n                if (category === 'academic') {\n                    setAcademic(docList)\n                    setAcadLoadingDone(true)\n                }\n                if (category === 'bulletin') {\n                    setBulletin(docList)\n                    setBulLoadingDone(true)\n                }\n            } catch (e) {\n                console.log(e)\n            }\n        }\n\n        const loadPosts = async () => {\n            let subjects: string[] | undefined = []\n            if (session.auth) {\n                subjects = await getChannels()\n            }\n\n            if (subjects == [] || subjects == undefined) {\n                getPosts('timestamp.seconds', 'all', undefined)\n                getPosts('timestamp.seconds', 'home', undefined)\n                getPosts('timestamp.seconds', 'academic', undefined)\n                getPosts('timestamp.seconds', 'bulletin', undefined)\n            } else {\n                getPosts('timestamp.seconds', 'all', subjects)\n                getPosts('timestamp.seconds', 'home', subjects)\n                getPosts('timestamp.seconds', 'academic', subjects)\n                getPosts('timestamp.seconds', 'bulletin', subjects)\n            }\n            console.log('subjects = ', subjects)\n        }\n\n        loadPosts()\n    }, [session, firebase])\n\n    //a feed object\n    const feedCard = (object: { id: string | number | undefined; data: { title: string; desc: string; timestamp: { seconds: number, nanoseconds: number }; author: string; channels: Array<string>; authorName: string }; numComments: number }) => {\n\n        var time = nowSeconds - object.data.timestamp.seconds;\n        var message = ''\n        if (time < 120) {\n            message = 'about a minute ago'\n        } else if (time < 3600) {\n            message = `${Math.floor(time / 60)} minutes ago`\n        } else if (time < 86400) {\n            let curTime = Math.floor(time / 3600)\n            if (curTime == 1) {\n                message = 'about an hour ago'\n            } else {\n                message = `${curTime} hours ago`\n            }\n        } else {\n            let curTime = Math.floor(time / 86400)\n            if (curTime == 1) {\n                message = 'yesterday'\n            } else {\n                message = `${curTime} days ago`\n            }\n        }\n\n        const channelView = () => {\n            const subjectObjects = object.data.channels?.map((d) => <p key={d}>{(object.data.channels.indexOf(d) == 0) ? `#${d}` : `, #${d}`}</p>)\n            return (\n                <div>\n                    <Row style={{ marginLeft: 1 }}>{subjectObjects}</Row>\n\n                </div>\n            )\n        }\n\n        return (\n\n            <Card style={{ marginBottom: 20 }}>\n                <Card.Body>\n                    <a href={`/post/${object.id}`}>\n                        <Card.Title>{object.data.title}</Card.Title>\n                    </a>\n                    <Card.Subtitle>{channelView()}</Card.Subtitle>\n                    <Card.Text className={styles.fontLess}> {object.data.desc}</Card.Text>\n                    <Card.Text className={styles.fontLess}>\n                        {object.numComments == 1 ?\n                            <a href={`/post/${object.id}`}>{object.numComments} comment</a>\n                            :\n                            <a href={`/post/${object.id}`}>{object.numComments} comments</a>\n                        }\n\n                        {' '} - posted by <a href={`/user/${object.data.authorName}`}>{`@${object.data.authorName}`}</a> - {message}\n                    </Card.Text>\n                </Card.Body>\n            </Card>\n\n            //\n        )\n    }\n\n    //loading animation while retrieving feed\n    const feedLoadingView = () => {\n        return (\n            <div style={{ paddingTop: 15 }}>\n\n                <Card style={{ marginBottom: 20 }}>\n                    <Card.Body>\n                        <Card.Title></Card.Title>\n                        <Card.Text></Card.Text>\n                        <Spinner animation=\"border\" />\n                    </Card.Body>\n                </Card>\n                <Card style={{ marginBottom: 20 }}>\n                    <Card.Body>\n                        <Card.Title></Card.Title>\n                        <Card.Text></Card.Text>\n                        <Spinner animation=\"border\" />\n                    </Card.Body>\n                </Card>\n                <Card style={{ marginBottom: 20 }}>\n                    <Card.Body>\n                        <Card.Title></Card.Title>\n                        <Card.Text></Card.Text>\n                        <Spinner animation=\"border\" />\n                    </Card.Body>\n                </Card>\n                <Card style={{ marginBottom: 20 }}>\n                    <Card.Body>\n                        <Card.Title></Card.Title>\n                        <Card.Text></Card.Text>\n                        <Spinner animation=\"border\" />\n                    </Card.Body>\n                </Card>\n                <Card style={{ marginBottom: 20 }}>\n                    <Card.Body>\n                        <Card.Title></Card.Title>\n                        <Card.Text></Card.Text>\n                        <Spinner animation=\"border\" />\n                    </Card.Body>\n                </Card>\n            </div>\n\n        )\n    }\n\n    //list of feed objects\n    const feedView = (feedList: { id: string | number | undefined; data: { title: string; desc: string; timestamp: { seconds: number; nanoseconds: number }; author: string; channels: string[]; authorName: string }; numComments: number }[]) => {\n        const feedItems = feedList.map((object: { id: string | number | undefined; data: { title: string; desc: string; timestamp: { seconds: number, nanoseconds: number }; author: string; channels: Array<string>; authorName: string }; numComments: number }) => <div key={object.id} style={{ paddingTop: 15 }}>{feedCard(object)}</div>\n        )\n        return feedItems\n    }\n\n    return (\n        <div>\n            <Navbar bg=\"light\" variant=\"light\">\n                <Navbar.Brand href=\"/\">\n                    {' '}\n                            ioyou\n                    </Navbar.Brand>\n                <Nav className=\"ml-auto\">\n                    {session.auth ?\n                        <div>\n                            <Button variant=\"light\" onClick={async () => {\n                                const user = await firebase.db.collection('users').doc(session?.auth?.uid).get()\n                                const username = user?.data()?.username\n                                window.location.href = `/user/${username}`\n                            }} style={{ marginRight: 10 }}>\n                                Profile\n                            </Button>\n                            <Button href=\"/new\" variant=\"outline-dark\" style={{ marginRight: 10 }}>Create Post</Button>\n                            <Button variant=\"light\" onClick={() => {\n                                firebase.doSignOut()\n                                window.location.reload()\n                            }}>\n                                sign out\n                            </Button>\n                        </div>\n\n                        :\n                        <div>\n                            <Button variant=\"outline-dark\" href=\"/login\" style={{ marginRight: 10 }}>\n                                log in\n                                </Button>\n\n                            <Button variant=\"light\" href=\"/signup\">\n                                sign up\n                                </Button>\n                        </div>\n                    }\n\n                </Nav>\n            </Navbar>\n            <Container className={styles.paddingTop}>\n                <Row>\n                    <Col>\n                        <h1 style={{ paddingLeft: 22, paddingBottom: 15 }}>Feed</h1>\n                    </Col>\n                    <Col>\n\n                    </Col>\n                </Row>\n                <Tabs defaultActiveKey={session.auth ? 'Home' : 'All'} id=\"feed-nav\">\n                    <Tab eventKey=\"All\" title=\"All\">\n                        {\n                            allFeed ?\n                                feedView(allFeed)\n                                :\n                                allLoadingDone ?\n                                    <Card style={{ marginTop: 15 }}>\n                                        <Card.Body>\n                                            <Card.Text>We're encounter errors. Try again later?</Card.Text>\n                                        </Card.Body>\n                                    </Card>\n                                    :\n                                    feedLoadingView()\n                        }\n                    </Tab>\n                    <Tab eventKey=\"Home\" title=\"Home\">\n                        {\n                            homeFeed ?\n                                feedView(homeFeed)\n                                :\n                                homeLoadingDone ?\n                                    session.auth ?\n                                        <Card style={{ marginTop: 15 }}>\n                                            <Card.Body>\n                                                <Card.Text>Subscribe to channels in your Profile page.</Card.Text>\n                                            </Card.Body>\n                                        </Card>\n                                        :\n                                        <Card style={{ marginTop: 15 }}>\n                                            <Card.Body>\n                                                <Card.Text>Create an account to subscribe to specific channels.</Card.Text>\n                                            </Card.Body>\n                                        </Card>\n                                    :\n                                    feedLoadingView()\n                        }\n                    </Tab>\n                    <Tab eventKey=\"Academic\" title=\"Academic\">\n                        {\n                            academic ?\n                                feedView(academic)\n                                :\n                                acadLoadingDone ?\n                                    session.auth ?\n                                        <Card style={{ marginTop: 15 }}>\n                                            <Card.Body>\n                                                <Card.Text>Subscribe to channels in your Profile page.</Card.Text>\n                                            </Card.Body>\n                                        </Card>\n                                        :\n                                        <Card style={{ marginTop: 15 }}>\n                                            <Card.Body>\n                                                <Card.Text>Create an account to subscribe to specific channels.</Card.Text>\n                                            </Card.Body>\n                                        </Card>\n                                    :\n                                    feedLoadingView()\n                        }\n                    </Tab>\n                    <Tab eventKey=\"Bulletin\" title=\"Bulletin\">\n                        {\n                            bulletin ?\n                                feedView(bulletin)\n                                :\n                                bulLoadingDone ?\n                                    <Card style={{ marginTop: 15 }}>\n                                        <Card.Body>\n                                            <Card.Text>We're encounter errors. Try again later?</Card.Text>\n                                        </Card.Body>\n                                    </Card>\n                                    :\n                                    feedLoadingView()\n                        }\n                    </Tab>\n                </Tabs>\n            </Container>\n        </div>\n    )\n}\n\nexport { HomePage }\n","import React, { useState, useCallback, useEffect } from 'react'\nimport { useParams } from 'react-router-dom';\nimport { useFirebase, Firebase } from '../Firebase'\nimport { firestore } from 'firebase'\nimport { Navbar, Nav, Button, DropdownButton, Dropdown, Container, Row, Col, Spinner, Jumbotron, Image, ProgressBar, OverlayTrigger, Popover, Carousel, Card } from 'react-bootstrap'\nimport { useSession } from '../Session'\nimport styles from './Profile.module.css'\n\nconst ProfilePage: React.FC = () => {\n    const { username } = useParams()\n    const firebase = useFirebase()\n    const session = useSession()\n\n    const [user, setUser] = useState<any>(null);\n    const [userLoading, setUserLoading] = useState<boolean>(true);\n\n    const [userSelf, setUserSelf] = useState<boolean>(false);\n    const [editSubjects, setEditSubjects] = useState<boolean>(false);\n\n    const [change, setChange] = useState<boolean>(false);\n    const [lang, setLang] = useState<boolean>(false)\n    const [sci, setSci] = useState<boolean>(false)\n    const [ss, setSS] = useState<boolean>(false);\n\n    const [history, setHistory] = useState<any>(null);\n\n    const [historyDone, setHistoryDone] = useState<boolean>(false);\n\n\n    //list of subjects\n    const [actives, setActives] = useState<any>({});\n\n    useEffect(() => {\n        const getUser = async () => {\n            const results = await firestore().collection('users').where('username', '==', username).limit(1).get();\n            if (results.empty) {\n                console.log('empty');\n                setUserLoading(false);\n            } else {\n\n                const userID = await results.docs[0].id\n                const userResults = await results.docs[0].data()\n                setUser(userResults)\n                setActives(userResults.actives)\n\n                if (userResults.actives) {\n                    if (userResults.actives['French'] || userResults.actives['Mandarin'] || userResults.actives['Spanish'] || userResults.actives['Languages (General)']) {\n                        setLang(true)\n                    }\n\n                    if (userResults.actives['Biology'] || userResults.actives['Chemistry'] || userResults.actives['Physics'] || userResults.actives['Sciences (General)']) {\n                        setSci(true)\n                    }\n\n                    if (userResults.actives['Psychology'] || userResults.actives['Sociology'] || userResults.actives['Social Sciences (General)']) {\n                        setSS(true)\n                    }\n                }\n                console.log('userResults = ', userResults)\n                console.log('userResults.uid = ', userResults.uid)\n\n                const getPosts = async (sort: string) => {\n                    try {\n                        var docList: any[] = []\n                        const posts = await firebase.db.collection('posts').orderBy(sort, \"desc\").where('author', '==', userID).limit(10).get()\n\n\n                        if (posts.empty || posts == null) {\n                            console.log('No matching documents')\n                            setHistoryDone(true);\n                            return;\n                        }\n                        posts.forEach(doc => {\n                            docList = [...docList, { id: doc.id, data: doc.data() }];\n                        });\n\n                        setHistory(docList)\n                        console.log('docList = ', docList)\n                        setHistoryDone(true)\n                    } catch (e) {\n                        console.log(e)\n                        setHistoryDone(true)\n                    }\n                }\n\n\n                getPosts('timestamp.seconds');\n                setUserLoading(false);\n            }\n        }\n\n        getUser();\n\n        if (session.auth) {\n            const getSelf = async () => {\n                const self = await firestore().collection('users').doc(session?.auth?.uid).get()\n                if (self?.data()?.username == username) {\n                    setUserSelf(true);\n                }\n            }\n\n\n            getSelf();\n        }\n\n    }, [session, firebase])\n\n    const subjectsView = () => {\n        console.log('subjectsView is triggered')\n        const subjectObjects = Object.entries(actives).map(([keyName, keyIndex]) =>\n            // use keyName to get current key's name\n            // and a[keyName] to get its value\n            actives[keyName] ?\n                <Button key={keyName} active variant='outline-dark' style={{ marginRight: 15, marginBottom: 15 }}>{keyName}</Button>\n                :\n                <div key={keyName}></div>\n\n        )\n        console.log('subjectObjects = ', subjectObjects)\n        return (\n            <Row style={{ paddingTop: 15, paddingLeft: 15 }}>\n                {subjectObjects}\n            </Row>\n        )\n    }\n\n    const subjectEdit = (subject: string) => {\n        let activesEdit = actives;\n        if (actives[subject] == true) {\n            activesEdit[subject] = false;\n            setActives(activesEdit)\n        } else {\n            activesEdit[subject] = true;\n            setActives(activesEdit);\n        }\n    }\n\n\n    const editSubjectsView = () => {\n\n        return (\n            <Row style={{ paddingTop: 15, paddingLeft: 15 }}>\n                <Button active={actives['Arts']} variant='outline-dark' style={{ marginRight: 15, marginBottom: 15 }}\n                    onClick={() => {\n                        subjectEdit('Arts')\n                        setChange(!change);\n                    }}\n                >\n                    Arts\n                </Button>\n                <Button active={actives['Business']} variant='outline-dark' style={{ marginRight: 15, marginBottom: 15 }}\n                    onClick={() => {\n                        subjectEdit('Business')\n                        setChange(!change);\n                    }}\n                >\n                    Business</Button>\n                <Button variant='outline-dark' active={actives['Computer Science']} style={{ marginRight: 15, marginBottom: 15 }}\n                    onClick={() => {\n                        subjectEdit('Computer Science')\n                        setChange(!change);\n                    }}\n                >\n                    Computer Science\n                </Button>\n                <Button variant='outline-dark' active={actives['Economics']} style={{ marginRight: 15, marginBottom: 15 }}\n                    onClick={() => {\n                        subjectEdit('Economics')\n                        setChange(!change);\n                    }}\n                >\n                    Economics</Button>\n                <Button variant='outline-dark' active={actives['Finance']} style={{ marginRight: 15, marginBottom: 15 }}\n                    onClick={() => {\n                        subjectEdit('Finance')\n                        setChange(!change);\n                    }}\n                >\n                    Finance</Button>\n                <Button variant='outline-dark' active={actives['History']} style={{ marginRight: 15, marginBottom: 15 }}\n                    onClick={() => {\n                        subjectEdit('History')\n                        setChange(!change);\n                    }}\n                >\n                    History</Button>\n                <Button variant='outline-dark' active={actives['Humanities']} style={{ marginRight: 15, marginBottom: 15 }}\n                    onClick={() => {\n                        subjectEdit('Humanities')\n                        setChange(!change);\n                    }}\n                >\n                    Humanities</Button>\n                <DropdownButton id=\"lang\" title=\"Languages\" variant={lang ? 'dark' : 'outline-dark'} style={{ marginRight: 15, marginBottom: 15 }}>\n                    <Dropdown.Item active={actives['French']} onClick={() => {\n                        subjectEdit('French')\n                        setChange(!change);\n                        if (actives['French'] || actives['Mandarin'] || actives['Spanish'] || actives['Languages (General)']) {\n                            setLang(true)\n                        } else {\n                            setLang(false)\n                        }\n                    }}>\n                        French\n                    </Dropdown.Item>\n                    <Dropdown.Item active={actives['Mandarin']} onClick={() => {\n                        subjectEdit('Mandarin')\n                        setChange(!change);\n                        if (actives['French'] || actives['Mandarin'] || actives['Spanish'] || actives['Languages (General)']) {\n                            setLang(true)\n                        } else {\n                            setLang(false)\n                        }\n                    }}>\n                        Mandarin\n                    </Dropdown.Item >\n                    <Dropdown.Item active={actives['Spanish']} onClick={() => {\n                        subjectEdit('Spanish')\n                        setChange(!change);\n                        if (actives['French'] || actives['Mandarin'] || actives['Spanish'] || actives['Languages (General)']) {\n                            setLang(true)\n                        } else {\n                            setLang(false)\n                        }\n                    }}>\n                        Spanish\n                    </Dropdown.Item>\n                    <Dropdown.Item active={actives['Languages (General)']} onClick={() => {\n                        subjectEdit('Languages (General)')\n                        setChange(!change);\n                        if (actives['French'] || actives['Mandarin'] || actives['Spanish'] || actives['Languages (General)']) {\n                            setLang(true)\n                        } else {\n                            setLang(false)\n                        }\n                    }}>\n                        General\n                    </Dropdown.Item>\n                </DropdownButton>\n                <Button variant='outline-dark' style={{ marginRight: 15, marginBottom: 15 }} active={actives['Mathematics']} onClick={() => {\n                    subjectEdit('Mathematics')\n                    setChange(!change);\n                }}>\n                    Mathematics\n                </Button>\n                <DropdownButton id=\"sci\" title=\"Sciences\" variant={sci ? 'dark' : 'outline-dark'} style={{ marginRight: 15, marginBottom: 15 }}>\n                    <Dropdown.Item active={actives['Biology']} onClick={() => {\n                        subjectEdit('Biology')\n                        setChange(!change);\n                        if (actives['Biology'] || actives['Chemistry'] || actives['Physics'] || actives['Sciences (General)']) {\n                            setSci(true)\n                        } else {\n                            setSci(false)\n                        }\n                    }}>\n                        Biology\n                    </Dropdown.Item>\n                    <Dropdown.Item active={actives['Chemistry']} onClick={() => {\n                        subjectEdit('Chemistry')\n                        setChange(!change);\n                        if (actives['Biology'] || actives['Chemistry'] || actives['Physics'] || actives['Sciences (General)']) {\n                            setSci(true)\n                        } else {\n                            setSci(false)\n                        }\n                    }}>\n                        Chemistry\n                    </Dropdown.Item>\n                    <Dropdown.Item active={actives['Physics']} onClick={() => {\n                        subjectEdit('Physics')\n                        setChange(!change);\n                        if (actives['Biology'] || actives['Chemistry'] || actives['Physics'] || actives['Sciences (General)']) {\n                            setSci(true)\n                        } else {\n                            setSci(false)\n                        }\n                    }}>\n                        Physics\n                    </Dropdown.Item>\n                    <Dropdown.Item active={actives['Sciences (General)']} onClick={() => {\n                        subjectEdit('Sciences (General)')\n                        setChange(!change);\n                        if (actives['Biology'] || actives['Chemistry'] || actives['Physics'] || actives['Sciences (General)']) {\n                            setSci(true)\n                        } else {\n                            setSci(false)\n                        }\n                    }}>\n                        General\n                    </Dropdown.Item>\n                </DropdownButton>\n                <DropdownButton id=\"lang\" title=\"Social Sciences\" variant={ss ? 'dark' : 'outline-dark'} style={{ marginRight: 15, marginBottom: 15 }} >\n                    <Dropdown.Item active={actives['Psychology']} onClick={() => {\n                        subjectEdit('Psychology')\n                        setChange(!change);\n                        if (actives['Psychology'] || actives['Sociology'] || actives['Social Sciences (General)']) {\n                            setSS(true)\n                        } else {\n                            setSS(false)\n                        }\n                    }}>\n                        Psychology\n                    </Dropdown.Item>\n                    <Dropdown.Item active={actives['Sociology']} onClick={() => {\n                        subjectEdit('Sociology')\n                        setChange(!change);\n                        if (actives['Psychology'] || actives['Sociology'] || actives['Social Sciences (General)']) {\n                            setSS(true)\n                        } else {\n                            setSS(false)\n                        }\n                    }}>\n                        Sociology\n                    </Dropdown.Item>\n                    <Dropdown.Item active={actives['Social Sciences (General)']} onClick={() => {\n                        subjectEdit('Social Sciences (General)')\n                        setChange(!change);\n                        if (actives['Psychology'] || actives['Sociology'] || actives['Social Sciences (General)']) {\n                            setSS(true)\n                        } else {\n                            setSS(false)\n                        }\n                    }}>\n                        General\n                    </Dropdown.Item>\n                </DropdownButton>\n                <Button variant='outline-dark' style={{ marginRight: 15, marginBottom: 15 }} active={actives['General']} onClick={() => {\n                    subjectEdit('General')\n                    setChange(!change);\n                }}>General</Button>\n            </Row>\n        )\n    }\n\n    //a feed object\n    const feedCard = (object: { id: string | number | undefined; data: { title: string; desc: string; timestamp: { seconds: number, nanoseconds: number }; author: string; channels: Array<string>; authorName: string } }) => {\n\n        const channelView = () => {\n            const subjectObjects = object.data.channels?.map((d) => <p key={d}>{(object.data.channels.indexOf(d) == 0) ? `#${d}` : `, #${d}`}</p>)\n            return (\n                <div>\n                    <Row style={{ marginLeft: 1 }}>{subjectObjects}</Row>\n\n                </div>\n            )\n        }\n\n        return (\n\n            <Card style={{ marginBottom: 20 }}>\n                <Card.Body>\n                    <a href={`/post/${object.id}`}>\n                        <Card.Title>{object.data.title}</Card.Title>\n                    </a>\n                    <Card.Subtitle>{channelView()}</Card.Subtitle>\n                    <Card.Text className={styles.fontLess}> {object.data.desc}</Card.Text>\n                    <Card.Text className={styles.fontLess}>Posted by {`@${object.data.authorName}`} at {object.data.timestamp.seconds}</Card.Text>\n                </Card.Body>\n            </Card>\n\n            //\n        )\n    }\n\n    //list of feed objects\n    const feedView = (feedList: { id: string | number | undefined; data: { title: string; desc: string; timestamp: { seconds: number; nanoseconds: number }; author: string; channels: string[]; authorName: string } }[]) => {\n        const feedItems = feedList.map((object: { id: string | number | undefined; data: { title: string; desc: string; timestamp: { seconds: number, nanoseconds: number }; author: string; channels: Array<string>; authorName: string } }) => <div key={object.id} style={{ paddingTop: 15 }}>{feedCard(object)}</div>\n        )\n        return feedItems\n    }\n\n    console.log('actives = ', actives);\n    return (\n        <div>\n            <Navbar bg=\"light\" variant=\"light\">\n                <Navbar.Brand href=\"/\">\n                    {' '}\n                            ioyou\n                    </Navbar.Brand>\n                <Nav className=\"ml-auto\">\n                    {session.auth ?\n                        <div>\n                            <Button variant=\"light\" onClick={async () => {\n                                const user = await firebase.db.collection('users').doc(session?.auth?.uid).get()\n                                const username = user?.data()?.username\n                                window.location.href = `/user/${username}`\n                            }} style={{ marginRight: 10 }}>\n                                Profile\n                            </Button>\n                            <Button href=\"/post\" variant=\"outline-dark\" style={{ marginRight: 10 }}>Create Post</Button>\n                            <Button variant=\"light\" onClick={() => {\n                                setUserSelf(false);\n                                firebase.doSignOut()\n                            }}>\n                                sign out\n                            </Button>\n                        </div>\n\n                        :\n                        <div>\n                            <Button variant=\"outline-dark\" href=\"/login\" style={{ marginRight: 10 }}>\n                                log in\n                                </Button>\n\n                            <Button variant=\"light\" href=\"/signup\">\n                                sign up\n                                </Button>\n                        </div>\n                    }\n\n                </Nav>\n            </Navbar>\n            {userLoading ?\n                <Container className={styles.paddingTop}>\n                    <Spinner animation=\"border\" />\n                </Container>\n                :\n                user ?\n                    <Container className={styles.paddingTop}>\n                        <Card>\n                            <Card.Body>\n                                <Row>\n                                    <Col>\n                                        <h2>@{username}</h2>\n                                        <h2>{user.name}</h2>\n                                    </Col>\n                                    <Col>\n                                        <h3>Credits: </h3>\n                                    </Col>\n                                </Row>\n\n\n                                <hr></hr>\n\n                                <Row style={{ paddingLeft: 15 }}>\n                                    <h3 style={{ paddingRight: 15 }}>Channels</h3>\n                                    {userSelf ?\n                                        editSubjects ?\n                                            <Button variant=\"outline-dark\" onClick={async () => {\n                                                setEditSubjects(false)\n                                                await firestore().collection('users').doc(session.auth?.uid).update({ actives: actives })\n\n                                            }}>Save</Button>\n                                            :\n                                            <Button variant=\"outline-dark\" onClick={() => { setEditSubjects(true) }}>Edit</Button>\n                                        :\n                                        <div></div>\n                                    }\n                                </Row>\n                                {\n                                    editSubjects ?\n                                        editSubjectsView()\n                                        :\n                                        actives ?\n                                            subjectsView()\n                                            :\n                                            <div>This is triggering</div>\n                                }\n                            </Card.Body>\n\n                        </Card>\n\n                        <h2 style={{ paddingTop: 50, paddingLeft: 22 }}>Post History</h2>\n\n                        {history\n                            ?\n                            <div>\n\n                                {feedView(history)}\n                            </div>\n                            :\n                            historyDone ?\n                                <h3 style={{ paddingTop: 15 }}>No posts.</h3>\n                                :\n                                <div style={{ marginTop: 15 }}>\n                                    <Spinner animation=\"border\" />\n                                </div>\n\n                        }\n\n                    </Container>\n                    :\n                    <Container className={styles.paddingTop}>\n                        <h1>User does not exist.</h1>\n                    </Container>\n            }\n\n\n\n        </div>\n    )\n}\n\nexport { ProfilePage }\n","import React, { useState, useEffect } from 'react';\nimport { Navbar, Nav, Button, ButtonGroup, Container, Row, Col, Form, OverlayTrigger, Spinner } from 'react-bootstrap'\nimport styles from './Signup.module.css'\nimport { auth, firestore } from 'firebase'\nimport { useFirebase, Firebase } from '../Firebase'\nimport { useSession } from '../Session'\nimport { AnyCnameRecord } from 'dns';\n\nconst SignupPage: React.FC = () => {\n    const firebase = useFirebase()\n    const session = useSession()\n\n    const [validated, setValidated] = useState<boolean>(false);\n    const [name, setName] = useState<string>('')\n    const [username, setUsername] = useState<string>('')\n    const [email, setEmail] = useState<string>('')\n    const [password, setPassword] = useState<string>('')\n    const [err, setErr] = useState<string>('')\n    const [usernameErr, setUsernameErr] = useState<string>('')\n    const [passCheck, setPassCheck] = useState<boolean>(false);\n\n    const [handling, setHandling] = useState<boolean>(false);\n\n\n    useEffect(() => {\n        if (session.auth && (handling == false)) {\n            window.location.href = \"/\"\n        }\n    }, [session, firebase])\n\n    const handleSubmit = async (event: any) => {\n        event.preventDefault();\n        setHandling(true)\n        console.log('name = ', name)\n        console.log('username = ', username)\n        console.log('email = ', email)\n        console.log('password = ', password)\n        console.log(event.currentTarget)\n        if (event.currentTarget.checkValidity() === false || passCheck === false || usernameErr.length > 0) {\n            console.log(validated);\n            event.preventDefault();\n            event.stopPropagation();\n        } else {\n            const results = await checkUsername(username);\n            if (results > 0) {\n                setUsernameErr('Already taken.')\n            } else {\n                try {\n                    console.log('this is triggered')\n                    const newUser = await auth().createUserWithEmailAndPassword(email, password).catch(e => { console.log(e) })\n                    if (newUser) {\n                        console.log('this is triggered 2')\n                        const uid = newUser?.user?.uid\n                        await firestore().collection('users').doc(uid).set({ name: name, username: username, actives: { 'Arts': false, 'Biology': false, 'Business': false, 'Computer Science': false, 'Economics': false, 'Finance': false, 'French': false, 'General': false, 'Humanities': false, 'Languages (General)': false, 'Mandarin': false, 'Psychology': false, 'Spanish': false } }).then(() => {\n                            window.location.href = `/user/${username}`\n                        })\n                    }\n                    setValidated(true);\n                } catch (e) {\n                    console.log(e);\n                    setErr(e.message);\n                }\n            }\n        }\n    }\n\n    const checkUsername = async (username: string) => {\n        const results = await firestore().collection('users').where('username', '==', username).limit(1).get();\n        return results.size;\n    }\n\n    const handleChangeName = (event: any) => {\n        setName(event.target.value)\n    }\n\n    const handleChangeUsername = (event: any) => {\n        setUsername(event.target.value)\n        if (event.target.value.length > 15) {\n            setUsernameErr('Too long. Usernames should be < 15 characters.')\n        } else {\n            setUsernameErr('')\n        }\n    }\n\n    const handleChangeEmail = (event: any) => {\n        setEmail(event.target.value)\n    }\n\n    const handleChangePassword = (event: any) => {\n        var check = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?!.*\\s).{8,30}$/;\n        setPassword(event.target.value);\n        if (event.target.value.match(check)) {\n            setPassCheck(true);\n            console.log('passCheck')\n        } else {\n            setPassCheck(false);\n            console.log('failCheck')\n        }\n    }\n\n    return (\n        <div>\n            <Navbar bg=\"light\" variant=\"light\">\n                <Navbar.Brand href=\"/\">\n                    {' '}\n                            ioyou\n                    </Navbar.Brand>\n                <Nav className='ml-auto'></Nav>\n                <Button variant=\"outline-dark\">\n                    log in\n                        </Button>\n            </Navbar>\n            <Container className={styles.paddingTop} style={{ paddingBottom: 10 }}>\n                <Form validated={validated} onSubmit={handleSubmit}>\n\n                    <Form.Group controlId=\"formBasicName\">\n                        <Form.Label>Name</Form.Label>\n                        <Form.Control required type=\"text\" placeholder=\"Jane Doe\" onChange={handleChangeName} value={name} />\n                        <Form.Control.Feedback type=\"invalid\">\n                            Please provide a name.\n                        </Form.Control.Feedback>\n                    </Form.Group>\n\n                    <Form.Group controlId=\"formBasicName\">\n                        <Form.Label>Username</Form.Label>\n                        <Form.Control required type=\"text\" placeholder=\"username\" onChange={handleChangeUsername} value={username} />\n                        <Form.Text className=\"text-danger\">\n                            {usernameErr}\n                        </Form.Text>\n                    </Form.Group>\n\n                    <Form.Group controlId=\"formBasicEmail\">\n                        <Form.Label>Email address</Form.Label>\n                        <Form.Control required type=\"email\" placeholder=\"jdoe@email.com\" onChange={handleChangeEmail} value={email} />\n                        <Form.Control.Feedback type=\"invalid\">\n                            Please provide an email.\n                        </Form.Control.Feedback>\n                    </Form.Group>\n\n                    <Form.Group controlId=\"formBasicPassword\">\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control required type=\"password\" placeholder=\"Password\" onChange={handleChangePassword} value={password} />\n                        {passCheck ?\n                            <Form.Text className=\"text-success\">\n                                Looks good!\n                            </Form.Text>\n                            :\n                            <Form.Text className=\"text-danger\">\n                                At least 8 characters and contain an uppercase letter, lowercase letter, number, and special character.\n                            </Form.Text>\n                        }\n                    </Form.Group>\n                    <Form.Group controlId=\"formBasicCheckbox\">\n                        <Form.Check required type=\"checkbox\" label=\"I agree to the terms and conditions.\" />\n                    </Form.Group>\n\n                    {handling ?\n                        <Button variant=\"primary\" disabled>\n                            <Spinner\n                                as=\"span\"\n                                animation=\"border\"\n                                size=\"sm\"\n                                role=\"status\"\n                                aria-hidden=\"true\"\n                            />\n                        </Button>\n                        :\n                        <Button variant=\"primary\" type=\"submit\">\n                            Submit\n                    </Button>\n                    }\n\n                </Form>\n                <p className=\"text-danger\">{err}</p>\n            </Container>\n        </div>\n    )\n}\n\nexport { SignupPage }","import React, { useState, useEffect } from 'react';\nimport { Navbar, Nav, Button, ButtonGroup, Container, Row, Col, Form, Spinner, FormControl } from 'react-bootstrap'\nimport { useFirebase, Firebase } from '../Firebase'\nimport { useSession } from '../Session'\nimport styles from './Login.module.css'\n\nconst LoginPage: React.FC = () => {\n    const firebase = useFirebase()\n    const session = useSession()\n\n    const [validated, setValidated] = useState<boolean>(false);\n    const [email, setEmail] = useState<string>('')\n    const [password, setPassword] = useState<string>('')\n    const [err, setErr] = useState<string>('')\n\n    const [handling, setHandling] = useState<boolean>(false)\n\n    useEffect(() => {\n        if (session.auth && validated) {\n            window.location.href = '/'\n        }\n    }, [session, firebase])\n\n    const handleSubmit = async (event: any) => {\n        event.preventDefault();\n        setHandling(true);\n        console.log('email = ', email)\n        console.log('password = ', password)\n        console.log(event.currentTarget)\n        if (event.currentTarget.checkValidity() === false) {\n            console.log(validated);\n            event.preventDefault();\n            event.stopPropagation();\n        } else {\n            try {\n                await firebase.doSignInWithEmailAndPassword(email, password)\n                setValidated(true);\n                window.location.href = \"/\"\n            } catch (e) {\n                console.log(e);\n                setErr(e.message);\n            }\n        }\n        console.log(validated);\n    }\n\n    const handleChangeEmail = (event: any) => {\n        setEmail(event.target.value)\n    }\n\n    const handleChangePassword = (event: any) => {\n        setPassword(event.target.value)\n    }\n\n    return (\n        <div>\n            <Navbar bg=\"light\" variant=\"light\">\n                <Navbar.Brand href=\"/\">\n                    {' '}\n                            ioyou\n                    </Navbar.Brand>\n                <Nav className='ml-auto'>\n                    <Button variant=\"outline-dark\" href=\"/signup\">\n                        sign up\n                    </Button>\n                </Nav>\n\n            </Navbar>\n            <Container className={styles.paddingTop}>\n                <Form validated={validated} onSubmit={handleSubmit}>\n                    <Form.Group controlId=\"formBasicEmail\">\n                        <Form.Label>Email address</Form.Label>\n                        <Form.Control required type=\"email\" placeholder=\"Enter email\" onChange={handleChangeEmail} value={email} />\n                    </Form.Group>\n                    <Form.Group controlId=\"formBasicPassword\">\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control required type=\"password\" placeholder=\"Password\" onChange={handleChangePassword} value={password} />\n                    </Form.Group>\n                    {handling ?\n                        <Button variant=\"primary\" disabled>\n                            <Spinner\n                                as=\"span\"\n                                animation=\"border\"\n                                size=\"sm\"\n                                role=\"status\"\n                                aria-hidden=\"true\"\n                            />\n                        </Button>\n                        :\n                        <Button variant=\"primary\" type=\"submit\" style={{ marginTop: 10 }}>\n                            Log in\n                        </Button>\n                    }\n\n                </Form>\n                <p className=\"text-danger\">{err}</p>\n            </Container>\n        </div>\n    )\n}\n\nexport { LoginPage }","import React, { useState, useEffect } from 'react'\nimport { useFirebase, Firebase } from '../Firebase'\nimport { functions, auth, firestore } from 'firebase'\nimport { Navbar, Nav, Button, ButtonGroup, Container, Row, Col, Spinner, Jumbotron, Image, ProgressBar, OverlayTrigger, Popover, Carousel, Card, Form } from 'react-bootstrap'\nimport { useSession } from '../Session'\nimport styles from './Post.module.css'\n\nconst PostPage: React.FC = () => {\n    const firebase = useFirebase()\n    const session = useSession()\n\n    const [channels, setChannels] = useState<Array<string>>([])\n    const [channelList, setChannelList] = useState<Array<string>>([])\n    const [allChannels, setAllChannels] = useState<Array<string>>(['Arts', 'Business', 'Computer Science', 'Economics', 'Finance', 'History', 'Humanities', 'French', 'Mandarin', 'Spanish', 'Languages (General)', 'Mathematics', 'Biology', 'Chemistry', 'Physics', 'Sciences (General)', 'Psychology', 'Sociology', 'Social Sciences (General)', 'General'])\n    const [title, setTitle] = useState<string>(\"\")\n    const [description, setDescription] = useState<string>(\"\")\n\n    const [err, setErr] = useState<string>(\"\")\n\n    const [handling, setHandling] = useState<boolean>(false)\n\n    const [input, setInput] = useState<string>(\"\")\n\n    const [name, setName] = useState<string>(\"\")\n\n    useEffect(() => {\n        if (!session.auth) {\n            window.location.href = \"/\"\n        } else {\n            const getUser = async () => {\n                const user = await firestore().collection('users').doc(session.auth?.uid).get()\n                setName(user.data()?.username)\n            }\n            getUser()\n        }\n    }, [session, firebase])\n\n    const handleChannelChange = (event: any) => {\n        setInput(event.target.value)\n        if (event.target.value.length > 0) {\n            let strKeyword = event.target.value\n            let subjects = []\n            for (let i = 0; i < allChannels.length; i++) {\n                if (allChannels[i].replace(/[^a-zA-Z0-9]/g, \"\").substr(0, strKeyword.length).toLowerCase() == strKeyword.toLowerCase()) {\n                    subjects.push(allChannels[i])\n                }\n            }\n            setChannelList(subjects)\n        } else {\n            setChannelList([])\n        }\n    }\n\n    const subjectsView = () => {\n        const subjectObjects = channelList.map((d) => <Button variant=\"outline-dark\" key={d} style={{ marginRight: 15, marginBottom: 15 }} onClick={() => {\n            if (channels.length > 9) {\n                setErr('Maximum 10 channels')\n            } else {\n                setErr('')\n                setInput('')\n                setChannelList([])\n                if (channels.indexOf(d) != -1) {\n                    return\n                } else {\n                    setChannels([...channels, d])\n                }\n\n            }\n        }}>{d}</Button>)\n        return (\n            <div>\n                {subjectObjects}\n            </div>\n        )\n    }\n\n    const selectedView = () => {\n        const subjectObjects = channels.map((d) => <Button variant=\"dark\" key={d} style={{ marginRight: 15, marginBottom: 15 }} onClick={() => {\n            var array = [...channels]; // make a separate copy of the array\n            var index = array.indexOf(d)\n            if (index !== -1) {\n                array.splice(index, 1);\n                setChannels(array);\n            }\n            if (channels.length < 11) {\n                setErr('')\n            }\n        }}>{d}</Button>)\n        return (\n            <div>\n                {subjectObjects}\n            </div>\n        )\n    }\n\n    const postToView = () => {\n        const subjectObjects = channels.map((d) => <p key={d}>{(channels.indexOf(d) == 0) ? `to ${d}` : `, ${d}`}</p>)\n        return (\n            <Row style={{ marginTop: 15, marginLeft: 15 }}>\n                {subjectObjects}\n            </Row>\n        )\n    }\n\n    const handleTitleChange = (event: any) => {\n        setTitle(event.target.value)\n    }\n\n    const handleDescriptionChange = (event: any) => {\n        setDescription(event.target.value)\n    }\n\n    const handleSubmit = async (event: any) => {\n        setHandling(true);\n        event.preventDefault()\n        console.log(title)\n        console.log(description)\n        let newPost = null;\n        if (channels.length == 0) {\n            newPost = { title: title, desc: description, timestamp: firestore.Timestamp.now(), author: session?.auth?.uid, channels: ['General'], authorName: name }\n        } else {\n            newPost = { title: title, desc: description, timestamp: firestore.Timestamp.now(), author: session?.auth?.uid, channels: channels, authorName: name }\n        }\n        await functions().httpsCallable('createPost')(newPost)\n        window.location.href = \"/\"\n    }\n\n\n    return (\n        <div>\n            <Navbar bg=\"light\" variant=\"light\">\n                <Navbar.Brand href=\"/\">\n                    {' '}\n                            ioyou\n                    </Navbar.Brand>\n                <Nav className=\"ml-auto\">\n                    <Button variant=\"light\" onClick={async () => {\n                        const user = await firebase.db.collection('users').doc(session?.auth?.uid).get()\n                        const username = user?.data()?.username\n                        window.location.href = `/user/${username}`\n                    }} style={{ marginRight: 10 }}>\n                        Profile\n                    </Button>\n                    <Button variant=\"light\" onClick={() => {\n                        window.location.reload()\n                        firebase.doSignOut()\n                    }}>\n                        sign out\n                    </Button>\n                </Nav>\n            </Navbar>\n            <Container className={styles.paddingTop}>\n                <div>\n                    <h1 style={{ paddingBottom: 15 }}>Create a new post</h1>\n                    <Form onSubmit={handleSubmit}>\n                        <Form.Group controlId=\"channels\">\n                            <Form.Label>Channels</Form.Label>\n                            <Row style={{ marginLeft: 10 }}>\n                                {selectedView()}\n                                {subjectsView()}\n                            </Row>\n\n                            <Form.Control type=\"text\" placeholder=\"What subjects?\" onChange={handleChannelChange} value={input} />\n                            <Form.Text className=\"text-danger\">\n                                {err}\n                            </Form.Text>\n                        </Form.Group>\n\n                        <Form.Group controlId=\"title\">\n                            <Form.Label>Title</Form.Label>\n                            <Form.Control required type=\"text\" placeholder=\"What question?\" onChange={handleTitleChange} />\n                        </Form.Group>\n\n                        <Form.Group controlId=\"description\">\n                            <Form.Label>Description</Form.Label>\n                            <Form.Control as=\"textarea\" rows={3} placeholder=\"Add more details if necessary.\" onChange={handleDescriptionChange} />\n                        </Form.Group>\n\n                        {handling ?\n                            <Button variant=\"primary\" disabled style={{ marginTop: 15 }}>\n                                <Spinner\n                                    as=\"span\"\n                                    animation=\"border\"\n                                    size=\"sm\"\n                                    role=\"status\"\n                                    aria-hidden=\"true\"\n                                />\n                            </Button>\n\n                            :\n                            <Button variant=\"primary\" type=\"submit\" style={{ marginTop: 15 }}>\n                                Post\n                        </Button>\n\n                        }\n\n\n                        {postToView()}\n\n                    </Form>\n                </div>\n            </Container>\n        </div>\n    )\n}\n\n\nexport { PostPage }\n","import React, { useState, useEffect } from 'react'\nimport { useParams } from 'react-router-dom';\nimport { useFirebase, Firebase } from '../Firebase'\nimport { functions, auth, firestore } from 'firebase'\nimport { Navbar, Nav, Button, ButtonGroup, Container, Row, Col, Spinner, Jumbotron, Image, ProgressBar, OverlayTrigger, Popover, Carousel, Card, Form } from 'react-bootstrap'\nimport { useSession } from '../Session'\nimport styles from './Question.module.css'\n\nconst QuestionPage: React.FC = (props) => {\n    const firebase = useFirebase()\n    const session = useSession()\n\n    const { postid } = useParams()\n\n    const [self, setSelf] = useState<any>(null);\n    const [post, setPost] = useState<any>(null);\n\n    const [answer, setAnswer] = useState<string>(\"\")\n    const [comments, setComments] = useState<any>(null)\n\n    const [loadingDone, setLoadingDone] = useState<boolean>(false);\n    const [commentsDone, setCommentsDone] = useState<boolean>(false);\n\n    const [handling, setHandling] = useState<boolean>(true);\n\n    const getComments = async () => {\n        try {\n            var docList: any[] = []\n            const commentsList = await firebase.db.collection('comments').where('parent', '==', postid).get()\n\n\n            if (commentsList.empty || commentsList == null) {\n                console.log('No matching documents')\n                setCommentsDone(true)\n                return;\n            }\n            commentsList.forEach(doc => {\n                docList = [...docList, { id: doc.id, data: doc.data() }];\n            });\n\n            setComments(docList)\n            console.log('docList = ', docList)\n            setCommentsDone(true)\n        } catch (e) {\n            console.log(e)\n            setCommentsDone(true)\n        }\n    }\n\n    useEffect(() => {\n        if (session.auth) {\n            const getSelf = async () => {\n                const selfDoc = await (await firestore().collection('users').doc(session.auth?.uid).get()).data()\n                setSelf(selfDoc)\n            }\n            getSelf();\n        }\n\n\n        const getPost = async () => {\n            try {\n                const postDoc = await (await firestore().collection('posts').doc(postid).get()).data()\n                console.log('postDoc = ', postDoc)\n\n                setPost(postDoc)\n                getComments()\n                setLoadingDone(true)\n            } catch (e) {\n                console.log(e)\n                setLoadingDone(true)\n            }\n\n        }\n\n        getPost();\n    }, [session, firebase])\n\n\n    const handleAnswerChange = (event: any) => {\n        setAnswer(event.target.value)\n    }\n\n    const handleSubmit = async (event: any) => {\n        event.preventDefault()\n        setHandling(true);\n        console.log(answer)\n        const newComment = { comment: answer, parent: postid, thread: postid, timestamp: firestore.Timestamp.now(), author: session?.auth?.uid, authorName: self.username }\n        await functions().httpsCallable('createComment')(newComment).then(() => {\n            getComments()\n            setHandling(false);\n        })\n    }\n\n    //a feed object\n    const feedCard = (object: { id: string | number | undefined; data: { comment: string; timestamp: { seconds: number, nanoseconds: number }; author: string; authorName: string; parent: string; thread: string } }) => {\n\n        return (\n\n            <Card style={{ marginBottom: 20 }}>\n                <Card.Body>\n                    <Card.Title>{`@${object.data.authorName}`}</Card.Title>\n                    <Card.Text className={styles.fontLess}> {object.data.comment}</Card.Text>\n                    <Card.Text className={styles.fontLess}>{object.data.timestamp.seconds}</Card.Text>\n                </Card.Body>\n            </Card>\n\n            //\n        )\n    }\n\n    //list of feed objects\n    const feedView = (feedList: { id: string | number | undefined; data: { comment: string; timestamp: { seconds: number; nanoseconds: number }; author: string; authorName: string; parent: string; thread: string } }[]) => {\n        const feedItems = feedList.map((object: { id: string | number | undefined; data: { comment: string; timestamp: { seconds: number, nanoseconds: number }; author: string; authorName: string; parent: string; thread: string } }) => <div key={object.id} style={{ paddingTop: 15 }}>{feedCard(object)}</div>\n        )\n        return feedItems\n    }\n\n\n    return (\n        <div>\n            <Navbar bg=\"light\" variant=\"light\">\n                <Navbar.Brand href=\"/\">\n                    {' '}\n                            ioyou\n                    </Navbar.Brand>\n                <Nav className=\"ml-auto\">\n                    {session.auth ?\n                        <div>\n                            <Button variant=\"light\" onClick={async () => {\n                                const user = await firebase.db.collection('users').doc(session?.auth?.uid).get()\n                                const username = user?.data()?.username\n                                window.location.href = `/user/${username}`\n                            }} style={{ marginRight: 10 }}>\n                                Profile\n                            </Button>\n                            <Button variant=\"outline-dark\" onClick={() => {\n                                window.location.reload()\n                                firebase.doSignOut()\n                            }}>\n                                sign out\n                            </Button>\n                        </div>\n\n                        :\n                        <div>\n                            <Button variant=\"outline-dark\" href=\"/login\" style={{ marginRight: 10 }}>\n                                log in\n                                </Button>\n\n                            <Button variant=\"light\" href=\"/signup\">\n                                sign up\n                                </Button>\n                        </div>}\n                </Nav>\n            </Navbar>\n            {post ?\n                <Container className={styles.paddingTop}>\n                    <Card style={{ marginBottom: 30 }}>\n                        <Card.Body>\n                            <Card.Title>{post?.title}</Card.Title>\n                            <Card.Text>{post?.desc}</Card.Text>\n                            <Card.Text className={styles.fontLess}>Posted by {`@${post?.authorName}`} at {post?.timestamp.seconds}</Card.Text>\n                        </Card.Body>\n                    </Card>\n\n                    {session.auth ?\n                        <Form onSubmit={handleSubmit}>\n\n                            <Form.Group controlId=\"description\">\n                                <Form.Label>Answer</Form.Label>\n                                <Form.Control as=\"textarea\" rows={3} placeholder=\"\" onChange={handleAnswerChange} />\n                            </Form.Group>\n\n                            {handling ?\n                                <Button variant=\"primary\" style={{ marginTop: 15 }}>\n                                    <Spinner\n                                        as=\"span\"\n                                        animation=\"border\"\n                                        size=\"sm\"\n                                        role=\"status\"\n                                        aria-hidden=\"true\"\n                                    />\n                                </Button>\n                                :\n                                <Button variant=\"primary\" type=\"submit\" style={{ marginTop: 15 }}>\n                                    Comment\n                                </Button>\n                            }\n\n                        </Form>\n                        :\n                        <div></div>\n                    }\n\n\n                    <hr></hr>\n\n\n\n                    {comments\n                        ?\n                        <div>\n                            <h3 style={{ paddingTop: 50, paddingLeft: 22, paddingBottom: 15 }}>{comments.length} comments</h3>\n                            {feedView(comments)}\n                        </div>\n                        :\n                        commentsDone ?\n                            <h3 style={{ paddingTop: 50, paddingLeft: 22, paddingBottom: 15 }}>0 comments</h3>\n                            :\n                            <Spinner animation=\"border\" />\n                    }\n                </Container>\n                :\n                loadingDone ?\n                    <Container className={styles.paddingTop}>\n                        <h1>No post found.</h1>\n                    </Container>\n                    :\n                    <Container className={styles.paddingTop}>\n                        <Spinner animation=\"border\" />\n                    </Container>\n            }\n\n        </div>\n    )\n}\n\n\nexport { QuestionPage }\n","import React, { useState, useEffect, useContext, useCallback } from 'react'\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n} from \"react-router-dom\"\n\nimport { ROUTES } from '../../constants'\nimport { HomePage } from '../Home'\nimport { ProfilePage } from '../Profile'\nimport { SignupPage } from '../Signup'\nimport { LoginPage } from '../Login'\nimport { PostPage } from '../Post'\nimport { useFirebase } from '../Firebase'\nimport { useSession, SessionContext } from '../Session/'\nimport { QuestionPage } from '../Question'\n\nconst MainApp: React.FC = () => {\n    const session = useSession()\n\n    if (session.initializing) {\n        return (<div></div>)\n    }\n    return (\n        <Router>\n            <Switch>\n                <Route exact path={ROUTES.ROOT}>\n                    <HomePage />\n                </Route>\n                <Route path={ROUTES.SIGNUP}>\n                    <SignupPage />\n                </Route>\n                <Route path={ROUTES.LOGIN}>\n                    <LoginPage />\n                </Route>\n                <Route path={ROUTES.POST}>\n                    <PostPage />\n                </Route>\n                <Route path={ROUTES.USERNAME}>\n                    <ProfilePage />\n                </Route>\n                <Route path={ROUTES.COMMENTS}>\n                    <QuestionPage />\n                </Route>\n            </Switch>\n        </Router>\n    )\n}\n\n\nconst AppWithAuth: React.FC = () => {\n    const firebase = useFirebase()\n    const [authObject, setAuthObject] = useState(() => {\n        const currentUser = firebase.auth.currentUser\n        if (!currentUser) {\n            return {\n                initializing: true,\n                auth: null,\n            }\n        } else {\n            return {\n                initializing: false,\n                auth: currentUser,\n            }\n        }\n\n    })\n\n    useEffect(() => {\n        function onChange(newUser: any) {\n            console.log('New user detected in auth onChange: ', newUser)\n            if (newUser === null) {\n                // Not authenticated\n                console.log('Not authenticated')\n                setAuthObject({ initializing: false, auth: null })\n            } else {\n                // New authentication occurred\n                setAuthObject(prevState => {\n                    if (prevState.auth === null) {\n                        // Went from unauthenticated to authenticated\n                        console.log('Authenticated')\n                        return { initializing: false, auth: newUser }\n                    } else {\n                        // Bug: Went from authenticated to another authentication\n                        console.log('Bug: reauthenticated')\n                        return prevState\n                    }\n                })\n            }\n        }\n\n        // listen for auth state changes\n        const unsubscribe = firebase.auth.onAuthStateChanged(onChange)\n        // unsubscribe to the listener when unmounting\n\n        return () => {\n            unsubscribe()\n            // We loaded a prof and were listening to it\n        }\n    }, [firebase.auth])\n\n    return (\n        <SessionContext.Provider value={authObject}>\n            <MainApp />\n        </SessionContext.Provider>\n    )\n}\n\nconst AppWithTwitter: React.FC = () => {\n    const firebase = useFirebase()\n\n    const getTwitterResult = useCallback(\n        async () => {\n            // If already logged in, no need to check\n            if (firebase.auth.currentUser) {\n                return\n            }\n            try {\n                const result = await firebase.auth.getRedirectResult()\n                console.log('Received Redirect result: ', result)\n                const { user, additionalUserInfo, credential } = result\n                if (!user) {\n                    console.log('No Twitter Redirect Result!')\n                    return\n                }\n                console.log('Current user after redirect: ', firebase.auth.currentUser)\n                // Register user for first time\n            }\n            catch (error) {\n                var errorCode = error.code;\n                var errorMessage = error.message;\n                // The email of the user's account used.\n                var email = error.email;\n                // The firebase.auth.AuthCredential type that was used.\n                var credential = error.credential;\n                console.log(error)\n            }\n\n        }, [firebase.auth])\n\n    useEffect(() => {\n        console.log('Current user in Twitter Checking Component: ', firebase.auth.currentUser)\n        getTwitterResult()\n    }, [getTwitterResult, firebase.auth])\n\n    return (\n        <AppWithAuth />\n    )\n}\n\n\n\nexport default AppWithTwitter ","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { FirebaseContext, Firebase } from './components/Firebase';\n\nconst config = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <FirebaseContext.Provider value={new Firebase()}>\n      <App />\n    </FirebaseContext.Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paddingTop\":\"Question_paddingTop__3SnTv\",\"centerItems\":\"Question_centerItems__2niqs\",\"fontLess\":\"Question_fontLess__1iLQC\",\"opaqueLess\":\"Question_opaqueLess__2kYLQ\",\"refresh\":\"Question_refresh__vU4gl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paddingTop\":\"Profile_paddingTop__3kNOc\",\"centerItems\":\"Profile_centerItems__3xB3O\",\"fontLess\":\"Profile_fontLess__1fK0e\",\"opaqueLess\":\"Profile_opaqueLess__DR6mh\",\"refresh\":\"Profile_refresh__Vh51B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paddingTop\":\"Home_paddingTop__lwuR_\",\"centerItems\":\"Home_centerItems__11x6e\",\"fontLess\":\"Home_fontLess__3aF4X\",\"opaqueLess\":\"Home_opaqueLess__1EMYG\",\"refresh\":\"Home_refresh__2Epj3\",\"aNoStyle\":\"Home_aNoStyle__3zzT_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paddingTop\":\"Signup_paddingTop__3HXmM\",\"centerItems\":\"Signup_centerItems__k192t\",\"fontLess\":\"Signup_fontLess__X2EvG\",\"opaqueLess\":\"Signup_opaqueLess__1t1Dw\",\"refresh\":\"Signup_refresh__26-ho\",\"errMessage\":\"Signup_errMessage__2DZ-o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paddingTop\":\"Login_paddingTop__217cV\",\"centerItems\":\"Login_centerItems__1sObU\",\"fontLess\":\"Login_fontLess__30mul\",\"opaqueLess\":\"Login_opaqueLess__3Bk5N\",\"refresh\":\"Login_refresh__3VAKS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paddingTop\":\"Post_paddingTop__MEynF\",\"centerItems\":\"Post_centerItems__2dmyQ\",\"fontLess\":\"Post_fontLess__hqyhX\",\"opaqueLess\":\"Post_opaqueLess__1M4G5\",\"refresh\":\"Post_refresh__1fCFf\"};"],"sourceRoot":""}