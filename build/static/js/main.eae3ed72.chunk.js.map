{"version":3,"sources":["constants/routes.tsx","components/Firebase/context.tsx","components/Firebase/firebase.tsx","components/Session/useSession.tsx","components/Login/LoginPage.tsx","components/Signup/SignupPage.tsx","components/Post/Post.tsx","constants/NavBar.tsx","components/Home/Home.tsx","components/Profile/ProfilePage.tsx","components/Question/Question.tsx","components/App/index.tsx","serviceWorker.ts","index.tsx","components/Question/Question.module.css","components/Profile/Profile.module.css","components/Home/Home.module.css"],"names":["ROUTES","FirebaseContext","createContext","useFirebase","useContext","config","apiKey","process","authDomain","databaseURL","projectId","messagingSenderId","SessionContext","auth","initializing","useSession","LoginPage","firebase","useState","validated","setValidated","email","setEmail","password","setPassword","err","setErr","handling","setHandling","handleSubmit","event","a","preventDefault","console","log","currentTarget","checkValidity","stopPropagation","doSignInWithEmailAndPassword","window","location","reload","message","Container","Form","onSubmit","Group","controlId","Label","Control","required","type","placeholder","onChange","target","value","Button","variant","disabled","Spinner","as","animation","size","role","aria-hidden","style","marginTop","className","SignupPage","session","name","setName","username","setUsername","usernameErr","setUsernameErr","passCheck","setPassCheck","useEffect","href","length","checkUsername","createUserWithEmailAndPassword","catch","e","newUser","uid","user","firestore","collection","doc","set","actives","upvoted","downvoted","credits","then","where","limit","get","results","paddingBottom","Feedback","Text","match","Check","label","PostPage","channels","setChannels","channelList","setChannelList","allChannels","title","setTitle","description","setDescription","bounty","setBounty","bountyCheck","setBountyCheck","bountyErr","setBountyErr","input","setInput","userDoc","setUserDoc","selectBul","setSelectBul","data","getUser","newPost","desc","timestamp","Timestamp","now","author","authorName","bulletin","upvotes","Number","awarded","functions","httpsCallable","db","update","ButtonGroup","active","onClick","Row","marginLeft","subjectObjects","map","d","key","marginRight","marginBottom","array","index","indexOf","splice","selectedView","subjectsView","strKeyword","subjects","i","replace","substr","toLowerCase","push","onBlur","rows","postToView","NavBar","loginModalShow","setLoginModalShow","signupModalShow","setSignupModalShow","postModalShow","setPostModalShow","Navbar","bg","Brand","Modal","show","onHide","Header","Body","closeButton","Nav","doSignOut","HomePage","allFeed","setAllFeed","homeFeed","setHomeFeed","academic","setAcademic","setBulletin","undefined","allLoadingDone","setAllLoadingDone","homeLoadingDone","setHomeLoadingDone","acadLoadingDone","setAcadLoadingDone","bulLoadingDone","setBulLoadingDone","nowSeconds","setNowSeconds","lastAll","setLastAll","lastHome","setLastHome","lastAcad","setLastAcad","lastBul","setLastBul","allSort","setAllSort","homeSort","setHomeSort","acadSort","setAcadSort","bulSort","setBulSort","setUpvoted","setDownvoted","changed","setChanged","reportMessage","setReportMessage","reportAuthorName","setReportAuthorName","reportID","setReportID","reportHandling","setReportHandling","reportDone","setReportDone","reportModalShow","setReportModalShow","getChannels","userData","Object","keys","filter","getPosts","sort","category","categoryFeed","lastCategory","setLastCategory","setCategoryFeed","setLoading","docList","query","orderBy","posts","lastTime","seconds","startAfter","empty","forEach","id","lastPost","numComments","loadPosts","Date","getTime","feedLoadingView","paddingTop","Card","Title","feedView","feedList","object","time","Math","floor","curTime","channelView","handleVote","upvoteTrue","upvoteList","downvoteList","upvoteIndex","downvoteIndex","Subtitle","Col","xs","md","textAlign","styles","fontLess","includes","feedCard","sortButton","feedSort","setLastFeed","setFeedLoading","setFeedSort","handleSort","sortType","DropdownButton","Dropdown","Item","Footer","InputGroup","post","submittedBy","paddingLeft","Tabs","defaultActiveKey","Tab","eventKey","ProfilePage","useParams","setUser","userid","setUserid","userLoading","setUserLoading","userSelf","setUserSelf","userSelfDoc","setUserSelfDoc","editSubjects","setEditSubjects","lang","setLang","sci","setSci","ss","setSS","history","setHistory","historyDone","setHistoryDone","setLastPost","setSort","setActives","userID","last","lastDoc","docs","userResults","self","getSelf","subjectEdit","subject","activesEdit","paddingRight","entries","keyName","sm","QuestionPage","props","postid","setSelf","setPost","postSelf","setPostSelf","answer","setAnswer","comments","setComments","setNumComments","activeAnswer","setActiveAnswer","loadingDone","setLoadingDone","commentsDone","setCommentsDone","timeMessage","setTimeMessage","reply","setReply","replyText","setReplyText","replyHandling","setReplyHandling","awardModalShow","setAwardModalShow","award","setAward","awardCheck","setAwardCheck","awardHandling","setAwardHandling","commentAuthorName","setCommentAuthorName","commentAuthor","setCommentAuthor","commentID","setCommentID","getComments","commentsList","replies","collect","allComments","setAllComments","selfDoc","postDoc","commentsTest","getPost","handleReplyChange","handleReplySubmit","newReply","comment","parent","thread","selected","newComment","borderLeft","fontSize","MainApp","exact","path","AppWithAuth","currentUser","authObject","setAuthObject","unsubscribe","onAuthStateChanged","prevState","Provider","AppWithTwitter","getTwitterResult","useCallback","getRedirectResult","result","additionalUserInfo","credential","code","Boolean","hostname","ReactDOM","render","StrictMode","provider","doTwitterSignIn","signInWithRedirect","doCreateUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","app","apps","initializeApp","this","TwitterAuthProvider","App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","module","exports"],"mappings":"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","file":"static/js/main.eae3ed72.chunk.js","sourcesContent":["const ROUTES = {\n    ROOT: \"/\",\n    USERNAME: \"/user/:username\",\n    COMMENTS: \"/post/:postid\"\n}\n\nexport { ROUTES }","import { createContext, useContext } from 'react'\nimport { Firebase } from './firebase'\n\n\nconst FirebaseContext = createContext<Firebase>({} as Firebase)\n\nconst useFirebase = () => {\n    const firebase = useContext(FirebaseContext)\n\n    return firebase\n}\nexport { FirebaseContext, useFirebase }\n","import app from 'firebase/app'\nimport 'firebase/auth'\nimport 'firebase/firestore'\nimport 'firebase/functions'\n\nconst config = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n}\n\nclass Firebase {\n    auth: firebase.auth.Auth\n    db: firebase.firestore.Firestore\n    functions: firebase.functions.Functions\n    provider: firebase.auth.AuthProvider\n\n    constructor() {\n        if (!app.apps.length) {\n            app.initializeApp(config)\n        }\n        this.auth = app.auth()\n        // For ease of access. Note that db normally refers to Firebase Realtime Database.\n        this.db = app.firestore()\n        this.functions = app.functions()\n        this.provider = new app.auth.TwitterAuthProvider()\n    }\n\n    // *** Auth API ***\n\n    // twitter signin handler\n    doTwitterSignIn = async () => {\n        this.auth.signInWithRedirect(this.provider)\n    }\n\n    // email and password signin handlers\n    doCreateUserWithEmailAndPassword = (email: string, password: string) =>\n        this.auth.createUserWithEmailAndPassword(email, password)\n\n    doSignInWithEmailAndPassword = (email: string, password: string) =>\n        this.auth.signInWithEmailAndPassword(email, password)\n\n    doSignOut = () => this.auth.signOut()\n\n}\n\nexport { Firebase }\n","import { createContext, useContext } from 'react'\nimport firebase from 'firebase'\n\ninterface SessionObject {\n    initializing: boolean,\n    auth: firebase.User | null,\n}\n\nconst SessionContext = createContext<SessionObject>({\n    auth: {} as firebase.User,\n    initializing: true\n})\n\nconst useSession = () => {\n    const session = useContext(SessionContext)\n    return session\n}\n\nexport { SessionContext, useSession }\n\n","import React, { useState, useEffect, PropsWithChildren } from 'react';\nimport { Button, Modal, Container, Form, Spinner } from 'react-bootstrap'\nimport { useFirebase } from '../Firebase'\nimport { useSession } from '../Session'\nimport styles from './Login.module.css'\n\nconst LoginPage: React.FC<any> = () => {\n    const firebase = useFirebase()\n    const session = useSession()\n\n    const [validated, setValidated] = useState<boolean>(false);\n    const [email, setEmail] = useState<string>('')\n    const [password, setPassword] = useState<string>('')\n    const [err, setErr] = useState<string>('')\n\n    const [handling, setHandling] = useState<boolean>(false)\n\n\n    const handleSubmit = async (event: any) => {\n        event.preventDefault();\n        setHandling(true);\n        console.log('email = ', email)\n        console.log('password = ', password)\n        console.log(event.currentTarget)\n        if (event.currentTarget.checkValidity() === false) {\n            console.log(validated);\n            event.preventDefault();\n            event.stopPropagation();\n        } else {\n            try {\n                await firebase.doSignInWithEmailAndPassword(email, password)\n                setValidated(true);\n                setHandling(false);\n                window.location.reload()\n            } catch (e) {\n                console.log(e);\n                setErr(e.message);\n                setHandling(false);\n            }\n        }\n        console.log(validated);\n    }\n\n    const handleChangeEmail = (event: any) => {\n        setEmail(event.target.value)\n    }\n\n    const handleChangePassword = (event: any) => {\n        setPassword(event.target.value)\n    }\n\n    return (\n        <Container>\n            <Form validated={validated} onSubmit={handleSubmit}>\n                <Form.Group controlId=\"formBasicEmail\">\n                    <Form.Label>Email address</Form.Label>\n                    <Form.Control required type=\"email\" placeholder=\"Enter email\" onChange={handleChangeEmail} value={email} />\n                </Form.Group>\n                <Form.Group controlId=\"formBasicPassword\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control required type=\"password\" placeholder=\"Password\" onChange={handleChangePassword} value={password} />\n                </Form.Group>\n                {handling ?\n                    <Button variant=\"primary\" disabled>\n                        <Spinner\n                            as=\"span\"\n                            animation=\"border\"\n                            size=\"sm\"\n                            role=\"status\"\n                            aria-hidden=\"true\"\n                        />\n                    </Button>\n                    :\n                    <Button variant=\"primary\" type=\"submit\" style={{ marginTop: 10 }}>\n                        Log in\n                        </Button>\n                }\n\n            </Form>\n            <p className=\"text-danger\">{err}</p>\n        </Container>\n\n    )\n}\n\nexport { LoginPage }","import React, { useState, useEffect } from 'react';\nimport { Navbar, Nav, Button, ButtonGroup, Container, Row, Col, Form, OverlayTrigger, Spinner } from 'react-bootstrap'\nimport styles from './Signup.module.css'\nimport { auth, firestore } from 'firebase'\nimport { useFirebase, Firebase } from '../Firebase'\nimport { useSession } from '../Session'\nimport { AnyCnameRecord } from 'dns';\n\nconst SignupPage: React.FC = () => {\n    const firebase = useFirebase()\n    const session = useSession()\n\n    const [validated, setValidated] = useState<boolean>(false);\n    const [name, setName] = useState<string>('')\n    const [username, setUsername] = useState<string>('')\n    const [email, setEmail] = useState<string>('')\n    const [password, setPassword] = useState<string>('')\n    const [err, setErr] = useState<string>('')\n    const [usernameErr, setUsernameErr] = useState<string>('')\n    const [passCheck, setPassCheck] = useState<boolean>(false);\n\n    const [handling, setHandling] = useState<boolean>(false);\n\n\n    useEffect(() => {\n        if (session.auth && (handling == false)) {\n            window.location.href = \"/\"\n        }\n    }, [session, firebase])\n\n    const handleSubmit = async (event: any) => {\n        event.preventDefault();\n        setHandling(true)\n        console.log('name = ', name)\n        console.log('username = ', username)\n        console.log('email = ', email)\n        console.log('password = ', password)\n        console.log(event.currentTarget)\n        if (event.currentTarget.checkValidity() === false || passCheck === false || usernameErr.length > 0) {\n            console.log(validated);\n            event.preventDefault();\n            event.stopPropagation();\n        } else {\n            const results = await checkUsername(username);\n            if (results > 0) {\n                setUsernameErr('Already taken.')\n            } else {\n                try {\n                    console.log('this is triggered')\n                    const newUser = await auth().createUserWithEmailAndPassword(email, password).catch(e => { console.log(e) })\n                    if (newUser) {\n                        console.log('this is triggered 2')\n                        const uid = newUser?.user?.uid\n                        await firestore().collection('users').doc(uid).set({ name: name, username: username, actives: { 'Arts': false, 'Biology': false, 'Business': false, 'Computer Science': false, 'Economics': false, 'Finance': false, 'French': false, 'General': true, 'Humanities': false, 'Languages (General)': false, 'Mandarin': false, 'Psychology': false, 'Spanish': false, 'bulletin': true }, upvoted: [], downvoted: [], credits: 25 }).then(() => {\n                            window.location.href = `/user/${username}`\n                        })\n                    }\n                    setValidated(true);\n                } catch (e) {\n                    console.log(e);\n                    setErr(e.message);\n                }\n            }\n        }\n        setHandling(false);\n    }\n\n    const checkUsername = async (username: string) => {\n        const results = await firestore().collection('users').where('username', '==', username).limit(1).get();\n        return results.size;\n    }\n\n    const handleChangeName = (event: any) => {\n        setName(event.target.value)\n    }\n\n    const handleChangeUsername = (event: any) => {\n        setUsername(event.target.value)\n        if (event.target.value.length > 15) {\n            setUsernameErr('Too long. Usernames should be < 15 characters.')\n        } else {\n            setUsernameErr('')\n        }\n    }\n\n    const handleChangeEmail = (event: any) => {\n        setEmail(event.target.value)\n    }\n\n    const handleChangePassword = (event: any) => {\n        var check = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?!.*\\s).{8,30}$/;\n        setPassword(event.target.value);\n        if (event.target.value.match(check)) {\n            setPassCheck(true);\n            console.log('passCheck')\n        } else {\n            setPassCheck(false);\n            console.log('failCheck')\n        }\n    }\n\n    return (\n        <Container style={{ paddingBottom: 10 }}>\n            <Form validated={validated} onSubmit={handleSubmit}>\n\n                <Form.Group controlId=\"formBasicName\">\n                    <Form.Label>Name</Form.Label>\n                    <Form.Control required type=\"text\" placeholder=\"Jane Doe\" onChange={handleChangeName} value={name} />\n                    <Form.Control.Feedback type=\"invalid\">\n                        Please provide a name.\n                        </Form.Control.Feedback>\n                </Form.Group>\n\n                <Form.Group controlId=\"formBasicName\">\n                    <Form.Label>Username</Form.Label>\n                    <Form.Control required type=\"text\" placeholder=\"username\" onChange={handleChangeUsername} value={username} />\n                    <Form.Text className=\"text-danger\">\n                        {usernameErr}\n                    </Form.Text>\n                </Form.Group>\n\n                <Form.Group controlId=\"formBasicEmail\">\n                    <Form.Label>Email address</Form.Label>\n                    <Form.Control required type=\"email\" placeholder=\"jdoe@email.com\" onChange={handleChangeEmail} value={email} />\n                    <Form.Control.Feedback type=\"invalid\">\n                        Please provide an email.\n                        </Form.Control.Feedback>\n                </Form.Group>\n\n                <Form.Group controlId=\"formBasicPassword\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control required type=\"password\" placeholder=\"Password\" onChange={handleChangePassword} value={password} />\n                    {passCheck ?\n                        <Form.Text className=\"text-success\">\n                            Looks good!\n                            </Form.Text>\n                        :\n                        <Form.Text className=\"text-danger\">\n                            At least 8 characters and contain an uppercase letter, lowercase letter, number, and special character.\n                            </Form.Text>\n                    }\n                </Form.Group>\n                <Form.Group controlId=\"formBasicCheckbox\">\n                    <Form.Check required type=\"checkbox\" label=\"I agree to the terms and conditions.\" />\n                </Form.Group>\n\n                {handling ?\n                    <Button variant=\"primary\" disabled>\n                        <Spinner\n                            as=\"span\"\n                            animation=\"border\"\n                            size=\"sm\"\n                            role=\"status\"\n                            aria-hidden=\"true\"\n                        />\n                    </Button>\n                    :\n                    <Button variant=\"primary\" type=\"submit\">\n                        Submit\n                    </Button>\n                }\n\n            </Form>\n            <p className=\"text-danger\">{err}</p>\n        </Container>\n    )\n}\n\nexport { SignupPage }","import React, { useState, useEffect } from 'react'\nimport { useFirebase, Firebase } from '../Firebase'\nimport { functions, auth, firestore } from 'firebase'\nimport { Navbar, Nav, Button, ButtonGroup, Container, Row, Col, Spinner, Jumbotron, Image, ProgressBar, OverlayTrigger, Popover, Carousel, Card, Form } from 'react-bootstrap'\nimport { useSession } from '../Session'\nimport styles from './Post.module.css'\nimport { NavBar } from '../../constants'\n\nconst PostPage: React.FC = () => {\n    const firebase = useFirebase()\n    const session = useSession()\n\n    const [channels, setChannels] = useState<Array<string>>([])\n    const [channelList, setChannelList] = useState<Array<string>>([])\n    const [allChannels, setAllChannels] = useState<Array<string>>(['Arts', 'Business', 'Computer Science', 'Economics', 'Finance', 'History', 'Humanities', 'French', 'Mandarin', 'Spanish', 'Languages (General)', 'Mathematics', 'Biology', 'Chemistry', 'Physics', 'Sciences (General)', 'Psychology', 'Sociology', 'Social Sciences (General)', 'General'])\n    const [title, setTitle] = useState<string>(\"\")\n    const [description, setDescription] = useState<string>(\"\")\n    const [bounty, setBounty] = useState<number>(0);\n    const [bountyCheck, setBountyCheck] = useState<boolean>(false);\n\n    const [err, setErr] = useState<string>(\"\")\n    const [bountyErr, setBountyErr] = useState<string>(\"\")\n\n    const [handling, setHandling] = useState<boolean>(false)\n\n    const [input, setInput] = useState<string>(\"\")\n\n    const [name, setName] = useState<string>(\"\")\n    const [userDoc, setUserDoc] = useState<any>(null);\n\n    const [selectBul, setSelectBul] = useState<boolean>(false)\n\n    useEffect(() => {\n        if (!session.auth) {\n            window.location.href = \"/\"\n        } else {\n            const getUser = async () => {\n                const user = await firestore().collection('users').doc(session.auth?.uid).get()\n                setName(user.data()?.username)\n                setUserDoc(user.data())\n            }\n            getUser()\n        }\n    }, [session, firebase])\n\n    const handleChannelChange = (event: any) => {\n        setInput(event.target.value)\n        if (event.target.value.length > 0) {\n            let strKeyword = event.target.value\n            let subjects = []\n            for (let i = 0; i < allChannels.length; i++) {\n                if (allChannels[i].replace(/[^a-zA-Z0-9]/g, \"\").substr(0, strKeyword.length).toLowerCase() == strKeyword.toLowerCase()) {\n                    subjects.push(allChannels[i])\n                }\n            }\n            setChannelList(subjects)\n        } else {\n            setChannelList([])\n        }\n    }\n\n    const subjectsView = () => {\n        const subjectObjects = channelList.map((d) => <Button variant=\"outline-dark\" key={d} style={{ marginRight: 15, marginBottom: 15 }} onClick={() => {\n            if (channels.length > 9) {\n                setErr('Maximum 10 channels')\n            } else {\n                setErr('')\n                setInput('')\n                setChannelList([])\n                if (channels.indexOf(d) != -1) {\n                    return\n                } else {\n                    setChannels([...channels, d])\n                }\n\n            }\n        }}>{d}</Button>)\n        return (\n            <div>\n                {subjectObjects}\n            </div>\n        )\n    }\n\n    const selectedView = () => {\n        const subjectObjects = channels.map((d) => <Button variant=\"dark\" key={d} style={{ marginRight: 15, marginBottom: 15 }} onClick={() => {\n            var array = [...channels]; // make a separate copy of the array\n            var index = array.indexOf(d)\n            if (index !== -1) {\n                array.splice(index, 1);\n                setChannels(array);\n            }\n            if (channels.length < 11) {\n                setErr('')\n            }\n        }}>{d}</Button>)\n        return (\n            <div>\n                {subjectObjects}\n            </div>\n        )\n    }\n\n    const postToView = () => {\n        const subjectObjects = channels.map((d) => <p key={d}>{(channels.indexOf(d) == 0) ? `to ${d}` : `, ${d}`}</p>)\n        return (\n            <Row style={{ marginTop: 15, marginLeft: 15 }}>\n                {subjectObjects}\n            </Row>\n        )\n    }\n\n    const handleTitleChange = (event: any) => {\n        setTitle(event.target.value)\n    }\n\n    const handleDescriptionChange = (event: any) => {\n        setDescription(event.target.value)\n    }\n\n    const handleBountyChange = (event: any) => {\n        const check = /^[0-9\\b]+$/;\n        setBounty(event.target.value);\n        if (event.target.value.match(check)) {\n            setBountyCheck(true);\n            console.log('passCheck')\n        } else {\n            setBountyCheck(false);\n            console.log('failCheck')\n        }\n    }\n\n    const handleSubmit = async (event: any) => {\n        setHandling(true);\n        event.preventDefault()\n        console.log(title)\n        console.log(description)\n        let newPost = null;\n        if (selectBul) {\n            newPost = { title: title, desc: description, timestamp: firestore.Timestamp.now(), author: session?.auth?.uid, channels: [], authorName: name, bulletin: selectBul, upvotes: 0, bounty: Number(bounty), awarded: true }\n        } else {\n            if (bounty == 0 || bountyCheck == false || bounty > userDoc.credits) {\n                event.preventDefault()\n                event.stopPropagation()\n                setHandling(false)\n                if (bounty > userDoc.credits) {\n                    setBountyErr(`You have ${userDoc.credits} credit(s) left.`)\n                }\n                return\n            } else {\n                if (channels.length == 0) {\n                    newPost = { title: title, desc: description, timestamp: firestore.Timestamp.now(), author: session?.auth?.uid, channels: ['General'], authorName: name, bulletin: false, upvotes: 0, bounty: Number(bounty), awarded: false }\n                } else {\n                    newPost = { title: title, desc: description, timestamp: firestore.Timestamp.now(), author: session?.auth?.uid, channels: channels, authorName: name, upvotes: 0, bulletin: false, bounty: Number(bounty), awarded: false }\n                }\n            }\n        }\n\n        await functions().httpsCallable('createPost')(newPost)\n        await firebase.db.collection('users').doc(session?.auth?.uid).update({ credits: userDoc.credits - bounty })\n        window.location.href = \"/\"\n    }\n\n\n    return (\n        <Container>\n            <Form onSubmit={handleSubmit}>\n                <ButtonGroup style={{ paddingBottom: 15 }}>\n                    <Button variant='outline-primary' active={!selectBul} onClick={() => { setSelectBul(false) }}>Academic</Button>\n                    <Button variant='outline-primary' active={selectBul} onClick={() => {\n                        setSelectBul(true)\n                    }}>Bulletin</Button>\n                </ButtonGroup>\n                {selectBul ?\n                    <div></div>\n                    :\n                    <Form.Group controlId=\"channels\">\n                        <Form.Label>Channels</Form.Label>\n                        <Row style={{ marginLeft: 10 }}>\n                            {selectedView()}\n                            {subjectsView()}\n                        </Row>\n                        <Form.Control type=\"text\" placeholder={channels.length > 0 ? \"Add additional subjects if necessary.\" : \"What subjects?\"} onChange={handleChannelChange} onBlur={() => {\n                            if (channelList.length == 1) {\n                                setChannels([...channels, ...channelList])\n                                setInput('')\n                                setChannelList([])\n                            }\n                        }} value={input} />\n                        <Form.Text className=\"text-danger\">\n                            {err}\n                        </Form.Text>\n                    </Form.Group>\n                }\n\n                <Form.Group controlId=\"title\">\n                    <Form.Label>Title</Form.Label>\n                    <Form.Control required type=\"text\" placeholder=\"What's up?\" onChange={handleTitleChange} />\n                </Form.Group>\n\n                <Form.Group controlId=\"description\">\n                    <Form.Label>Description</Form.Label>\n                    <Form.Control as=\"textarea\" rows={3} placeholder=\"Add more details if necessary.\" onChange={handleDescriptionChange} />\n                </Form.Group>\n\n                {selectBul ?\n                    <div></div>\n                    :\n                    <Form.Group controlId=\"bounty\">\n                        <Form.Label>Bounty</Form.Label>\n                        <Form.Control required as=\"input\" placeholder=\"Credits\" onChange={handleBountyChange} value={bounty} />\n                        {bounty > 0 && bountyCheck == true ?\n                            bounty > userDoc.credits ?\n                                <Form.Text className='text-danger'>\n                                    {bountyErr}\n                                </Form.Text>\n                                :\n                                <Form.Text className=\"text-success\">\n                                    Looks good!\n                                </Form.Text>\n                            :\n                            <Form.Text className=\"text-danger\">\n                                At least 1 credit must be posted.\n                                </Form.Text>\n                        }\n\n                    </Form.Group>\n                }\n\n                {handling ?\n                    <Button variant=\"primary\" disabled style={{ marginTop: 15 }}>\n                        <Spinner\n                            as=\"span\"\n                            animation=\"border\"\n                            size=\"sm\"\n                            role=\"status\"\n                            aria-hidden=\"true\"\n                        />\n                    </Button>\n\n                    :\n                    <Button variant=\"primary\" type=\"submit\" style={{ marginTop: 15 }}>\n                        Post\n                        </Button>\n\n                }\n\n\n                {postToView()}\n\n            </Form>\n        </Container>\n    )\n}\n\n\nexport { PostPage }\n","import React, { useState, useEffect } from 'react';\nimport { Navbar, Nav, Button, Modal, Container, Row, Col, Form, Spinner, FormControl } from 'react-bootstrap'\nimport { useFirebase, Firebase } from '../components/Firebase'\nimport { useSession } from '../components/Session'\nimport { LoginPage } from '../components/Login'\nimport { SignupPage } from '../components/Signup'\nimport { PostPage } from '../components/Post'\n\nconst NavBar: React.FC = () => {\n    const firebase = useFirebase()\n    const session = useSession()\n\n    const [loginModalShow, setLoginModalShow] = useState<boolean>(false);\n    const [signupModalShow, setSignupModalShow] = useState<boolean>(false);\n    const [postModalShow, setPostModalShow] = useState<boolean>(false);\n\n\n\n    return (\n        <Navbar bg=\"light\" variant=\"light\">\n            <Navbar.Brand href=\"/\">\n                {' '}\n                            ioyou\n                    </Navbar.Brand>\n            <Modal show={loginModalShow} onHide={() => {\n                setLoginModalShow(false)\n            }}>\n                <Modal.Header>Log in</Modal.Header>\n                <Modal.Body>\n                    <LoginPage />\n                </Modal.Body>\n            </Modal>\n            <Modal show={signupModalShow} onHide={() => {\n                setSignupModalShow(false)\n            }}>\n                <Modal.Header closeButton>Sign up</Modal.Header>\n                <Modal.Body>\n                    <SignupPage />\n                </Modal.Body>\n            </Modal>\n            <Modal show={postModalShow} onHide={() => {\n                setPostModalShow(false)\n            }}>\n                <Modal.Header closeButton>New Post</Modal.Header>\n                <Modal.Body>\n                    <PostPage />\n                </Modal.Body>\n            </Modal>\n            <Nav className=\"ml-auto\">\n                {session.auth ?\n                    <div>\n                        <Button variant=\"light\" onClick={async () => {\n                            const user = await firebase.db.collection('users').doc(session?.auth?.uid).get()\n                            const username = user?.data()?.username\n                            window.location.href = `/user/${username}`\n                        }} style={{ marginRight: 10 }}>\n                            Profile\n                            </Button>\n                        <Button onClick={() => {\n                            setPostModalShow(true)\n                        }} variant=\"outline-dark\" style={{ marginRight: 10 }}>Post</Button>\n                        <Button variant=\"light\" onClick={() => {\n                            firebase.doSignOut()\n                            window.location.reload()\n                        }}>\n                            Sign Out\n                            </Button>\n                    </div>\n\n                    :\n                    <div>\n                        <Button variant=\"outline-dark\" onClick={() => { setLoginModalShow(true) }} style={{ marginRight: 10 }}>\n                            log in\n                                </Button>\n\n                        <Button variant=\"light\" onClick={() => { setSignupModalShow(true) }}>\n                            sign up\n                                </Button>\n                    </div>\n                }\n\n            </Nav>\n        </Navbar>\n    )\n}\n\nexport { NavBar }","import React, { useState, useCallback, useEffect } from 'react'\nimport { useFirebase, Firebase } from '../Firebase'\nimport { functions, auth, firestore } from 'firebase'\nimport { Navbar, Nav, Button, ButtonGroup, Container, Row, Col, Spinner, Jumbotron, Image, ProgressBar, OverlayTrigger, Popover, Carousel, Card, Tabs, Tab, DropdownButton, Dropdown, Modal, InputGroup, Form } from 'react-bootstrap'\nimport { useSession } from '../Session'\nimport styles from './Home.module.css'\nimport { NavBar } from '../../constants'\n\nconst HomePage: React.FC = () => {\n    const firebase = useFirebase()\n    const session = useSession()\n\n    const [allFeed, setAllFeed] = useState<any[]>([])\n    const [homeFeed, setHomeFeed] = useState<any[]>([])\n    const [academic, setAcademic] = useState<any[]>([])\n    const [bulletin, setBulletin] = useState<any[]>([])\n    const [channels, setChannels] = useState<string[] | undefined>(undefined)\n\n    const [userDoc, setUserDoc] = useState<any>(null)\n\n    const [allLoadingDone, setAllLoadingDone] = useState<boolean>(false);\n    const [homeLoadingDone, setHomeLoadingDone] = useState<boolean>(false);\n    const [acadLoadingDone, setAcadLoadingDone] = useState<boolean>(false);\n    const [bulLoadingDone, setBulLoadingDone] = useState<boolean>(false);\n\n    const [nowSeconds, setNowSeconds] = useState<number>(0);\n\n    const [lastAll, setLastAll] = useState<any>(null);\n    const [lastHome, setLastHome] = useState<any>(null);\n    const [lastAcad, setLastAcad] = useState<any>(null);\n    const [lastBul, setLastBul] = useState<any>(null);\n\n    const [allSort, setAllSort] = useState<string>('timestamp.seconds')\n    const [homeSort, setHomeSort] = useState<string>('timestamp.seconds')\n    const [acadSort, setAcadSort] = useState<string>('timestamp.seconds')\n    const [bulSort, setBulSort] = useState<string>('timestamp.seconds')\n\n    const [upvoted, setUpvoted] = useState<string[]>([])\n    const [downvoted, setDownvoted] = useState<string[]>([])\n    const [changed, setChanged] = useState<boolean>(false);\n\n    const [reportMessage, setReportMessage] = useState<string>('')\n    const [reportAuthorName, setReportAuthorName] = useState<string>('')\n    const [reportID, setReportID] = useState<string>('')\n    const [reportHandling, setReportHandling] = useState<boolean>(false)\n    const [reportDone, setReportDone] = useState<boolean>(false);\n\n    const [reportModalShow, setReportModalShow] = useState<boolean>(false)\n\n    const getChannels = async () => {\n        try {\n            const user = await firebase.db.collection('users').doc(session.auth?.uid).get()\n            console.log('user = ', user.data())\n            const userData = user.data()\n            setUserDoc(userData)\n            if (userData?.upvoted) {\n                setUpvoted(userData?.upvoted)\n            }\n            if (userData?.downvoted) {\n                setDownvoted(userData?.downvoted)\n            }\n            const channelList = user.data()?.actives\n            console.log('channelList = ', channelList)\n            console.log('object.keys() = ', Object.keys(channelList).filter((key) => {\n                return channelList[key] == true;\n            }))\n            return Object.keys(channelList).filter((key) => {\n                return channelList[key] == true;\n            })\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n    const getPosts = async (sort: string, category: string, categoryFeed: any[], lastCategory: any, setLastCategory: any, setCategoryFeed: any, setLoading: any, subjects: string[] | undefined, update: boolean) => {\n        console.log('lastCategory START = ', lastCategory)\n        try {\n            var docList: any[] = []\n            var query = firebase.db.collection('posts').orderBy(sort, 'desc')\n\n            let posts = null;\n            console.log('subjects =', subjects)\n            if (category === 'all') {\n                console.log('lastCategory')\n                if (lastCategory) {\n                    console.log('lastCategory = ', lastCategory)\n                    const lastTime = sort == 'timestamp.seconds' ? lastCategory.data.timestamp.seconds : lastCategory.data.upvotes\n\n                    console.log('lastTime = ', lastTime)\n                    posts = await query.startAfter(lastTime).limit(10).get()\n                } else {\n                    posts = await query.limit(10).get()\n                    console.log('tHIS POSTS = ', posts.size)\n                }\n\n\n            } else {\n                if (category == 'academic') {\n                    if (subjects == undefined || subjects?.length == 0) {\n                        posts = null\n                        setLoading(true)\n                        return\n                    }\n                    query = query.where('bulletin', '==', false)\n                }\n                if (lastCategory) {\n                    console.log('lastCategory 2 = ', lastCategory)\n                    const lastTime = sort == 'timestamp.seconds' ? lastCategory.data.timestamp.seconds : lastCategory.data.upvotes\n                    console.log('lastTime = ', lastTime)\n                    if (category == 'bulletin') {\n                        posts = await query.startAfter(lastTime).where('bulletin', '==', true).limit(10).get()\n                    } else {\n                        posts = await query.startAfter(lastTime).where('channels', 'array-contains-any', subjects).limit(10).get()\n                    }\n                } else {\n                    if (category == 'bulletin') {\n                        posts = await query.where('bulletin', '==', true).limit(10).get()\n                    } else {\n                        posts = await query.where('channels', 'array-contains-any', subjects).limit(10).get()\n                    }\n                }\n            }\n\n\n            if (posts?.empty || posts == null) {\n                console.log('No matching documents')\n                setLoading(true)\n                return;\n            }\n\n\n            posts?.forEach(doc => {\n                docList = [...docList, { id: doc.id, data: doc.data() }];\n            });\n\n            const lastPost = docList[docList.length - 1]\n            setLastCategory(lastPost)\n\n            for (let i = 0; i < docList.length; i++) {\n                const doc = docList[i]\n                const numComments = await firebase.db.collection('comments').where('thread', '==', doc.id).get()\n                docList[i] = { id: doc.id, data: doc.data, numComments: numComments.size }\n            }\n\n            if (update) {\n                setCategoryFeed([...docList])\n\n            } else {\n                setCategoryFeed([...categoryFeed, ...docList])\n            }\n\n            setLoading(true)\n\n\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n    const loadPosts = async () => {\n        let subjects: string[] | undefined = []\n        if (session.auth) {\n            subjects = await getChannels()\n        }\n\n        setChannels(subjects)\n\n        getPosts('timestamp.seconds', 'all', allFeed, lastAll, setLastAll, setAllFeed, setAllLoadingDone, subjects, false)\n        getPosts('timestamp.seconds', 'home', homeFeed, lastHome, setLastHome, setHomeFeed, setHomeLoadingDone, subjects, false)\n        getPosts('timestamp.seconds', 'academic', academic, lastAcad, setLastAcad, setAcademic, setAcadLoadingDone, subjects, false)\n        getPosts('timestamp.seconds', 'bulletin', bulletin, lastBul, setLastBul, setBulletin, setBulLoadingDone, subjects, false)\n\n        console.log('subjects = ', subjects)\n    }\n\n    useEffect(() => {\n        var now = new Date();\n        var seconds = ((now.getTime()) * .001) >> 0;\n        setNowSeconds(seconds);\n\n        console.log(seconds)\n        //retrieves the most recent 10 posts\n\n\n\n        loadPosts()\n    }, [session, firebase])\n\n    const handleReportChange = (event: any) => {\n        setReportMessage(event.target.value);\n    }\n\n\n    //a feed object\n    const feedCard = (object: { id: string; data: { title: string; desc: string; timestamp: { seconds: number, nanoseconds: number }; author: string; channels: Array<string>; authorName: string; upvotes: number; bounty: number; bulletin: boolean }; numComments: number }) => {\n\n        var time = nowSeconds - object.data.timestamp.seconds;\n        var message = ''\n        if (time < 120) {\n            message = 'about a minute ago'\n        } else if (time < 3600) {\n            message = `${Math.floor(time / 60)} minutes ago`\n        } else if (time < 86400) {\n            let curTime = Math.floor(time / 3600)\n            if (curTime == 1) {\n                message = 'about an hour ago'\n            } else {\n                message = `${curTime} hours ago`\n            }\n        } else {\n            let curTime = Math.floor(time / 86400)\n            if (curTime == 1) {\n                message = 'yesterday'\n            } else {\n                message = `${curTime} days ago`\n            }\n        }\n\n        const channelView = () => {\n            const subjectObjects = object.data.channels?.map((d) => <p key={d}>{(object.data.channels.indexOf(d) == 0) ? `#${d}` : `, #${d}`}</p>)\n            return (\n                <div>\n                    <Row style={{ marginLeft: 1 }}>{subjectObjects}</Row>\n\n                </div>\n            )\n        }\n\n        const handleVote = (upvoteTrue: boolean) => {\n            var upvoteList: string[] = []\n            var downvoteList: string[] = []\n            var upvoteIndex = -1\n            var downvoteIndex = -1\n            console.log('userDoc = ', userDoc)\n            if (userDoc.upvoted) {\n                upvoteList = upvoted\n                upvoteIndex = upvoteList.indexOf(object.id)\n            }\n            if (userDoc.downvoted) {\n                downvoteList = downvoted\n                downvoteIndex = downvoteList.indexOf(object.id)\n            }\n\n            console.log('upvoteIndex = ', upvoteIndex)\n\n            console.log('upvoteList = ', upvoteList)\n\n            console.log('downvoteIndex = ', downvoteIndex)\n\n            console.log('downvoteList = ', downvoteList)\n\n            var upvotes: number;\n            if (object.data.upvotes) {\n                upvotes = object.data.upvotes\n            } else {\n                upvotes = 0\n            }\n\n            if (upvoteTrue) {\n\n                if (upvoteIndex == -1) {\n                    if (downvoteIndex != -1) {\n                        downvoteList.splice(downvoteIndex, 1)\n                        firebase.db.collection('users').doc(session.auth?.uid).update({ downvoted: downvoteList })\n                        upvotes = upvotes + 1\n                    }\n                    upvoteList = [...upvoteList, object.id]\n                    console.log('upvoteList after adding = ', upvoteList)\n                    upvotes = upvotes + 1\n\n                } else {\n                    upvoteList.splice(upvoteIndex, 1)\n                    console.log('upvoteList after splice = ', upvoteList)\n                    upvotes = upvotes - 1\n                }\n                firebase.db.collection('users').doc(session.auth?.uid).update({ upvoted: upvoteList })\n\n                firebase.db.collection('posts').doc(object.id).update({ upvotes: upvotes })\n                object.data.upvotes = upvotes;\n            } else {\n                if (downvoteIndex == -1) {\n                    if (upvoteIndex != -1) {\n                        upvoteList.splice(upvoteIndex, 1)\n                        firebase.db.collection('users').doc(session.auth?.uid).update({ upvoted: upvoteList })\n                        upvotes = upvotes - 1\n                    }\n                    downvoteList = [...downvoteList, object.id]\n                    console.log('downvoteList after adding = ', downvoteList)\n                    upvotes = upvotes - 1\n                } else {\n                    downvoteList.splice(downvoteIndex, 1)\n                    console.log('downvoteList after splice = ', downvoteList)\n                    upvotes = upvotes + 1\n                }\n\n\n                firebase.db.collection('users').doc(session.auth?.uid).update({ downvoted: downvoteList })\n                firebase.db.collection('posts').doc(object.id).update({ upvotes: upvotes })\n                object.data.upvotes = upvotes;\n            }\n\n\n            if (upvoteList) {\n                setUpvoted(upvoteList)\n            }\n            if (downvoteList) {\n                setDownvoted(downvoteList)\n            }\n        }\n\n        return (\n\n            <Card style={{ marginBottom: 20 }}>\n                <Card.Body>\n\n                    {object.data.bulletin ?\n                        <div>\n                            <a href={`/post/${object.id}`}>\n                                <Card.Title>{object.data.title}</Card.Title>\n                            </a>\n                            <Card.Subtitle>{channelView()}</Card.Subtitle>\n                        </div>\n                        :\n                        <Row>\n                            <Col>\n                                <a href={`/post/${object.id}`}>\n                                    <Card.Title>{object.data.title}</Card.Title>\n                                </a>\n                                <Card.Subtitle>{channelView()}</Card.Subtitle>\n\n                            </Col>\n                            <Col xs={3} md={2} style={{ textAlign: 'center' }}>\n                                <Card bg=\"light\" >\n                                    {object.data.bounty <= 0 ?\n                                        <Card.Title style={{ paddingTop: 10 }}>Claimed</Card.Title>\n                                        :\n                                        <Card.Title style={{ paddingTop: 10 }}>{object.data.bounty} cr.</Card.Title>\n                                    }\n\n                                </Card>\n\n                            </Col>\n                        </Row>\n                    }\n\n                    <Card.Text className={styles.fontLess}> {object.data.desc}</Card.Text>\n\n\n                    <Card.Text className={styles.fontLess} style={{ paddingTop: 10 }}>\n                        <Button disabled={!session.auth} size=\"sm\" active={upvoted.includes(object.id)} variant=\"outline-primary\" onClick={() => {\n                            handleVote(true)\n                            setChanged(!changed)\n                        }}>\n                            ▲\n                            </Button>\n                        {' '}\n                        &nbsp;\n                        {object.data.upvotes ?\n                            object.data.upvotes\n                            :\n                            0\n                        }\n                        {' '}\n                        &nbsp;\n                        <Button disabled={!session.auth} size=\"sm\" active={downvoted.includes(object.id)} variant=\"outline-danger\" onClick={() => {\n                            handleVote(false)\n                            setChanged(!changed)\n                        }}>▼</Button>\n                        {' '}\n                        &nbsp;\n                        {object.numComments == 1 ?\n                            <a href={`/post/${object.id}`}>{object.numComments} comment</a>\n                            :\n                            <a href={`/post/${object.id}`}>{object.numComments} comments</a>\n                        }\n\n                        {' '} - posted by <a href={`/user/${object.data.authorName}`}>{`@${object.data.authorName}`}</a> - {message}\n                        {' - '}\n                        &nbsp;\n                        <Button disabled={!session.auth} size=\"sm\" variant='outline-danger' onClick={() => {\n                            setReportAuthorName(object.data.authorName)\n                            setReportID(object.id)\n                            setReportModalShow(true)\n                        }}>\n                            ⚐\n                        </Button>\n                    </Card.Text>\n                </Card.Body>\n            </Card >\n            //\n        )\n    }\n\n    //loading animation while retrieving feed\n    const feedLoadingView = () => {\n        return (\n            <div style={{ paddingTop: 15 }}>\n\n                <Card style={{ marginBottom: 20 }}>\n                    <Card.Body>\n                        <Card.Title></Card.Title>\n                        <Card.Text></Card.Text>\n                        <Spinner animation=\"border\" />\n                    </Card.Body>\n                </Card>\n                <Card style={{ marginBottom: 20 }}>\n                    <Card.Body>\n                        <Card.Title></Card.Title>\n                        <Card.Text></Card.Text>\n                        <Spinner animation=\"border\" />\n                    </Card.Body>\n                </Card>\n                <Card style={{ marginBottom: 20 }}>\n                    <Card.Body>\n                        <Card.Title></Card.Title>\n                        <Card.Text></Card.Text>\n                        <Spinner animation=\"border\" />\n                    </Card.Body>\n                </Card>\n                <Card style={{ marginBottom: 20 }}>\n                    <Card.Body>\n                        <Card.Title></Card.Title>\n                        <Card.Text></Card.Text>\n                        <Spinner animation=\"border\" />\n                    </Card.Body>\n                </Card>\n                <Card style={{ marginBottom: 20 }}>\n                    <Card.Body>\n                        <Card.Title></Card.Title>\n                        <Card.Text></Card.Text>\n                        <Spinner animation=\"border\" />\n                    </Card.Body>\n                </Card>\n            </div>\n\n        )\n    }\n\n    //list of feed objects\n    const feedView = (feedList: { id: string; data: { title: string; desc: string; timestamp: { seconds: number; nanoseconds: number }; author: string; channels: string[]; authorName: string; upvotes: number; bounty: number; bulletin: boolean }; numComments: number }[]) => {\n        const feedItems = feedList.map((object: { id: string; data: { title: string; desc: string; timestamp: { seconds: number, nanoseconds: number }; author: string; channels: Array<string>; authorName: string; upvotes: number; bounty: number; bulletin: boolean }; numComments: number }) => <div key={object.id} style={{ paddingTop: 15 }}>{feedCard(object)}</div>\n        )\n        return feedItems\n    }\n\n    const sortButton = (category: string, categoryFeed: any[], feedSort: string, setLastFeed: any, setCategoryFeed: any, setFeedLoading: any, setFeedSort: any) => {\n        const handleSort = async (sortType: string) => {\n            setLastFeed(null)\n            setCategoryFeed([])\n            setFeedLoading(false)\n            await getPosts(sortType, category, categoryFeed, null, setLastFeed, setCategoryFeed, setFeedLoading, channels, true)\n            await setFeedSort(sortType)\n        }\n\n        return (\n            <DropdownButton id=\"sort\" title={feedSort == 'bounty' ? 'Highest Bounty' : 'timestamp.seconds' ? 'Most Recent' : 'Top Rated'} variant='light' style={{ paddingTop: 15 }}>\n                <Dropdown.Item active={feedSort == 'timestamp.seconds'}\n                    onClick={async () => {\n                        if (feedSort == 'timestamp.seconds') {\n                            return\n                        } else {\n                            handleSort('timestamp.seconds')\n                        }\n                    }}\n                >\n                    Most Recent\n                                        </Dropdown.Item>\n\n                <Dropdown.Item active={feedSort == 'bounty'}\n                    onClick={async () => {\n                        if (feedSort == 'bounty') {\n                            return\n                        } else {\n                            handleSort('bounty')\n                        }\n                    }}\n                >\n                    Highest Bounty\n                                        </Dropdown.Item>\n\n                <Dropdown.Item active={feedSort == 'upvotes'}\n                    onClick={() => {\n                        if (feedSort == 'upvotes') {\n                            return\n                        } else {\n                            handleSort('upvotes')\n                        }\n                    }}\n                >\n                    Top Rated\n                                        </Dropdown.Item>\n            </DropdownButton>\n        )\n    }\n\n    return (\n        <div>\n            <NavBar />\n            <Modal show={reportModalShow} onHide={() => {\n                setReportModalShow(false)\n                setReportDone(false)\n                setReportMessage('')\n            }}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Report @{reportAuthorName}</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    Let us know if this user is violating community agreements as outlined in our terms of service. Thanks!\n                    </Modal.Body>\n                <Modal.Footer>\n                    <InputGroup>\n                        <Form.Control as=\"textarea\" placeholder=\"What's the reason for reporting this user?\" rows={3} onChange={handleReportChange} value={reportMessage} />\n                    </InputGroup>\n                    {reportHandling ?\n                        <Button disabled variant='danger'>\n                            <Spinner\n                                as=\"span\"\n                                animation=\"border\"\n                                size=\"sm\"\n                                role=\"status\"\n                                aria-hidden=\"true\"\n                            />\n                        </Button>\n                        :\n                        reportDone ?\n                            <Button disabled variant='danger'>Thanks! You can close this window.</Button>\n\n                            :\n                            <Button variant='danger' onClick={async () => {\n                                setReportHandling(true);\n                                await functions().httpsCallable('createReport')({ post: reportID, reportMessage: reportMessage, submittedBy: session.auth?.uid, timestamp: firestore.Timestamp.now() }).then(() => {\n                                    setReportHandling(false);\n                                    setReportDone(true);\n                                })\n                            }}>Report\n                        </Button>\n                    }\n\n                </Modal.Footer>\n            </Modal>\n            <Container className={styles.paddingTop}>\n                <Row>\n                    <Col>\n                        <h1 style={{ paddingLeft: 22, paddingBottom: 15 }}>Feed</h1>\n                    </Col>\n                    <Col>\n\n                    </Col>\n                </Row>\n                <Tabs defaultActiveKey={session.auth ? 'Home' : 'All'} id=\"feed-nav\">\n                    <Tab eventKey=\"All\" title=\"All\">\n                        {sortButton('all', allFeed, allSort, setLastAll, setAllFeed, setAllLoadingDone, setAllSort)}\n                        {\n\n                            allFeed[0] ?\n                                <div>\n                                    {feedView(allFeed)}\n                                    {allLoadingDone ?\n                                        <Button variant='light' onClick={() => {\n                                            setAllLoadingDone(false)\n                                            getPosts(allSort, 'all', allFeed, lastAll, setLastAll, setAllFeed, setAllLoadingDone, [], false)\n                                        }}>Load more</Button>\n                                        :\n                                        <Button disabled variant=\"light\">\n                                            <Spinner\n                                                as=\"span\"\n                                                animation=\"border\"\n                                                size=\"sm\"\n                                                role=\"status\"\n                                                aria-hidden=\"true\"\n                                            />\n                                        </Button>\n                                    }\n\n                                </div>\n\n                                :\n                                allLoadingDone ?\n                                    <Card style={{ marginTop: 15 }}>\n                                        <Card.Body>\n                                            <Card.Text>No new posts.</Card.Text>\n                                        </Card.Body>\n                                    </Card>\n                                    :\n                                    feedLoadingView()\n                        }\n\n                    </Tab>\n                    <Tab eventKey=\"Home\" title=\"Home\">\n                        {sortButton('home', homeFeed, homeSort, setLastHome, setHomeFeed, setHomeLoadingDone, setHomeSort)}\n                        {\n                            homeFeed[0] ?\n                                <div>\n                                    {feedView(homeFeed)}\n                                    {homeLoadingDone ?\n                                        <Button variant='light' onClick={() => {\n                                            setHomeLoadingDone(false)\n                                            getPosts(homeSort, 'home', homeFeed, lastHome, setLastHome, setHomeFeed, setHomeLoadingDone, channels, false)\n                                        }}>Load more</Button>\n                                        :\n                                        <Button disabled variant='light'>\n                                            <Spinner\n                                                as=\"span\"\n                                                animation=\"border\"\n                                                size=\"sm\"\n                                                role=\"status\"\n                                                aria-hidden=\"true\"\n                                            />\n                                        </Button>}\n\n                                </div>\n\n                                :\n                                homeLoadingDone ?\n                                    session.auth ?\n                                        <Card style={{ marginTop: 15 }}>\n                                            <Card.Body>\n                                                <Card.Text>No new posts. Subscribe to more channels in your Profile page!</Card.Text>\n                                            </Card.Body>\n                                        </Card>\n                                        :\n                                        <Card style={{ marginTop: 15 }}>\n                                            <Card.Body>\n                                                <Card.Text>Create an account to subscribe to specific channels.</Card.Text>\n                                            </Card.Body>\n                                        </Card>\n                                    :\n                                    feedLoadingView()\n                        }\n\n                    </Tab>\n                    <Tab eventKey=\"Academic\" title=\"Academic\">\n                        {sortButton('academic', academic, acadSort, setLastAcad, setAcademic, setAcadLoadingDone, setAcadSort)}\n                        {\n                            academic[0] ?\n                                <div>\n                                    {feedView(academic)}\n                                    {acadLoadingDone ?\n                                        <Button variant='light' onClick={() => {\n                                            setAcadLoadingDone(false)\n                                            getPosts(acadSort, 'academic', academic, lastAcad, setLastAcad, setAcademic, setAcadLoadingDone, channels, false)\n                                        }}>Load more</Button>\n                                        :\n                                        <Button disabled variant='light'>\n                                            <Spinner\n                                                as=\"span\"\n                                                animation=\"border\"\n                                                size=\"sm\"\n                                                role=\"status\"\n                                                aria-hidden=\"true\"\n                                            />\n                                        </Button>}\n\n                                </div>\n\n                                :\n                                acadLoadingDone ?\n                                    session.auth ?\n                                        <Card style={{ marginTop: 15 }}>\n                                            <Card.Body>\n                                                <Card.Text>Subscribe to channels in your Profile page.</Card.Text>\n                                            </Card.Body>\n                                        </Card>\n                                        :\n                                        <Card style={{ marginTop: 15 }}>\n                                            <Card.Body>\n                                                <Card.Text>Create an account to subscribe to specific channels.</Card.Text>\n                                            </Card.Body>\n                                        </Card>\n                                    :\n                                    feedLoadingView()\n                        }\n\n                    </Tab>\n                    <Tab eventKey=\"Bulletin\" title=\"Bulletin\">\n                        {sortButton('bulletin', bulletin, bulSort, setLastBul, setBulletin, setBulLoadingDone, setBulSort)}\n                        {\n                            bulletin[0] ?\n                                <div>\n                                    {feedView(bulletin)}\n                                    {bulLoadingDone ?\n                                        <Button variant='light' onClick={() => {\n                                            setBulLoadingDone(false)\n                                            getPosts(bulSort, 'bulletin', bulletin, lastBul, setLastBul, setBulletin, setBulLoadingDone, channels, false)\n                                        }}>Load more</Button>\n                                        :\n                                        <Button disabled variant='light'>\n                                            <Spinner\n                                                as=\"span\"\n                                                animation=\"border\"\n                                                size=\"sm\"\n                                                role=\"status\"\n                                                aria-hidden=\"true\"\n                                            />\n                                        </Button>\n                                    }\n\n                                </div>\n\n                                :\n                                bulLoadingDone ?\n                                    <Card style={{ marginTop: 15 }}>\n                                        <Card.Body>\n                                            <Card.Text>No new posts.</Card.Text>\n                                        </Card.Body>\n                                    </Card>\n                                    :\n                                    feedLoadingView()\n                        }\n\n                    </Tab>\n                </Tabs>\n            </Container>\n        </div>\n    )\n}\n\nexport { HomePage }\n","import React, { useState, useCallback, useEffect } from 'react'\nimport { useParams } from 'react-router-dom';\nimport { useFirebase, Firebase } from '../Firebase'\nimport { firestore } from 'firebase'\nimport { Navbar, Nav, Button, DropdownButton, Dropdown, Container, Row, Col, Spinner, Jumbotron, Image, ProgressBar, OverlayTrigger, Popover, Carousel, Card } from 'react-bootstrap'\nimport { useSession } from '../Session'\nimport styles from './Profile.module.css'\nimport { StringLocale } from 'yup';\nimport { NavBar } from '../../constants'\n\nconst ProfilePage: React.FC = () => {\n    const { username } = useParams()\n    const firebase = useFirebase()\n    const session = useSession()\n\n    const [user, setUser] = useState<any>(null);\n    const [userid, setUserid] = useState<string>('')\n    const [userLoading, setUserLoading] = useState<boolean>(true);\n\n    const [userSelf, setUserSelf] = useState<boolean>(false);\n    const [userSelfDoc, setUserSelfDoc] = useState<any>(null);\n    const [upvoted, setUpvoted] = useState<string[]>([])\n    const [downvoted, setDownvoted] = useState<string[]>([])\n    const [editSubjects, setEditSubjects] = useState<boolean>(false);\n\n    const [changed, setChanged] = useState<boolean>(false);\n    const [lang, setLang] = useState<boolean>(false)\n    const [sci, setSci] = useState<boolean>(false)\n    const [ss, setSS] = useState<boolean>(false);\n\n    const [history, setHistory] = useState<any[] | null>(null);\n\n    const [historyDone, setHistoryDone] = useState<boolean>(false);\n\n    const [nowSeconds, setNowSeconds] = useState<number>(0);\n\n    const [lastPost, setLastPost] = useState<any>(null)\n\n    const [sort, setSort] = useState<string>('timestamp.seconds')\n\n\n    //list of subjects\n    const [actives, setActives] = useState<any>({});\n\n    const sortButton = (sort: string) => {\n        const handleSort = async (sort: string) => {\n            setLastPost(null)\n            setHistory(null)\n            setHistoryDone(false)\n            await getPosts(sort, userid, null, null)\n            setSort(sort)\n        }\n\n        return (\n            <DropdownButton id=\"sort\" title={sort == 'timestamp.seconds' ? 'Most Recent' : 'Top Rated'} variant='light' style={{ paddingBottom: 15 }}>\n                <Dropdown.Item active={sort == 'timestamp.seconds'}\n                    onClick={async () => {\n                        if (sort == 'timestamp.seconds') {\n                            return\n                        } else {\n                            handleSort('timestamp.seconds')\n                            setChanged(!changed)\n                        }\n                    }}\n                >\n                    Most Recent\n                                        </Dropdown.Item>\n                <Dropdown.Item active={sort == 'upvotes'}\n                    onClick={async () => {\n                        if (sort == 'upvotes') {\n                            return\n                        } else {\n                            handleSort('upvotes')\n                            setChanged(!changed)\n                        }\n                    }}\n                >\n                    Top of All Time\n                                        </Dropdown.Item>\n            </DropdownButton>\n        )\n    }\n\n    const getPosts = async (sort: string, userID: string, last: any | null, history: any[] | null) => {\n        try {\n            var docList: any[] = []\n            var query = firebase.db.collection('posts').where('author', '==', userID).orderBy(sort, \"desc\");\n\n            if (last) {\n                console.log('lastPost = ', last)\n                const lastTime = sort == 'timestamp.seconds' ? last.data.timestamp.seconds : last.data.upvotes\n\n                console.log('lastTime = ', lastTime)\n                query = query.startAfter(lastTime)\n            }\n\n            const posts = await query.limit(10).get()\n\n\n            if (posts.empty || posts == null) {\n                console.log('No matching documents')\n                setHistoryDone(true);\n                return;\n            }\n            posts.forEach(doc => {\n                docList = [...docList, { id: doc.id, data: doc.data() }];\n            });\n\n            for (let i = 0; i < docList.length; i++) {\n                const doc = docList[i]\n                const numComments = await firebase.db.collection('comments').where('thread', '==', doc.id).get()\n                docList[i] = { id: doc.id, data: doc.data, numComments: numComments.size }\n            }\n\n            const lastDoc = docList[docList.length - 1]\n            setLastPost(lastDoc)\n\n            if (history) {\n                await setHistory([...history, ...docList])\n            } else {\n                await setHistory(docList)\n            }\n\n            console.log('docList = ', docList)\n            setHistoryDone(true)\n        } catch (e) {\n            console.log(e)\n            setHistoryDone(true)\n        }\n    }\n\n    useEffect(() => {\n        var now = new Date();\n        var seconds = ((now.getTime()) * .001) >> 0;\n        setNowSeconds(seconds);\n\n        const getUser = async () => {\n            const results = await firestore().collection('users').where('username', '==', username).limit(1).get();\n            if (results.empty) {\n                console.log('empty');\n                setUserLoading(false);\n            } else {\n\n                const userID = await results.docs[0].id\n                setUserid(userID)\n                const userResults = await results.docs[0].data()\n                setUser(userResults)\n                setActives(userResults.actives)\n\n                if (userResults.actives) {\n                    if (userResults.actives['French'] || userResults.actives['Mandarin'] || userResults.actives['Spanish'] || userResults.actives['Languages (General)']) {\n                        setLang(true)\n                    }\n\n                    if (userResults.actives['Biology'] || userResults.actives['Chemistry'] || userResults.actives['Physics'] || userResults.actives['Sciences (General)']) {\n                        setSci(true)\n                    }\n\n                    if (userResults.actives['Psychology'] || userResults.actives['Sociology'] || userResults.actives['Social Sciences (General)']) {\n                        setSS(true)\n                    }\n                }\n\n\n                getPosts('timestamp.seconds', userID, lastPost, history);\n                setUserLoading(false);\n            }\n        }\n\n        getUser();\n\n        if (session.auth) {\n            const getSelf = async () => {\n                const self = await firestore().collection('users').doc(session?.auth?.uid).get()\n                if (self?.data()?.username == username) {\n                    setUserSelf(true);\n                }\n                setUserSelfDoc(self.data());\n                setUpvoted(self.data()?.upvoted)\n                setDownvoted(self.data()?.downvoted)\n            }\n\n\n            getSelf();\n        }\n\n    }, [session, firebase])\n\n    const subjectsView = () => {\n\n        const subjectObjects = Object.entries(actives).map(([keyName, keyIndex]) =>\n            // use keyName to get current key's name\n            // and a[keyName] to get its value\n            actives[keyName] ?\n                keyName == 'bulletin' ?\n                    <div key={keyName}></div>\n                    :\n                    <Button key={keyName} active variant='outline-dark' style={{ marginRight: 15, marginBottom: 15 }}>{keyName}</Button>\n                :\n                <div key={keyName}></div>\n\n        )\n\n        return (\n            <Row style={{ paddingTop: 15, paddingLeft: 15 }}>\n                {subjectObjects}\n            </Row>\n        )\n    }\n\n    const subjectEdit = (subject: string) => {\n        let activesEdit = actives;\n        if (actives[subject] == true) {\n            activesEdit[subject] = false;\n            setActives(activesEdit)\n        } else {\n            activesEdit[subject] = true;\n            setActives(activesEdit);\n        }\n    }\n\n\n    const editSubjectsView = () => {\n\n        return (\n            <Row style={{ paddingTop: 15, paddingLeft: 15 }}>\n                <Button active={actives['Arts']} variant='outline-dark' style={{ marginRight: 15, marginBottom: 15 }}\n                    onClick={() => {\n                        subjectEdit('Arts')\n                        setChanged(!changed);\n                    }}\n                >\n                    Arts\n                </Button>\n                <Button active={actives['Business']} variant='outline-dark' style={{ marginRight: 15, marginBottom: 15 }}\n                    onClick={() => {\n                        subjectEdit('Business')\n                        setChanged(!changed);\n                    }}\n                >\n                    Business</Button>\n                <Button variant='outline-dark' active={actives['Computer Science']} style={{ marginRight: 15, marginBottom: 15 }}\n                    onClick={() => {\n                        subjectEdit('Computer Science')\n                        setChanged(!changed);\n                    }}\n                >\n                    Computer Science\n                </Button>\n                <Button variant='outline-dark' active={actives['Economics']} style={{ marginRight: 15, marginBottom: 15 }}\n                    onClick={() => {\n                        subjectEdit('Economics')\n                        setChanged(!changed);\n                    }}\n                >\n                    Economics</Button>\n                <Button variant='outline-dark' active={actives['Finance']} style={{ marginRight: 15, marginBottom: 15 }}\n                    onClick={() => {\n                        subjectEdit('Finance')\n                        setChanged(!changed);\n                    }}\n                >\n                    Finance</Button>\n                <Button variant='outline-dark' active={actives['History']} style={{ marginRight: 15, marginBottom: 15 }}\n                    onClick={() => {\n                        subjectEdit('History')\n                        setChanged(!changed);\n                    }}\n                >\n                    History</Button>\n                <Button variant='outline-dark' active={actives['Humanities']} style={{ marginRight: 15, marginBottom: 15 }}\n                    onClick={() => {\n                        subjectEdit('Humanities')\n                        setChanged(!changed);\n                    }}\n                >\n                    Humanities</Button>\n                <DropdownButton id=\"lang\" title=\"Languages\" variant={lang ? 'dark' : 'outline-dark'} style={{ marginRight: 15, marginBottom: 15 }}>\n                    <Dropdown.Item active={actives['French']} onClick={() => {\n                        subjectEdit('French')\n                        setChanged(!changed);\n                        if (actives['French'] || actives['Mandarin'] || actives['Spanish'] || actives['Languages (General)']) {\n                            setLang(true)\n                        } else {\n                            setLang(false)\n                        }\n                    }}>\n                        French\n                    </Dropdown.Item>\n                    <Dropdown.Item active={actives['Mandarin']} onClick={() => {\n                        subjectEdit('Mandarin')\n                        setChanged(!changed);\n                        if (actives['French'] || actives['Mandarin'] || actives['Spanish'] || actives['Languages (General)']) {\n                            setLang(true)\n                        } else {\n                            setLang(false)\n                        }\n                    }}>\n                        Mandarin\n                    </Dropdown.Item >\n                    <Dropdown.Item active={actives['Spanish']} onClick={() => {\n                        subjectEdit('Spanish')\n                        setChanged(!changed);\n                        if (actives['French'] || actives['Mandarin'] || actives['Spanish'] || actives['Languages (General)']) {\n                            setLang(true)\n                        } else {\n                            setLang(false)\n                        }\n                    }}>\n                        Spanish\n                    </Dropdown.Item>\n                    <Dropdown.Item active={actives['Languages (General)']} onClick={() => {\n                        subjectEdit('Languages (General)')\n                        setChanged(!changed);\n                        if (actives['French'] || actives['Mandarin'] || actives['Spanish'] || actives['Languages (General)']) {\n                            setLang(true)\n                        } else {\n                            setLang(false)\n                        }\n                    }}>\n                        General\n                    </Dropdown.Item>\n                </DropdownButton>\n                <Button variant='outline-dark' style={{ marginRight: 15, marginBottom: 15 }} active={actives['Mathematics']} onClick={() => {\n                    subjectEdit('Mathematics')\n                    setChanged(!changed);\n                }}>\n                    Mathematics\n                </Button>\n                <DropdownButton id=\"sci\" title=\"Sciences\" variant={sci ? 'dark' : 'outline-dark'} style={{ marginRight: 15, marginBottom: 15 }}>\n                    <Dropdown.Item active={actives['Biology']} onClick={() => {\n                        subjectEdit('Biology')\n                        setChanged(!changed);\n                        if (actives['Biology'] || actives['Chemistry'] || actives['Physics'] || actives['Sciences (General)']) {\n                            setSci(true)\n                        } else {\n                            setSci(false)\n                        }\n                    }}>\n                        Biology\n                    </Dropdown.Item>\n                    <Dropdown.Item active={actives['Chemistry']} onClick={() => {\n                        subjectEdit('Chemistry')\n                        setChanged(!changed);\n                        if (actives['Biology'] || actives['Chemistry'] || actives['Physics'] || actives['Sciences (General)']) {\n                            setSci(true)\n                        } else {\n                            setSci(false)\n                        }\n                    }}>\n                        Chemistry\n                    </Dropdown.Item>\n                    <Dropdown.Item active={actives['Physics']} onClick={() => {\n                        subjectEdit('Physics')\n                        setChanged(!changed);\n                        if (actives['Biology'] || actives['Chemistry'] || actives['Physics'] || actives['Sciences (General)']) {\n                            setSci(true)\n                        } else {\n                            setSci(false)\n                        }\n                    }}>\n                        Physics\n                    </Dropdown.Item>\n                    <Dropdown.Item active={actives['Sciences (General)']} onClick={() => {\n                        subjectEdit('Sciences (General)')\n                        setChanged(!changed);\n                        if (actives['Biology'] || actives['Chemistry'] || actives['Physics'] || actives['Sciences (General)']) {\n                            setSci(true)\n                        } else {\n                            setSci(false)\n                        }\n                    }}>\n                        General\n                    </Dropdown.Item>\n                </DropdownButton>\n                <DropdownButton id=\"lang\" title=\"Social Sciences\" variant={ss ? 'dark' : 'outline-dark'} style={{ marginRight: 15, marginBottom: 15 }} >\n                    <Dropdown.Item active={actives['Psychology']} onClick={() => {\n                        subjectEdit('Psychology')\n                        setChanged(!changed);\n                        if (actives['Psychology'] || actives['Sociology'] || actives['Social Sciences (General)']) {\n                            setSS(true)\n                        } else {\n                            setSS(false)\n                        }\n                    }}>\n                        Psychology\n                    </Dropdown.Item>\n                    <Dropdown.Item active={actives['Sociology']} onClick={() => {\n                        subjectEdit('Sociology')\n                        setChanged(!changed);\n                        if (actives['Psychology'] || actives['Sociology'] || actives['Social Sciences (General)']) {\n                            setSS(true)\n                        } else {\n                            setSS(false)\n                        }\n                    }}>\n                        Sociology\n                    </Dropdown.Item>\n                    <Dropdown.Item active={actives['Social Sciences (General)']} onClick={() => {\n                        subjectEdit('Social Sciences (General)')\n                        setChanged(!changed);\n                        if (actives['Psychology'] || actives['Sociology'] || actives['Social Sciences (General)']) {\n                            setSS(true)\n                        } else {\n                            setSS(false)\n                        }\n                    }}>\n                        General\n                    </Dropdown.Item>\n                </DropdownButton>\n                <Button variant='outline-dark' style={{ marginRight: 15, marginBottom: 15 }} active={actives['General']} onClick={() => {\n                    subjectEdit('General')\n                    setChanged(!changed);\n                }}>General</Button>\n            </Row>\n        )\n    }\n\n    const handleVote = (upvoteTrue: boolean, object: any) => {\n        var collect = 'posts'\n        var upvoteList: string[] = []\n        var downvoteList: string[] = []\n        var upvoteIndex = -1\n        var downvoteIndex = -1\n\n        if (userSelfDoc.upvoted) {\n            upvoteList = upvoted\n            upvoteIndex = upvoteList.indexOf(object.id)\n        }\n        if (userSelfDoc.downvoted) {\n            downvoteList = downvoted\n            downvoteIndex = downvoteList.indexOf(object.id)\n        }\n\n\n        var upvotes: number;\n        if (object.data.upvotes) {\n            upvotes = object.data.upvotes\n        } else {\n            upvotes = 0\n        }\n\n        if (upvoteTrue) {\n\n            if (upvoteIndex == -1) {\n                if (downvoteIndex != -1) {\n                    downvoteList.splice(downvoteIndex, 1)\n                    firebase.db.collection('users').doc(session.auth?.uid).update({ downvoted: downvoteList })\n                    upvotes = upvotes + 1\n                }\n                upvoteList = [...upvoteList, object.id]\n                console.log('upvoteList after adding = ', upvoteList)\n                upvotes = upvotes + 1\n\n            } else {\n                upvoteList.splice(upvoteIndex, 1)\n                console.log('upvoteList after splice = ', upvoteList)\n                upvotes = upvotes - 1\n            }\n            firebase.db.collection('users').doc(session.auth?.uid).update({ upvoted: upvoteList })\n\n            firebase.db.collection(collect).doc(object.id).update({ upvotes: upvotes })\n            object.data.upvotes = upvotes;\n        } else {\n            if (downvoteIndex == -1) {\n                if (upvoteIndex != -1) {\n                    upvoteList.splice(upvoteIndex, 1)\n                    firebase.db.collection('users').doc(session.auth?.uid).update({ upvoted: upvoteList })\n                    upvotes = upvotes - 1\n                }\n                downvoteList = [...downvoteList, object.id]\n                console.log('downvoteList after adding = ', downvoteList)\n                upvotes = upvotes - 1\n            } else {\n                downvoteList.splice(downvoteIndex, 1)\n                console.log('downvoteList after splice = ', downvoteList)\n                upvotes = upvotes + 1\n            }\n\n\n            firebase.db.collection('users').doc(session.auth?.uid).update({ downvoted: downvoteList })\n            firebase.db.collection(collect).doc(object.id).update({ upvotes: upvotes })\n            object.data.upvotes = upvotes;\n        }\n\n\n        if (upvoteList) {\n            setUpvoted(upvoteList)\n        }\n        if (downvoteList) {\n            setDownvoted(downvoteList)\n        }\n    }\n\n    //a feed object\n    const feedCard = (object: { id: string; data: { title: string; desc: string; timestamp: { seconds: number, nanoseconds: number }; author: string; channels: Array<string>; authorName: string, upvotes: number }; numComments: number }) => {\n\n        var time = nowSeconds - object.data.timestamp.seconds;\n        var message = ''\n        if (time < 120) {\n            message = 'about a minute ago'\n        } else if (time < 3600) {\n            message = `${Math.floor(time / 60)} minutes ago`\n        } else if (time < 86400) {\n            let curTime = Math.floor(time / 3600)\n            if (curTime == 1) {\n                message = 'about an hour ago'\n            } else {\n                message = `${curTime} hours ago`\n            }\n        } else {\n            let curTime = Math.floor(time / 86400)\n            if (curTime == 1) {\n                message = 'yesterday'\n            } else {\n                message = `${curTime} days ago`\n            }\n        }\n\n        const channelView = () => {\n            const subjectObjects = object.data.channels?.map((d) => <p key={d}>{(object.data.channels.indexOf(d) == 0) ? `#${d}` : `, #${d}`}</p>)\n            return (\n                <div>\n                    <Row style={{ marginLeft: 1 }}>{subjectObjects}</Row>\n\n                </div>\n            )\n        }\n\n        return (\n\n            <Card style={{ marginBottom: 20 }}>\n                <Card.Body>\n                    <Row>\n                        <Col>\n                            <a href={`/post/${object.id}`}>\n                                <Card.Title>{object.data.title}</Card.Title>\n                            </a>\n                            <Card.Subtitle>{channelView()}</Card.Subtitle>\n                            <Card.Text className={styles.fontLess}> {object.data.desc}</Card.Text>\n                        </Col>\n                        <Col xs={3} sm={2} style={{ textAlign: 'center' }}>\n                            <Button disabled={!session.auth} size=\"sm\" active={upvoted.includes(object.id)} variant=\"outline-primary\" onClick={() => {\n                                handleVote(true, object)\n                                setChanged(!changed)\n                            }}>\n                                ▲\n                            </Button>\n                            <p>{object.data.upvotes ?\n                                object.data.upvotes\n                                :\n                                0\n                            }\n                            </p>\n                            <Button disabled={!session.auth} size=\"sm\" active={downvoted.includes(object.id)} variant=\"outline-danger\" onClick={() => {\n                                handleVote(false, object)\n                                setChanged(!changed)\n                            }}>▼</Button>\n                        </Col>\n                    </Row>\n                    <Card.Text className={styles.fontLess}>{object.numComments == 1 ?\n                        <a href={`/post/${object.id}`}>{object.numComments} comment</a>\n                        :\n                        <a href={`/post/${object.id}`}>{object.numComments} comments</a>\n                    }\n\n                        {' '} - posted by <a href={`/user/${object.data.authorName}`}>{`@${object.data.authorName}`}</a> - {message}</Card.Text>\n                </Card.Body>\n            </Card>\n\n            //\n        )\n    }\n\n    //list of feed objects\n    const feedView = (feedList: { id: string; data: { title: string; desc: string; timestamp: { seconds: number; nanoseconds: number }; author: string; channels: string[]; authorName: string, upvotes: number }; numComments: number }[]) => {\n        const feedItems = feedList.map((object: { id: string; data: { title: string; desc: string; timestamp: { seconds: number, nanoseconds: number }; author: string; channels: Array<string>; authorName: string, upvotes: number }; numComments: number }) => <div key={object.id} >{feedCard(object)}</div>\n        )\n        return feedItems\n    }\n\n\n    return (\n        <div>\n            <NavBar />\n            {userLoading ?\n                <Container className={styles.paddingTop}>\n                    <Spinner style={{ marginTop: 30, marginLeft: 30 }} animation=\"border\" />\n                </Container>\n                :\n                user ?\n                    <Container className={styles.paddingTop}>\n                        <Card>\n                            <Card.Body>\n                                <Row>\n                                    <Col>\n                                        <h2>@{username}</h2>\n                                        <h2>{user.name}</h2>\n                                    </Col>\n                                    <Col>\n                                        {user.credits == 1 ?\n                                            <h3>1 credit</h3>\n                                            :\n                                            <h3>{user.credits} credits</h3>\n                                        }\n\n                                    </Col>\n                                </Row>\n\n\n                                <hr></hr>\n\n                                <Row style={{ paddingLeft: 15 }}>\n                                    <h3 style={{ paddingRight: 15 }}>Channels</h3>\n                                    {userSelf ?\n                                        editSubjects ?\n                                            <Button variant=\"primary\" onClick={async () => {\n                                                setEditSubjects(false)\n                                                await firestore().collection('users').doc(session.auth?.uid).update({ actives: actives })\n\n                                            }}>Save</Button>\n                                            :\n                                            <Button variant=\"outline-dark\" onClick={() => { setEditSubjects(true) }}>Edit</Button>\n                                        :\n                                        <div></div>\n                                    }\n                                </Row>\n                                {\n                                    editSubjects ?\n                                        editSubjectsView()\n                                        :\n                                        actives ?\n                                            subjectsView()\n                                            :\n                                            <div></div>\n                                }\n                            </Card.Body>\n\n                        </Card>\n\n                        <h2 style={{ paddingTop: 50, paddingLeft: 22, paddingBottom: 15 }}>Post History</h2>\n\n                        {sortButton(sort)}\n\n                        {history\n                            ?\n                            <div>\n\n                                {feedView(history)}\n                                <Button variant='light' onClick={() => { getPosts(sort, userid, lastPost, history) }}>Load more</Button>\n                            </div>\n                            :\n                            historyDone ?\n                                <h3 style={{ paddingTop: 15 }}>No posts.</h3>\n                                :\n                                <div style={{ marginTop: 15 }}>\n                                    <Spinner style={{ marginTop: 30, marginLeft: 30 }} animation=\"border\" />\n                                </div>\n\n                        }\n\n                    </Container>\n                    :\n                    <Container className={styles.paddingTop}>\n                        <h1>User does not exist.</h1>\n                    </Container>\n            }\n\n\n\n        </div>\n    )\n}\n\nexport { ProfilePage }\n","import React, { useState, useEffect } from 'react'\nimport { useParams } from 'react-router-dom';\nimport { useFirebase, Firebase } from '../Firebase'\nimport { functions, auth, firestore } from 'firebase'\nimport { Navbar, Nav, Button, ButtonGroup, Container, Row, Col, Spinner, Jumbotron, Image, ProgressBar, OverlayTrigger, Popover, Carousel, Card, Form, Modal, InputGroup, FormControl } from 'react-bootstrap'\nimport { useSession } from '../Session'\nimport styles from './Question.module.css'\nimport { NavBar } from '../../constants'\n\nconst QuestionPage: React.FC = (props) => {\n    const firebase = useFirebase()\n    const session = useSession()\n\n    const { postid } = useParams()\n\n    const [self, setSelf] = useState<any>(null);\n    const [post, setPost] = useState<any>(null);\n    const [postSelf, setPostSelf] = useState<boolean>(false);\n\n    const [answer, setAnswer] = useState<string>(\"\")\n    const [comments, setComments] = useState<any[] | undefined>(undefined)\n    const [numComments, setNumComments] = useState<number>(0);\n\n    const [activeAnswer, setActiveAnswer] = useState<boolean>(false);\n\n    const [loadingDone, setLoadingDone] = useState<boolean>(false);\n    const [commentsDone, setCommentsDone] = useState<boolean>(false);\n\n    const [handling, setHandling] = useState<boolean>(false);\n\n    const [nowSeconds, setNowSeconds] = useState<number>(0);\n\n    const [timeMessage, setTimeMessage] = useState<string>('')\n\n    const [reply, setReply] = useState<string>('')\n    const [replyText, setReplyText] = useState<string>('')\n    const [replyHandling, setReplyHandling] = useState<boolean>(false);\n\n    const [changed, setChanged] = useState<boolean>(false);\n\n    const [upvoted, setUpvoted] = useState<string[]>([])\n    const [downvoted, setDownvoted] = useState<string[]>([])\n\n    const [awardModalShow, setAwardModalShow] = useState<boolean>(false)\n    const [award, setAward] = useState<number>(0)\n    const [awardCheck, setAwardCheck] = useState<boolean>(false)\n    const [awardHandling, setAwardHandling] = useState<boolean>(false)\n    const [err, setErr] = useState<string>('')\n\n    const [reportMessage, setReportMessage] = useState<string>('')\n    const [reportAuthorName, setReportAuthorName] = useState<string>('')\n    const [reportID, setReportID] = useState<string>('')\n    const [reportHandling, setReportHandling] = useState<boolean>(false)\n    const [reportDone, setReportDone] = useState<boolean>(false);\n\n    const [reportModalShow, setReportModalShow] = useState<boolean>(false)\n\n    const [commentAuthorName, setCommentAuthorName] = useState<string>('')\n    const [commentAuthor, setCommentAuthor] = useState<string>('')\n    const [commentID, setCommentID] = useState<string>('')\n\n    const getComments = async (id: string) => {\n        try {\n            var docList: any[] = []\n            const commentsList = await firebase.db.collection('comments').where('parent', '==', id).orderBy('upvotes', 'desc').limit(10).get()\n\n            console.log('commentsList = ', commentsList)\n            if (commentsList.empty || commentsList == null) {\n                console.log('No matching documents')\n                setCommentsDone(true)\n                return;\n            }\n\n            commentsList.forEach(doc => {\n                docList = [...docList, { id: doc.id, data: doc.data() }];\n            });\n\n            for (let i = 0; i < docList.length; i++) {\n                const doc = docList[i]\n                const replies = await getComments(doc.id)\n                docList[i] = { id: doc.id, data: doc.data, replies: replies }\n            }\n\n            return (docList)\n\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n    const handleAwardChange = (event: any) => {\n        const check = /^[0-9\\b]+$/;\n        setAward(event.target.value);\n        if (event.target.value.match(check)) {\n            setAwardCheck(true);\n            console.log('passCheck')\n        } else {\n            setAwardCheck(false);\n            console.log('failCheck')\n        }\n    }\n\n    const handleVote = (upvoteTrue: boolean, object: any) => {\n        var collect = 'comments'\n        if (object == post) {\n            const newObject = { data: post, id: postid }\n            object = newObject\n            collect = 'posts'\n        }\n        var upvoteList: string[] = []\n        var downvoteList: string[] = []\n        var upvoteIndex = -1\n        var downvoteIndex = -1\n        console.log('userDoc = ', self)\n        if (self.upvoted) {\n            upvoteList = upvoted\n            upvoteIndex = upvoteList.indexOf(object.id)\n        }\n        if (self.downvoted) {\n            downvoteList = downvoted\n            downvoteIndex = downvoteList.indexOf(object.id)\n        }\n\n        console.log('upvoteIndex = ', upvoteIndex)\n\n        console.log('upvoteList = ', upvoteList)\n\n        console.log('downvoteIndex = ', downvoteIndex)\n\n        console.log('downvoteList = ', downvoteList)\n\n        var upvotes: number;\n        if (object.data.upvotes) {\n            upvotes = object.data.upvotes\n        } else {\n            upvotes = 0\n        }\n\n        if (upvoteTrue) {\n\n            if (upvoteIndex == -1) {\n                if (downvoteIndex != -1) {\n                    downvoteList.splice(downvoteIndex, 1)\n                    firebase.db.collection('users').doc(session.auth?.uid).update({ downvoted: downvoteList })\n                    upvotes = upvotes + 1\n                }\n                upvoteList = [...upvoteList, object.id]\n                console.log('upvoteList after adding = ', upvoteList)\n                upvotes = upvotes + 1\n\n            } else {\n                upvoteList.splice(upvoteIndex, 1)\n                console.log('upvoteList after splice = ', upvoteList)\n                upvotes = upvotes - 1\n            }\n            firebase.db.collection('users').doc(session.auth?.uid).update({ upvoted: upvoteList })\n\n            firebase.db.collection(collect).doc(object.id).update({ upvotes: upvotes })\n            object.data.upvotes = upvotes;\n        } else {\n            if (downvoteIndex == -1) {\n                if (upvoteIndex != -1) {\n                    upvoteList.splice(upvoteIndex, 1)\n                    firebase.db.collection('users').doc(session.auth?.uid).update({ upvoted: upvoteList })\n                    upvotes = upvotes - 1\n                }\n                downvoteList = [...downvoteList, object.id]\n                console.log('downvoteList after adding = ', downvoteList)\n                upvotes = upvotes - 1\n            } else {\n                downvoteList.splice(downvoteIndex, 1)\n                console.log('downvoteList after splice = ', downvoteList)\n                upvotes = upvotes + 1\n            }\n\n\n            firebase.db.collection('users').doc(session.auth?.uid).update({ downvoted: downvoteList })\n            firebase.db.collection(collect).doc(object.id).update({ upvotes: upvotes })\n            object.data.upvotes = upvotes;\n        }\n\n\n        if (upvoteList) {\n            setUpvoted(upvoteList)\n        }\n        if (downvoteList) {\n            setDownvoted(downvoteList)\n        }\n    }\n\n    useEffect(() => {\n\n        const setAllComments = async () => {\n            const allComments = await firebase.db.collection('comments').where('thread', '==', postid).get()\n            setNumComments(allComments.size)\n        }\n\n        setAllComments()\n\n        var now = new Date();\n        var seconds = ((now.getTime()) * .001) >> 0;\n        setNowSeconds(seconds);\n\n        if (session.auth) {\n            const getSelf = async () => {\n                const selfDoc = await (await firestore().collection('users').doc(session.auth?.uid).get()).data()\n                setSelf(selfDoc)\n                if (selfDoc?.upvoted) {\n                    setUpvoted(selfDoc?.upvoted)\n                }\n                if (selfDoc?.downvoted) {\n                    setDownvoted(selfDoc?.downvoted)\n                }\n            }\n            getSelf();\n        }\n\n\n        const getPost = async () => {\n            try {\n                const postDoc = await (await firestore().collection('posts').doc(postid).get()).data()\n                console.log('postDoc = ', postDoc)\n\n                if (postDoc) {\n                    var time = seconds - postDoc?.timestamp.seconds;\n                    console.log('time = ', time)\n                    var message = ''\n                    if (time < 120) {\n                        message = 'about a minute ago'\n                    } else if (time < 3600) {\n                        message = `${Math.floor(time / 60)} minutes ago`\n                    } else if (time < 86400) {\n                        let curTime = Math.floor(time / 3600)\n                        if (curTime == 1) {\n                            message = 'about an hour ago'\n                        } else {\n                            message = `${curTime} hours ago`\n                        }\n                    } else {\n                        let curTime = Math.floor(time / 86400)\n                        if (curTime == 1) {\n                            message = 'yesterday'\n                        } else {\n                            message = `${curTime} days ago`\n                        }\n                    }\n\n                    setTimeMessage(message)\n                }\n\n                setPost(postDoc)\n                if (postDoc?.author == session?.auth?.uid) {\n                    setPostSelf(true)\n                }\n                const commentsTest = await getComments(postid);\n                console.log(commentsTest)\n                setComments(commentsTest)\n                setCommentsDone(true);\n                setLoadingDone(true)\n            } catch (e) {\n                console.log(e)\n                setLoadingDone(true)\n            }\n\n        }\n\n        getPost();\n    }, [session, firebase])\n\n\n    const handleAnswerChange = (event: any) => {\n        setAnswer(event.target.value)\n    }\n\n    const handleReplyChange = (event: any) => {\n        setReplyText(event.target.value)\n    }\n\n    const handleReplySubmit = async (event: any) => {\n        event.preventDefault()\n        setReplyHandling(true);\n        console.log(replyText)\n        const newReply = { comment: replyText, parent: reply, thread: postid, timestamp: firestore.Timestamp.now(), author: session?.auth?.uid, authorName: self.username, upvotes: 0, selected: 0 }\n        await functions().httpsCallable('createComment')(newReply).then(async () => {\n            setComments(await getComments(postid))\n            setNumComments(numComments + 1)\n            setCommentsDone(true);\n            setReplyHandling(false);\n            setReply('');\n        })\n    }\n\n    const handleSubmit = async (event: any) => {\n        event.preventDefault()\n        setHandling(true);\n        console.log(answer)\n        const newComment = { comment: answer, parent: postid, thread: postid, timestamp: firestore.Timestamp.now(), author: session?.auth?.uid, authorName: self.username, upvotes: 0, selected: 0 }\n        await functions().httpsCallable('createComment')(newComment).then(async () => {\n            setComments(await getComments(postid))\n            setNumComments(numComments + 1)\n            setCommentsDone(true);\n            setHandling(false);\n            setActiveAnswer(false);\n        })\n    }\n\n    const handleReportChange = (event: any) => {\n        setReportMessage(event.target.value);\n    }\n\n    /*\n    <Button variant=\"primary\" size=\"sm\" onClick={() => { functions().httpsCallable('chooseAwardCredits')({ author: object.data.author, bounty: post.bounty, post: postid, comment: object.id }) }}>Award</Button>\n    */\n    //a feed object\n    const feedCard = (object: { id: string; data: { comment: string; timestamp: { seconds: number, nanoseconds: number }; author: string; authorName: string; parent: string; thread: string; upvotes: number; selected: number }; replies: any[] }) => {\n        var time = nowSeconds - object.data.timestamp.seconds;\n        var message = ''\n        if (time < 120) {\n            message = 'about a minute ago'\n        } else if (time < 3600) {\n            message = `${Math.floor(time / 60)} minutes ago`\n        } else if (time < 86400) {\n            let curTime = Math.floor(time / 3600)\n            if (curTime == 1) {\n                message = 'about an hour ago'\n            } else {\n                message = `${curTime} hours ago`\n            }\n        } else {\n            let curTime = Math.floor(time / 86400)\n            if (curTime == 1) {\n                message = 'yesterday'\n            } else {\n                message = `${curTime} days ago`\n            }\n        }\n\n\n        return (\n\n            <div className={styles.borderLeft} style={{ marginBottom: 10, paddingLeft: 10, paddingTop: 10 }}>\n                \n                {object.data.selected > 0 ?\n                    <Row>\n                        <Col>\n                            <p style={{ fontSize: 20 }}>{`@${object.data.authorName}`}</p>\n                            <p className={styles.fontLess}> {object.data.comment}</p>\n                        </Col>\n                        <Col xs={3} md={2}>\n                            <Button variant=\"success\" size=\"sm\">{object.data.selected} cr.</Button>\n                        </Col>\n                    </Row>\n                    :\n                    postSelf ?\n                        <Row>\n                            <Col>\n                                <p style={{ fontSize: 20 }}>{`@${object.data.authorName}`}</p>\n                                <p className={styles.fontLess}> {object.data.comment}</p>\n                            </Col>\n                            <Col xs={3} md={2}>\n                                <Button variant=\"primary\" size=\"sm\" onClick={() => { \n                                    setCommentAuthorName(object.data.authorName)\n                                    setCommentAuthor(object.data.author)\n                                    setCommentID(object.id)\n                                    setAwardModalShow(true) }}>Award</Button>\n                            </Col>\n                        </Row>\n                        :\n                        <div>\n                            <p style={{ fontSize: 20 }}>{`@${object.data.authorName}`}</p>\n                            <p className={styles.fontLess}> {object.data.comment}</p>\n                        </div>\n\n                }\n\n\n\n                <p className={styles.fontLess}>\n                    <Button disabled={!session.auth} active={upvoted.includes(object.id)} size=\"sm\" variant=\"outline-dark\" onClick={() => {\n                        handleVote(true, object)\n                        setChanged(!changed)\n                    }}>\n                        ▲\n                    </Button>\n                    {' '}\n                    &nbsp;\n                    {object?.data?.upvotes ?\n                        object.data.upvotes\n                        :\n                        0\n                    }\n                    {' '}\n                    &nbsp;\n                    <Button disabled={!session.auth} active={downvoted.includes(object.id)} size=\"sm\" variant=\"outline-dark\" onClick={() => {\n                        handleVote(false, object)\n                        setChanged(!changed)\n                    }}>▼</Button>\n                    {' - '}\n                    <Button variant=\"light\" size=\"sm\" onClick={() => { setReply(object.id) }}>Reply</Button>\n                    {' '} - {message}\n                    {' - '}\n                    &nbsp;\n                    <Button disabled={!session.auth} size=\"sm\" variant='outline-danger' onClick={() => {\n                        setReportAuthorName(object.data.authorName)\n                        setReportID(object.id)\n                        setReportModalShow(true)\n                    }}>\n                        ⚐\n                    </Button>\n                </p>\n\n\n\n                {reply == object.id ?\n                    <Card>\n                        <Card.Body>\n                            <Form onSubmit={handleReplySubmit}>\n\n                                <Form.Group controlId=\"description\">\n                                    <Form.Control required as=\"textarea\" rows={3} placeholder={`Replying to @${object.data.authorName}...`} onChange={handleReplyChange} />\n                                </Form.Group>\n\n                                {replyHandling ?\n                                    <Button variant=\"primary\" style={{ marginTop: 15 }}>\n                                        <Spinner\n                                            as=\"span\"\n                                            animation=\"border\"\n                                            size=\"sm\"\n                                            role=\"status\"\n                                            aria-hidden=\"true\"\n                                        />\n                                    </Button>\n                                    :\n                                    <Button variant=\"primary\" type=\"submit\" style={{ marginTop: 15 }}>\n                                        Reply\n                                        </Button>\n                                }\n\n                            </Form>\n                        </Card.Body>\n                    </Card>\n                    :\n                    <div></div>\n                }\n                {object.replies && object.replies.length > 0 ?\n                    feedView(object.replies)\n                    :\n                    <div></div>}\n\n            </div>\n\n            //\n        )\n    }\n\n    //list of feed objects\n    const feedView = (feedList: { id: string; data: { comment: string; timestamp: { seconds: number; nanoseconds: number }; author: string; authorName: string; parent: string; thread: string; upvotes: number; selected: number }; replies: any[] }[]) => {\n        const feedItems = feedList.map((object: { id: string; data: { comment: string; timestamp: { seconds: number, nanoseconds: number }; author: string; authorName: string; parent: string; thread: string; upvotes: number; selected: number }; replies: any[] }) => <div key={object.id} style={{ paddingTop: 15 }}>{feedCard(object)}</div>\n        )\n        return feedItems\n    }\n\n    const channelView = (post: any) => {\n        const subjectObjects = post.channels?.map((d: string) => <p key={d}>{(post.channels.indexOf(d) == 0) ? `#${d}` : `, #${d}`}</p>)\n        return (\n            <div>\n                <Row style={{ marginLeft: 1 }}>{subjectObjects}</Row>\n\n            </div>\n        )\n    }\n\n    //console.log(\"Object.values(item) = \", Object.values(comments))\n\n    return (\n        <div>\n            <NavBar />\n                <Modal show={awardModalShow} onHide={() => { setAwardModalShow(false) }}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Award @{commentAuthorName}!</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        Awards cannot be taken back once submitted.\n                        \n                    </Modal.Body>\n                    <Modal.Footer>\n                        <InputGroup>\n                            <Form.Control placeholder=\"How many credits?\" onChange={handleAwardChange} value={award} />\n                            <Form.Text>{err}</Form.Text>\n                        </InputGroup>\n                        {awardHandling ? \n                            <Button disabled>\n                                <Spinner\n                                as=\"span\"\n                                animation=\"border\"\n                                size=\"sm\"\n                                role=\"status\"\n                                aria-hidden=\"true\"\n                            />\n                            </Button>\n                            :\n                            <Button onClick={() => {\n                                console.log('award = ', award)\n                                if (award > Number(post.bounty) + Number(self.credits)) {\n                                    setErr(`You have ${Number(post.bounty) + Number(self.credits)} credits to give.`)\n                                } else if (awardCheck == false || award < 1) {\n                                    setErr(`Input at least 1 credit.`)\n                                } else {\n                                    setAwardHandling(true)\n                                    functions().httpsCallable('chooseAwardCredits')({ author: commentAuthor, bounty: Number(post.bounty), post: postid, comment: commentID, award: Number(award) }).then(() => {\n                                        setAwardModalShow(false)\n                                        window.location.reload()\n                                    })\n                                }\n                            }}>Award</Button>\n                            }\n                        \n                    </Modal.Footer>\n                </Modal>\n\n            <Modal show={reportModalShow} onHide={() => {\n                setReportModalShow(false)\n                setReportDone(false)\n                setReportMessage('')\n            }}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Report @{reportAuthorName}</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    Let us know if this user is violating community agreements as outlined in our terms of service. Thanks!\n                    </Modal.Body>\n                <Modal.Footer>\n                    <InputGroup>\n                        <Form.Control as=\"textarea\" placeholder=\"What's the reason for reporting this user?\" rows={3} onChange={handleReportChange} value={reportMessage} />\n                    </InputGroup>\n                    {reportHandling ?\n                        <Button disabled variant='danger'>\n                            <Spinner\n                                as=\"span\"\n                                animation=\"border\"\n                                size=\"sm\"\n                                role=\"status\"\n                                aria-hidden=\"true\"\n                            />\n                        </Button>\n                        :\n                        reportDone ?\n                            <Button disabled variant='danger'>Thanks! You can close this window.</Button>\n\n                            :\n                            <Button variant='danger' onClick={async () => {\n                                setReportHandling(true);\n                                await functions().httpsCallable('createReport')({ post: reportID, reportMessage: reportMessage, submittedBy: session.auth?.uid, timestamp: firestore.Timestamp.now() }).then(() => {\n                                    setReportHandling(false);\n                                    setReportDone(true);\n                                })\n                            }}>Report\n                        </Button>\n                    }\n\n                </Modal.Footer>\n            </Modal>\n            {post ?\n                <Container className={styles.paddingTop}>\n                    <Card style={{ marginBottom: 30 }}>\n                        <Card.Body>\n                            <Row>\n                                <Col>\n                                    <Card.Title>{post?.title}</Card.Title>\n                                    <Card.Subtitle>{channelView(post)}</Card.Subtitle>\n                                    <Card.Text>{post?.desc}</Card.Text>\n                                </Col>\n                                <Col xs={3} sm={2} style={{ textAlign: 'center' }}>\n                                    <Button disabled={!session.auth} active={upvoted.includes(postid)} size=\"sm\" variant=\"outline-primary\" onClick={() => {\n                                        handleVote(true, post)\n                                        setChanged(!changed)\n                                    }}>\n                                        ▲\n                                    </Button>\n                                    <p>{post?.upvotes ?\n                                        post?.upvotes\n                                        :\n                                        0\n                                    }\n                                    </p>\n                                    <Button disabled={!session.auth} active={downvoted.includes(postid)} size=\"sm\" variant=\"outline-danger\" onClick={() => {\n                                        handleVote(false, post)\n                                        setChanged(!changed)\n                                    }}>▼</Button>\n\n                                    <Card bg=\"light\" style={{ marginTop: 15 }}>\n                                        {post?.bounty <= 0 ?\n                                            <Card.Title style={{ paddingTop: 10 }}>Claimed</Card.Title>\n                                            :\n                                            <Card.Title style={{ paddingTop: 10 }}>{post?.bounty} cr.</Card.Title>\n                                        }\n                                        \n                                    </Card>\n                                </Col>\n                            </Row>\n\n\n                            <Card.Text className={styles.fontLess} style={{ paddingTop: 10 }}>Posted by <a href={`/user/${post?.authorName}`}>{`@${post?.authorName}`}</a> {timeMessage}\n                            {' - '}\n                            &nbsp;\n                            <Button disabled={!session.auth} size=\"sm\" variant='outline-danger' onClick={() => {\n                                    setReportAuthorName(post.authorName)\n                                    setReportID(postid)\n                                    setReportModalShow(true)\n                                }}>\n                                    ⚐\n                            </Button>\n                            </Card.Text>\n                        </Card.Body>\n                    </Card>\n\n                    {session.auth ?\n                        activeAnswer ?\n\n                            <Form onSubmit={handleSubmit}>\n\n                                <Form.Group controlId=\"description\">\n                                    <Form.Label>Answer</Form.Label>\n                                    <Form.Control required as=\"textarea\" rows={3} placeholder=\"\" onChange={handleAnswerChange} />\n                                </Form.Group>\n\n                                {handling ?\n                                    <Button variant=\"primary\" style={{ marginTop: 15 }}>\n                                        <Spinner\n                                            as=\"span\"\n                                            animation=\"border\"\n                                            size=\"sm\"\n                                            role=\"status\"\n                                            aria-hidden=\"true\"\n                                        />\n                                    </Button>\n                                    :\n                                    <Button variant=\"primary\" type=\"submit\" style={{ marginTop: 15 }}>\n                                        Comment\n                                </Button>\n                                }\n\n                            </Form>\n                            :\n                            <Button variant=\"primary\" onClick={() => { setActiveAnswer(true) }}>Comment</Button>\n                        :\n                        <div></div>\n                    }\n\n\n                    <hr></hr>\n\n\n\n                    {comments ?\n                        <div>\n                            {numComments == 1 ?\n                                <h3 style={{ paddingTop: 30, paddingLeft: 22, paddingBottom: 15 }}>{numComments} comment</h3>\n                                :\n                                <h3 style={{ paddingTop: 30, paddingLeft: 22, paddingBottom: 15 }}>{numComments} comments</h3>\n                            }\n\n                            {feedView(comments)}\n                        </div>\n                        :\n                        commentsDone ?\n                            <div>\n                                <h3 style={{ paddingTop: 30, paddingLeft: 22, paddingBottom: 15 }}>{numComments} comments</h3>\n                            </div>\n                            :\n                            <Spinner style={{ marginTop: 30, marginLeft: 30 }} animation=\"border\" />\n                    }\n\n                </Container>\n                :\n                loadingDone ?\n                    <Container className={styles.paddingTop}>\n                        <h1>No post found.</h1>\n                    </Container>\n                    :\n                    <Container className={styles.paddingTop}>\n                        <Spinner style={{ marginTop: 30, marginLeft: 30 }} animation=\"border\" />\n                    </Container>\n            }\n\n        </div>\n    )\n}\n\n\nexport { QuestionPage }\n","import React, { useState, useEffect, useContext, useCallback } from 'react'\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n} from \"react-router-dom\"\n\nimport { ROUTES } from '../../constants'\nimport { HomePage } from '../Home'\nimport { ProfilePage } from '../Profile'\nimport { useFirebase } from '../Firebase'\nimport { useSession, SessionContext } from '../Session/'\nimport { QuestionPage } from '../Question'\n\nconst MainApp: React.FC = () => {\n    const session = useSession()\n\n    if (session.initializing) {\n        return (<div></div>)\n    }\n    return (\n        <Router>\n            <Switch>\n                <Route exact path={ROUTES.ROOT}>\n                    <HomePage />\n                </Route>\n                <Route path={ROUTES.USERNAME}>\n                    <ProfilePage />\n                </Route>\n                <Route path={ROUTES.COMMENTS}>\n                    <QuestionPage />\n                </Route>\n            </Switch>\n        </Router>\n    )\n}\n\n\nconst AppWithAuth: React.FC = () => {\n    const firebase = useFirebase()\n    const [authObject, setAuthObject] = useState(() => {\n        const currentUser = firebase.auth.currentUser\n        if (!currentUser) {\n            return {\n                initializing: true,\n                auth: null,\n            }\n        } else {\n            return {\n                initializing: false,\n                auth: currentUser,\n            }\n        }\n\n    })\n\n    useEffect(() => {\n        function onChange(newUser: any) {\n            console.log('New user detected in auth onChange: ', newUser)\n            if (newUser === null) {\n                // Not authenticated\n                console.log('Not authenticated')\n                setAuthObject({ initializing: false, auth: null })\n            } else {\n                // New authentication occurred\n                setAuthObject(prevState => {\n                    if (prevState.auth === null) {\n                        // Went from unauthenticated to authenticated\n                        console.log('Authenticated')\n                        return { initializing: false, auth: newUser }\n                    } else {\n                        // Bug: Went from authenticated to another authentication\n                        console.log('Bug: reauthenticated')\n                        return prevState\n                    }\n                })\n            }\n        }\n\n        // listen for auth state changes\n        const unsubscribe = firebase.auth.onAuthStateChanged(onChange)\n        // unsubscribe to the listener when unmounting\n\n        return () => {\n            unsubscribe()\n            // We loaded a prof and were listening to it\n        }\n    }, [firebase.auth])\n\n    return (\n        <SessionContext.Provider value={authObject}>\n            <MainApp />\n        </SessionContext.Provider>\n    )\n}\n\nconst AppWithTwitter: React.FC = () => {\n    const firebase = useFirebase()\n\n    const getTwitterResult = useCallback(\n        async () => {\n            // If already logged in, no need to check\n            if (firebase.auth.currentUser) {\n                return\n            }\n            try {\n                const result = await firebase.auth.getRedirectResult()\n                console.log('Received Redirect result: ', result)\n                const { user, additionalUserInfo, credential } = result\n                if (!user) {\n                    console.log('No Twitter Redirect Result!')\n                    return\n                }\n                console.log('Current user after redirect: ', firebase.auth.currentUser)\n                // Register user for first time\n            }\n            catch (error) {\n                var errorCode = error.code;\n                var errorMessage = error.message;\n                // The email of the user's account used.\n                var email = error.email;\n                // The firebase.auth.AuthCredential type that was used.\n                var credential = error.credential;\n                console.log(error)\n            }\n\n        }, [firebase.auth])\n\n    useEffect(() => {\n        console.log('Current user in Twitter Checking Component: ', firebase.auth.currentUser)\n        getTwitterResult()\n    }, [getTwitterResult, firebase.auth])\n\n    return (\n        <AppWithAuth />\n    )\n}\n\n\n\nexport default AppWithTwitter ","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { FirebaseContext, Firebase } from './components/Firebase';\n\nconst config = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <FirebaseContext.Provider value={new Firebase()}>\n      <App />\n    </FirebaseContext.Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paddingTop\":\"Question_paddingTop__3SnTv\",\"centerItems\":\"Question_centerItems__2niqs\",\"fontLess\":\"Question_fontLess__1iLQC\",\"opaqueLess\":\"Question_opaqueLess__2kYLQ\",\"refresh\":\"Question_refresh__vU4gl\",\"borderLeft\":\"Question_borderLeft__2Cpjz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paddingTop\":\"Profile_paddingTop__3kNOc\",\"centerItems\":\"Profile_centerItems__3xB3O\",\"fontLess\":\"Profile_fontLess__1fK0e\",\"opaqueLess\":\"Profile_opaqueLess__DR6mh\",\"refresh\":\"Profile_refresh__Vh51B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paddingTop\":\"Home_paddingTop__lwuR_\",\"centerItems\":\"Home_centerItems__11x6e\",\"fontLess\":\"Home_fontLess__3aF4X\",\"opaqueLess\":\"Home_opaqueLess__1EMYG\",\"refresh\":\"Home_refresh__2Epj3\",\"aNoStyle\":\"Home_aNoStyle__3zzT_\"};"],"sourceRoot":""}